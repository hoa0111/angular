2023-10-12 09:20:15 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 28264 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 09:20:15 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 09:20:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 09:20:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 JPA repository interfaces.
2023-10-12 09:20:16 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 09:20:16 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 09:20:16 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 09:20:16 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 09:20:16 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1078 ms
2023-10-12 09:20:16 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 09:20:16 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 09:20:16 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 09:20:16 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 09:20:16 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 09:20:17 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@e162a35
2023-10-12 09:20:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 09:20:17 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 09:20:17 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 09:20:17 DEBUG org.hibernate.SQL - 
    create table projects (
        id serial not null,
        created_date timestamp(6),
        modified_date timestamp(6),
        money bytea,
        name varchar(255),
        start_date timestamp(6),
        leader_id integer,
        primary key (id)
    )
2023-10-12 09:20:17 DEBUG org.hibernate.SQL - 
    create table roles (
        id serial not null,
        created_date timestamp(6),
        modified_date timestamp(6),
        name varchar(255),
        primary key (id)
    )
2023-10-12 09:20:17 DEBUG org.hibernate.SQL - 
    create table tasks (
        id serial not null,
        created_date timestamp(6),
        modified_date timestamp(6),
        description varchar(255),
        name varchar(255),
        priority integer,
        status integer,
        project_id integer,
        user_id integer,
        primary key (id)
    )
2023-10-12 09:20:17 DEBUG org.hibernate.SQL - 
    create table user_role (
        user_id integer not null,
        role_id integer not null,
        primary key (user_id, role_id)
    )
2023-10-12 09:20:17 DEBUG org.hibernate.SQL - 
    create table users (
        id serial not null,
        created_date timestamp(6),
        modified_date timestamp(6),
        email varchar(255),
        password varchar(255),
        username varchar(255),
        project_id integer,
        primary key (id)
    )
2023-10-12 09:20:17 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK_r43af9ap4edm43mmtq01oddj6
2023-10-12 09:20:18 WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2023-10-12 09:20:18 WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "uk_r43af9ap4edm43mmtq01oddj6" of relation "users" does not exist, skipping
2023-10-12 09:20:18 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2023-10-12 09:20:18 DEBUG org.hibernate.SQL - 
    alter table if exists projects 
       add constraint FK7uqjwo7rwcmh3grohbxf6aojx 
       foreign key (leader_id) 
       references users
2023-10-12 09:20:18 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       add constraint FKsfhn82y57i3k9uxww1s007acc 
       foreign key (project_id) 
       references projects
2023-10-12 09:20:18 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       add constraint FK6s1ob9k4ihi75xbxe2w0ylsdh 
       foreign key (user_id) 
       references users
2023-10-12 09:20:18 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       add constraint FKt7e7djp752sqn6w22i6ocqy6q 
       foreign key (role_id) 
       references roles
2023-10-12 09:20:18 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       add constraint FKj345gk1bovqvfame88rcx7yyx 
       foreign key (user_id) 
       references users
2023-10-12 09:20:18 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKj4xjs6i0exxcgearpuykol477 
       foreign key (project_id) 
       references projects
2023-10-12 09:20:18 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:20:18 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 09:20:18 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 09:20:18 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 09:20:18 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 09:20:18 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/**
2023-10-12 09:20:18 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 09:20:18 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 09:20:18 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 09:20:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 3 mappings in 'requestMappingHandlerMapping'
2023-10-12 09:20:18 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 09:20:18 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@36bd07ec, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@85b9f9c, org.springframework.security.web.context.SecurityContextHolderFilter@29811d4d, org.springframework.security.web.header.HeaderWriterFilter@362e6fe, org.springframework.security.web.authentication.logout.LogoutFilter@11b74ecb, vn.tholv.web.config.filter.JwtAuthFilter@404566e7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56fc2cea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@e30a8ef, org.springframework.security.web.session.SessionManagementFilter@687d31a9, org.springframework.security.web.access.ExceptionTranslationFilter@46067a74, org.springframework.security.web.access.intercept.AuthorizationFilter@402fdef1]
2023-10-12 09:20:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 09:20:18 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 09:20:18 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 09:20:18 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.936 seconds (process running for 4.462)
2023-10-12 09:30:01 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 09:30:01 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 09:30:01 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 09:30:01 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 09:30:01 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 09:30:01 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4509414e
2023-10-12 09:30:01 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1f3f0d25
2023-10-12 09:30:01 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 09:30:01 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-10-12 09:30:01 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:30:01 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:30:01 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:30:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:30:01 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception
java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.userdetails.UserDetails.getUsername()" because "userDetails" is null
	at vn.tholv.web.core.base.service.JwtServiceImpl.validateToken(JwtServiceImpl.java:59)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 09:30:01 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 09:30:01 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 09:30:01 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 09:30:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 09:30:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:30:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 09:30:01 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 09:30:01 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 09:30:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:30:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:30:09 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:30:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:30:09 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception
java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.userdetails.UserDetails.getUsername()" because "userDetails" is null
	at vn.tholv.web.core.base.service.JwtServiceImpl.validateToken(JwtServiceImpl.java:59)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 09:30:09 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 09:30:09 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 09:30:09 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 09:30:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 09:30:09 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:30:09 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 09:30:09 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 09:30:09 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 09:31:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:31:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 09:31:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 09:31:43 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 25328 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 09:31:43 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 09:31:44 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 09:31:44 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2023-10-12 09:31:44 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 09:31:44 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 09:31:44 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 09:31:44 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 09:31:44 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1207 ms
2023-10-12 09:31:44 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 09:31:44 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 09:31:44 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 09:31:45 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 09:31:45 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 09:31:45 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3321291a
2023-10-12 09:31:45 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 09:31:45 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 09:31:46 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 09:31:46 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:31:46 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 09:31:47 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 09:31:47 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/**
2023-10-12 09:31:47 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 09:31:47 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/**
2023-10-12 09:31:47 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 09:31:47 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 09:31:47 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 09:31:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 3 mappings in 'requestMappingHandlerMapping'
2023-10-12 09:31:47 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 09:31:47 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3545c913, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d00e30e, org.springframework.security.web.context.SecurityContextHolderFilter@6e3acd7, org.springframework.security.web.header.HeaderWriterFilter@6f70015, org.springframework.security.web.authentication.logout.LogoutFilter@3ec6f3f1, vn.tholv.web.config.filter.JwtAuthFilter@35d53cd8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47f4dc8d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@689fcf08, org.springframework.security.web.session.SessionManagementFilter@4eb3b690, org.springframework.security.web.access.ExceptionTranslationFilter@30f99ca1, org.springframework.security.web.access.intercept.AuthorizationFilter@69a031a4]
2023-10-12 09:31:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 09:31:47 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 09:31:47 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 09:31:47 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.6 seconds (process running for 5.128)
2023-10-12 09:32:25 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 09:32:25 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 09:32:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 09:32:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 09:32:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 09:32:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3f910f36
2023-10-12 09:32:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@53570fff
2023-10-12 09:32:25 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 09:32:25 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 09:32:25 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:32:25 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:32:25 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:32:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:32:26 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception
java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.userdetails.UserDetails.getUsername()" because "userDetails" is null
	at vn.tholv.web.core.base.service.JwtServiceImpl.validateToken(JwtServiceImpl.java:59)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 09:32:26 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 09:32:26 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 09:32:26 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 09:32:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 09:32:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:32:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 09:32:26 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 09:32:26 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 09:33:01 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:34:42 WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m57s519ms422µs700ns).
2023-10-12 09:34:43 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:34:43 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:34:43 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:34:43 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception
java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.userdetails.UserDetails.getUsername()" because "userDetails" is null
	at vn.tholv.web.core.base.service.JwtServiceImpl.validateToken(JwtServiceImpl.java:59)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 09:34:43 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 09:34:43 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 09:34:43 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 09:34:43 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 09:34:43 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:34:43 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 09:34:43 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 09:34:43 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 09:34:43 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:34:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 09:34:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 09:34:45 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 3220 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 09:34:45 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 09:34:45 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 09:34:46 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.
2023-10-12 09:34:46 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 09:34:46 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 09:34:46 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 09:34:46 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 09:34:46 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1259 ms
2023-10-12 09:34:46 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 09:34:46 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 09:34:46 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 09:34:46 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 09:34:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 09:34:47 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a9869a8
2023-10-12 09:34:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 09:34:47 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 09:34:47 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 09:34:48 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:34:48 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 09:34:48 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 09:34:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/**
2023-10-12 09:34:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 09:34:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 09:34:48 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 09:34:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 09:34:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 09:34:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 3 mappings in 'requestMappingHandlerMapping'
2023-10-12 09:34:48 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 09:34:48 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4d73d3d1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@eef6e, org.springframework.security.web.context.SecurityContextHolderFilter@21457b14, org.springframework.security.web.header.HeaderWriterFilter@11b74ecb, org.springframework.security.web.authentication.logout.LogoutFilter@6e70861, vn.tholv.web.config.filter.JwtAuthFilter@11896af6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e1ae693, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e0600a4, org.springframework.security.web.session.SessionManagementFilter@26a004ed, org.springframework.security.web.access.ExceptionTranslationFilter@6ab6ec33, org.springframework.security.web.access.intercept.AuthorizationFilter@818a514]
2023-10-12 09:34:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 09:34:48 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 09:34:48 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 09:34:48 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.054 seconds (process running for 4.534)
2023-10-12 09:35:06 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 09:35:06 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 09:35:06 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 09:35:06 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 09:35:06 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 09:35:06 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5c7b504
2023-10-12 09:35:06 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6bf34912
2023-10-12 09:35:06 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 09:35:06 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-10-12 09:35:06 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:35:13 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:35:13 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:35:14 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:35:14 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:35:14 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 09:35:14 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 09:35:14 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleResourceNotFoundException(Exception)
2023-10-12 09:35:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:35:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@723dfd31]
2023-10-12 09:35:14 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/save.]
2023-10-12 09:35:14 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:35:25 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:35:34 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:35:34 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:35:35 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:35:35 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception
java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.userdetails.UserDetails.getUsername()" because "userDetails" is null
	at vn.tholv.web.core.base.service.JwtServiceImpl.validateToken(JwtServiceImpl.java:59)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 09:35:35 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 09:35:35 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 09:35:35 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 09:35:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 09:35:35 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:35:35 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 09:35:35 ICT 2023, status=500, error=Internal Server Error, path=/api/v2/auth}]
2023-10-12 09:35:35 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 09:36:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:36:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 09:36:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 09:36:11 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 26752 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 09:36:11 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 09:36:12 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 09:36:12 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 5 JPA repository interfaces.
2023-10-12 09:36:13 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 09:36:13 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 09:36:13 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 09:36:13 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 09:36:13 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1312 ms
2023-10-12 09:36:13 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 09:36:13 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 09:36:13 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 09:36:13 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 09:36:13 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 09:36:13 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ff03361
2023-10-12 09:36:13 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 09:36:13 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 09:36:14 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 09:36:14 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:36:15 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 09:36:15 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 09:36:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 09:36:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 09:36:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 09:36:15 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 09:36:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 09:36:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 09:36:15 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 3 mappings in 'requestMappingHandlerMapping'
2023-10-12 09:36:15 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 09:36:15 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3cdc5155, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@195888a6, org.springframework.security.web.context.SecurityContextHolderFilter@47f4dc8d, org.springframework.security.web.header.HeaderWriterFilter@613f48de, org.springframework.security.web.authentication.logout.LogoutFilter@57859e2c, vn.tholv.web.config.filter.JwtAuthFilter@396ec737, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738153d8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a3272e0, org.springframework.security.web.session.SessionManagementFilter@44bd7f24, org.springframework.security.web.access.ExceptionTranslationFilter@6f70015, org.springframework.security.web.access.intercept.AuthorizationFilter@4b9dd787]
2023-10-12 09:36:15 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 09:36:15 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 09:36:15 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 09:36:15 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.473 seconds (process running for 5.034)
2023-10-12 09:38:09 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 09:38:09 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 09:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 09:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 09:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 09:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6421bc7e
2023-10-12 09:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3c7787a7
2023-10-12 09:38:09 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 09:38:09 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 09:38:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:38:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:38:09 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:38:09 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:38:09 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:38:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:38:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@34a58d62]
2023-10-12 09:38:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:38:09 DEBUG o.s.s.a.DefaultAuthenticationEventPublisher - No event was found for the exception org.springframework.security.authentication.InternalAuthenticationServiceException
2023-10-12 09:38:09 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:38:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:38:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@7f93afe6]
2023-10-12 09:38:09 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 09:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:39:17 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:39:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 09:39:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 09:39:21 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 29536 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 09:39:21 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 09:39:22 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 09:39:22 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 5 JPA repository interfaces.
2023-10-12 09:39:22 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 09:39:22 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 09:39:22 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 09:39:22 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 09:39:22 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1091 ms
2023-10-12 09:39:22 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 09:39:22 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 09:39:22 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 09:39:23 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 09:39:23 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 09:39:23 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36f6d25c
2023-10-12 09:39:23 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 09:39:23 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 09:39:24 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 09:39:24 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:39:24 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 09:39:24 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 09:39:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 09:39:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 09:39:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 09:39:24 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 09:39:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 09:39:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 09:39:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 3 mappings in 'requestMappingHandlerMapping'
2023-10-12 09:39:25 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 09:39:25 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@419ece7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@427c2c96, org.springframework.security.web.context.SecurityContextHolderFilter@1d5fc340, org.springframework.security.web.header.HeaderWriterFilter@36bd07ec, org.springframework.security.web.authentication.logout.LogoutFilter@4d73d3d1, vn.tholv.web.config.filter.JwtAuthFilter@156f0281, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33ce081a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d8751de, org.springframework.security.web.session.SessionManagementFilter@30f99ca1, org.springframework.security.web.access.ExceptionTranslationFilter@69e8f7a5, org.springframework.security.web.access.intercept.AuthorizationFilter@7a3f3bc4]
2023-10-12 09:39:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 09:39:25 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 09:39:25 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 09:39:25 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.13 seconds (process running for 4.662)
2023-10-12 09:39:46 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 09:39:46 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 09:39:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 09:39:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 09:39:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 09:39:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@27f4761b
2023-10-12 09:39:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2eb0932c
2023-10-12 09:39:46 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 09:39:46 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 09:39:46 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:39:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:39:47 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:39:47 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:39:47 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:39:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:39:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@22c4915f]
2023-10-12 09:39:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:39:47 DEBUG o.s.s.a.DefaultAuthenticationEventPublisher - No event was found for the exception org.springframework.security.authentication.InternalAuthenticationServiceException
2023-10-12 09:39:47 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:39:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:39:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@6bd84403]
2023-10-12 09:39:47 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 09:39:47 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:41:00 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:41:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 09:41:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 09:41:04 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 15920 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 09:41:04 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 09:41:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 09:41:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 JPA repository interfaces.
2023-10-12 09:41:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 09:41:06 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 09:41:06 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 09:41:06 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 09:41:06 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1523 ms
2023-10-12 09:41:06 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 09:41:06 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 09:41:06 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 09:41:06 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 09:41:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 09:41:06 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@40f9f60d
2023-10-12 09:41:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 09:41:06 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 09:41:07 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 09:41:07 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:41:08 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 09:41:08 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 09:41:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 09:41:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 09:41:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 09:41:08 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 09:41:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 09:41:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 09:41:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 3 mappings in 'requestMappingHandlerMapping'
2023-10-12 09:41:08 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 09:41:08 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7004cd44, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@495e1ad1, org.springframework.security.web.context.SecurityContextHolderFilter@2b6a4da7, org.springframework.security.web.header.HeaderWriterFilter@6ab6ec33, org.springframework.security.web.authentication.logout.LogoutFilter@35d62807, vn.tholv.web.config.filter.JwtAuthFilter@11896af6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21457b14, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e484bd, org.springframework.security.web.session.SessionManagementFilter@36bd07ec, org.springframework.security.web.access.ExceptionTranslationFilter@73476e2d, org.springframework.security.web.access.intercept.AuthorizationFilter@2bf2523f]
2023-10-12 09:41:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 09:41:08 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 09:41:08 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 09:41:08 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.774 seconds (process running for 5.302)
2023-10-12 09:41:59 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 09:41:59 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 09:41:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 09:41:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 09:41:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 09:41:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@48b744fd
2023-10-12 09:41:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2027d56f
2023-10-12 09:41:59 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 09:41:59 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 09:41:59 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:41:59 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:41:59 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:41:59 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:41:59 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:41:59 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 09:41:59 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 09:41:59 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleResourceNotFoundException(Exception)
2023-10-12 09:41:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:41:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@33df0a9c]
2023-10-12 09:41:59 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user/save.]
2023-10-12 09:41:59 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:43:49 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:43:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 09:43:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 09:43:53 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 14596 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 09:43:53 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 09:43:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 09:43:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 5 JPA repository interfaces.
2023-10-12 09:43:54 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 09:43:54 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 09:43:54 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 09:43:54 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 09:43:54 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1101 ms
2023-10-12 09:43:54 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 09:43:54 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 09:43:54 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 09:43:55 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 09:43:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 09:43:55 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@153cfd86
2023-10-12 09:43:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 09:43:55 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 09:43:55 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 09:43:56 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:43:56 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 09:43:56 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 09:43:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 09:43:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 09:43:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 09:43:56 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 09:43:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 09:43:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 09:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 09:43:56 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 09:43:56 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@aaf4375, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f2a5064, org.springframework.security.web.context.SecurityContextHolderFilter@238d27ef, org.springframework.security.web.header.HeaderWriterFilter@818a514, org.springframework.security.web.authentication.logout.LogoutFilter@489c15e2, vn.tholv.web.config.filter.JwtAuthFilter@502b9399, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ec6f3f1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1dfd6023, org.springframework.security.web.session.SessionManagementFilter@1a3611b1, org.springframework.security.web.access.ExceptionTranslationFilter@2bf2523f, org.springframework.security.web.access.intercept.AuthorizationFilter@193792e6]
2023-10-12 09:43:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 09:43:56 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 09:43:56 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 09:43:56 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.823 seconds (process running for 4.301)
2023-10-12 09:44:31 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 09:44:31 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 09:44:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 09:44:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 09:44:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 09:44:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1fb379e4
2023-10-12 09:44:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4c81e7c2
2023-10-12 09:44:31 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 09:44:31 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 09:44:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:44:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:44:31 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:44:31 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:44:31 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:44:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 09:44:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@22f40f27]
2023-10-12 09:44:31 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:44:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:44:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@73c6d518]
2023-10-12 09:44:31 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt]
2023-10-12 09:44:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:45:40 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:45:40 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:45:40 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:45:40 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:45:40 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:45:40 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 09:45:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@37fc8a93]
2023-10-12 09:45:40 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:45:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:45:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@393b621c]
2023-10-12 09:45:40 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt]
2023-10-12 09:45:40 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:45:47 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:45:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:45:47 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:45:47 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:45:47 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:45:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 09:45:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@37c70703]
2023-10-12 09:45:47 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:45:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:45:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@3d3f6c73]
2023-10-12 09:45:47 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt]
2023-10-12 09:45:47 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:45:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:45:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:45:58 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:45:58 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:45:58 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:45:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 09:45:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@7c9501a7]
2023-10-12 09:45:59 DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.created_date,
        r1_0.modified_date,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2023-10-12 09:45:59 DEBUG org.hibernate.SQL - 
    insert 
    into
        roles
        (created_date, modified_date, name) 
    values
        (?, ?, ?)
2023-10-12 09:45:59 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_date, email, modified_date, password, project_id, username) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 09:45:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:45:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.User@7c9501a7]
2023-10-12 09:45:59 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:46:42 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:46:42 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:46:42 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:46:42 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:46:42 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:46:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 09:46:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@324826a8]
2023-10-12 09:46:42 DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.created_date,
        r1_0.modified_date,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2023-10-12 09:46:42 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_date, email, modified_date, password, project_id, username) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 09:46:42 DEBUG org.hibernate.SQL - 
    insert 
    into
        user_role
        (user_id, role_id) 
    values
        (?, ?)
2023-10-12 09:46:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:46:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.User@324826a8]
2023-10-12 09:46:42 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:47:39 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:47:39 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:47:39 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:47:39 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:47:39 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:47:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 09:47:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@aa55f95]
2023-10-12 09:47:39 DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.created_date,
        r1_0.modified_date,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2023-10-12 09:47:39 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_date, email, modified_date, password, project_id, username) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 09:47:39 DEBUG org.hibernate.SQL - 
    insert 
    into
        user_role
        (user_id, role_id) 
    values
        (?, ?)
2023-10-12 09:47:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:47:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.User@aa55f95]
2023-10-12 09:47:39 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:48:42 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:48:42 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:48:42 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:48:42 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:48:42 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:48:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 09:48:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@6903907a]
2023-10-12 09:48:42 DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.created_date,
        r1_0.modified_date,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2023-10-12 09:48:42 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_date, email, modified_date, password, project_id, username) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 09:48:42 DEBUG org.hibernate.SQL - 
    insert 
    into
        user_role
        (user_id, role_id) 
    values
        (?, ?)
2023-10-12 09:48:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:48:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.User@6903907a]
2023-10-12 09:48:42 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:48:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:48:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:48:53 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:48:53 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:48:53 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:48:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:48:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@7c1437f7]
2023-10-12 09:48:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:48:53 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 09:48:53 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 09:48:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:48:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{refreshToken=Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0aG9sdjA1MDgiLCJpYXQiOjE2OTcwNzg5MzMsImV4cCI6MT (truncated)...]
2023-10-12 09:48:53 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:51:21 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:51:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 09:51:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 09:51:25 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 15440 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 09:51:25 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 09:51:26 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 09:51:26 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 5 JPA repository interfaces.
2023-10-12 09:51:26 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 09:51:27 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 09:51:27 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 09:51:27 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 09:51:27 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1168 ms
2023-10-12 09:51:27 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 09:51:27 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 09:51:27 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 09:51:27 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 09:51:27 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 09:51:27 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a9b92c6
2023-10-12 09:51:27 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 09:51:27 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 09:51:28 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 09:51:28 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:51:29 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 09:51:29 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 09:51:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 09:51:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 09:51:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 09:51:29 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 09:51:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 09:51:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 09:51:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 09:51:29 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 09:51:29 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@48590849, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c38f4de, org.springframework.security.web.context.SecurityContextHolderFilter@4d73d3d1, org.springframework.security.web.header.HeaderWriterFilter@1df8e685, org.springframework.security.web.authentication.logout.LogoutFilter@439b0198, vn.tholv.web.config.filter.JwtAuthFilter@2e4d252, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56b66cc6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f076c53, org.springframework.security.web.session.SessionManagementFilter@818a514, org.springframework.security.web.access.ExceptionTranslationFilter@6db2a260, org.springframework.security.web.access.intercept.AuthorizationFilter@22c0c0bc]
2023-10-12 09:51:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 09:51:29 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 09:51:29 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 09:51:29 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.337 seconds (process running for 4.876)
2023-10-12 09:53:59 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 09:53:59 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 09:53:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 09:53:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 09:53:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 09:53:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@69374e28
2023-10-12 09:53:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@77d42ed7
2023-10-12 09:53:59 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 09:53:59 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 09:53:59 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:53:59 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:53:59 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:53:59 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:53:59 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:53:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:53:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@2b02090c]
2023-10-12 09:53:59 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:53:59 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 09:53:59 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 09:53:59 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:53:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:53:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@113c4c70]
2023-10-12 09:53:59 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 09:53:59 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:54:17 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:54:17 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:54:17 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:54:17 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:54:17 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:54:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:54:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@6903907a]
2023-10-12 09:54:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:54:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:54:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@5b323d89]
2023-10-12 09:54:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Xác thực captcha thất bại]
2023-10-12 09:54:17 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:54:45 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:54:45 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:54:45 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:54:45 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:54:45 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:54:45 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:54:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@78d83295]
2023-10-12 09:54:45 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:54:45 DEBUG o.s.s.a.DefaultAuthenticationEventPublisher - No event was found for the exception org.springframework.security.authentication.InternalAuthenticationServiceException
2023-10-12 09:54:45 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:54:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:54:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@28b10722]
2023-10-12 09:54:45 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 09:54:45 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:55:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:55:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 09:55:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 09:55:45 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 24292 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 09:55:45 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 09:55:45 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 09:55:45 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 5 JPA repository interfaces.
2023-10-12 09:55:46 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 09:55:46 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 09:55:46 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 09:55:46 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 09:55:46 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1201 ms
2023-10-12 09:55:46 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 09:55:46 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 09:55:46 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 09:55:46 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 09:55:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 09:55:47 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4ced17f3
2023-10-12 09:55:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 09:55:47 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 09:55:48 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 09:55:48 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 09:55:48 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 09:55:48 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 09:55:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 09:55:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 09:55:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 09:55:48 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 09:55:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 09:55:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 09:55:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 09:55:49 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 09:55:49 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@22c0c0bc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36a25457, org.springframework.security.web.context.SecurityContextHolderFilter@818a514, org.springframework.security.web.header.HeaderWriterFilter@7bc3c59f, org.springframework.security.web.authentication.logout.LogoutFilter@4d204b30, vn.tholv.web.config.filter.JwtAuthFilter@2e4d252, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@495e1ad1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d73d3d1, org.springframework.security.web.session.SessionManagementFilter@b0e6d4e, org.springframework.security.web.access.ExceptionTranslationFilter@738153d8, org.springframework.security.web.access.intercept.AuthorizationFilter@3284de45]
2023-10-12 09:55:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 09:55:49 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 09:55:49 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 09:55:49 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.186 seconds (process running for 5.79)
2023-10-12 09:57:50 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 09:57:50 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 09:57:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 09:57:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 09:57:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 09:57:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@c6653e
2023-10-12 09:57:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3ae91bcc
2023-10-12 09:57:50 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 09:57:50 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 09:57:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:57:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:57:50 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:57:50 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:57:50 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:57:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:57:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@484e70c0]
2023-10-12 09:57:51 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:57:51 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 09:57:51 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 09:57:51 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:57:51 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:57:51 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@6d31ad81]
2023-10-12 09:57:51 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 09:57:51 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:58:19 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 09:58:19 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 09:58:19 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 09:58:19 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 09:58:19 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 09:58:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 09:58:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@1c5b15b5]
2023-10-12 09:58:20 DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.created_date,
        r1_0.modified_date,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2023-10-12 09:58:20 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_date, email, modified_date, password, project_id, username) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 09:58:20 DEBUG org.hibernate.SQL - 
    insert 
    into
        user_role
        (user_id, role_id) 
    values
        (?, ?)
2023-10-12 09:58:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:58:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.User@1c5b15b5]
2023-10-12 09:58:20 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:58:32 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:58:32 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:58:32 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:58:32 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:58:32 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:58:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:58:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@37c70703]
2023-10-12 09:58:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:58:33 DEBUG o.s.s.a.DefaultAuthenticationEventPublisher - No event was found for the exception org.springframework.security.authentication.InternalAuthenticationServiceException
2023-10-12 09:58:33 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:58:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:58:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@1c5ce644]
2023-10-12 09:58:33 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 09:58:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:58:46 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:58:46 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:58:46 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:58:46 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:58:46 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:58:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:58:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@7c9501a7]
2023-10-12 09:58:47 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:58:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:58:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@305a7a54]
2023-10-12 09:58:47 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Xác thực captcha thất bại]
2023-10-12 09:58:47 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:59:02 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:59:02 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:59:02 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:59:02 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:59:02 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:59:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:59:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@52e371d0]
2023-10-12 09:59:02 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:59:02 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 09:59:02 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 09:59:02 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:59:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:59:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@5f66fa48]
2023-10-12 09:59:02 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 09:59:02 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:59:03 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:59:03 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:59:03 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:59:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:59:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@6d530f8c]
2023-10-12 09:59:04 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:59:04 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:59:04 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@61d9e7a7]
2023-10-12 09:59:04 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Xác thực captcha thất bại]
2023-10-12 09:59:04 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:59:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:59:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:59:18 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:59:18 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:59:18 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:59:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:59:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@72d3c7dd]
2023-10-12 09:59:18 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:59:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:59:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@3d293dcc]
2023-10-12 09:59:18 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Xác thực captcha thất bại]
2023-10-12 09:59:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 09:59:57 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 09:59:57 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 09:59:57 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 09:59:57 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 09:59:57 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 09:59:57 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 09:59:57 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@38efea27]
2023-10-12 09:59:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 09:59:58 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 09:59:58 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 09:59:58 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 09:59:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 09:59:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@402ab745]
2023-10-12 09:59:58 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 09:59:58 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:01:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:01:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:01:18 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:01:18 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:01:18 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:01:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:01:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@38fe870a]
2023-10-12 10:01:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:01:23 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:01:23 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2023-10-12 10:02:28 WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m11s717ms852µs700ns).
2023-10-12 10:02:28 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:02:28 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:02:28 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@38cb8da9]
2023-10-12 10:02:28 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 10:02:28 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:02:28 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:02:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 10:02:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 10:02:31 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 11388 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 10:02:31 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 10:02:31 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 10:02:32 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.
2023-10-12 10:02:32 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 10:02:32 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 10:02:32 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 10:02:32 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 10:02:32 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1178 ms
2023-10-12 10:02:32 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 10:02:32 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 10:02:32 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 10:02:32 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 10:02:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 10:02:33 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76af34b5
2023-10-12 10:02:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 10:02:33 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 10:02:34 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 10:02:34 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:02:34 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 10:02:35 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 10:02:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 10:02:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 10:02:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 10:02:35 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 10:02:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 10:02:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 10:02:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 10:02:35 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 10:02:35 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2c7ac998, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f6936cc, org.springframework.security.web.context.SecurityContextHolderFilter@4b9dd787, org.springframework.security.web.header.HeaderWriterFilter@8cd2bb5, org.springframework.security.web.authentication.logout.LogoutFilter@2f2a5064, vn.tholv.web.config.filter.JwtAuthFilter@1bed61d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d00e30e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3cdc5155, org.springframework.security.web.session.SessionManagementFilter@3a2881d6, org.springframework.security.web.access.ExceptionTranslationFilter@2e8eafb2, org.springframework.security.web.access.intercept.AuthorizationFilter@4a532271]
2023-10-12 10:02:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 10:02:35 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 10:02:35 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 10:02:35 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.525 seconds (process running for 5.062)
2023-10-12 10:02:58 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 10:02:58 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 10:02:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 10:02:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 10:02:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 10:02:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@24be6e34
2023-10-12 10:02:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@70fe33fa
2023-10-12 10:02:58 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 10:02:58 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 10:02:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:02:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:02:58 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:02:58 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:02:58 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:02:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:02:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@2b02090c]
2023-10-12 10:03:05 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:03:05 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:03:05 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2023-10-12 10:03:05 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:03:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:03:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@4d060dde]
2023-10-12 10:03:05 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:344)
	at org.apache.catalina.connector.OutputBuffer.flushByteBuffer(OutputBuffer.java:773)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:294)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:267)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:524)
	at java.base/java.io.FilterOutputStream.flush(FilterOutputStream.java:153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1200)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1063)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:190)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:420)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:74)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1346)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:764)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:589)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:533)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:540)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:110)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:193)
	at org.apache.coyote.Response.doWrite(Response.java:616)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:331)
	... 106 common frames omitted
2023-10-12 10:03:05 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Đăng nhập thất bại
2023-10-12 10:03:05 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:03:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 10:03:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 10:03:07 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 3388 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 10:03:07 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 10:03:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 10:03:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 5 JPA repository interfaces.
2023-10-12 10:03:08 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 10:03:08 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 10:03:08 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 10:03:08 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 10:03:08 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1032 ms
2023-10-12 10:03:08 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 10:03:08 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 10:03:08 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 10:03:08 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 10:03:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 10:03:09 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18e6b72b
2023-10-12 10:03:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 10:03:09 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 10:03:10 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 10:03:10 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:03:10 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 10:03:10 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 10:03:10 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 10:03:10 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 10:03:10 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 10:03:10 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 10:03:10 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 10:03:10 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 10:03:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 10:03:10 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 10:03:10 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e7d9d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b0d818d, org.springframework.security.web.context.SecurityContextHolderFilter@2ced7cf, org.springframework.security.web.header.HeaderWriterFilter@91c11b6, org.springframework.security.web.authentication.logout.LogoutFilter@18d63996, vn.tholv.web.config.filter.JwtAuthFilter@444ebefd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@604e8a6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bc44d78, org.springframework.security.web.session.SessionManagementFilter@5d00e30e, org.springframework.security.web.access.ExceptionTranslationFilter@427c2c96, org.springframework.security.web.access.intercept.AuthorizationFilter@56bf6f1e]
2023-10-12 10:03:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 10:03:10 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 10:03:11 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 10:03:11 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.942 seconds (process running for 4.466)
2023-10-12 10:03:20 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 10:03:20 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 10:03:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 10:03:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 10:03:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 10:03:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6c3627c
2023-10-12 10:03:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@95958d9
2023-10-12 10:03:20 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 10:03:20 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 10:03:20 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:03:20 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:03:20 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:03:20 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:03:20 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:03:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:03:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@232a1568]
2023-10-12 10:03:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:03:21 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:03:21 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:03:21 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:03:21 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:03:21 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@27c0ffe6]
2023-10-12 10:03:21 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 10:03:21 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:03:26 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:03:26 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:03:26 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:03:26 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:03:26 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:03:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:03:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@6903907a]
2023-10-12 10:03:26 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:03:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:03:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@5b323d89]
2023-10-12 10:03:26 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Xác thực captcha thất bại]
2023-10-12 10:03:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:03:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:03:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:03:36 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:03:36 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:03:36 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:03:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:03:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@38efea27]
2023-10-12 10:03:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:03:36 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:03:36 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since password does not match stored value
2023-10-12 10:03:36 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:03:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:03:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@4cb0a789]
2023-10-12 10:03:36 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 10:03:36 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:05:06 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 10:05:06 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 10:05:06 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 10:05:06 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 10:05:06 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 10:05:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 10:05:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@5ecd7715]
2023-10-12 10:05:06 DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.created_date,
        r1_0.modified_date,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2023-10-12 10:05:06 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_date, email, modified_date, password, project_id, username) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 10:05:06 DEBUG org.hibernate.SQL - 
    insert 
    into
        user_role
        (user_id, role_id) 
    values
        (?, ?)
2023-10-12 10:05:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:05:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.User@5ecd7715]
2023-10-12 10:05:06 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:05:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:05:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:05:31 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:05:31 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:05:31 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:05:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:05:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@6d530f8c]
2023-10-12 10:05:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:05:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:05:31 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:05:31 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:05:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:05:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@4fd8c2e6]
2023-10-12 10:05:31 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 10:05:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:05:33 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:05:33 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:05:33 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:05:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:05:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@5f74534c]
2023-10-12 10:05:33 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:05:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:05:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@1a6946b3]
2023-10-12 10:05:33 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Xác thực captcha thất bại]
2023-10-12 10:05:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:06:12 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:06:12 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:06:12 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:06:12 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:06:12 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:06:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:06:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@5d430401]
2023-10-12 10:06:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:06:12 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:06:12 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:06:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:06:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:06:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@13a762f]
2023-10-12 10:06:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 10:06:12 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:07:55 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:07:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 10:07:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 10:07:58 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 14280 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 10:07:58 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 10:07:58 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 10:07:58 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 5 JPA repository interfaces.
2023-10-12 10:07:59 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 10:07:59 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 10:07:59 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 10:07:59 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 10:07:59 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1041 ms
2023-10-12 10:07:59 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 10:07:59 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 10:07:59 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 10:07:59 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 10:07:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 10:07:59 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76af34b5
2023-10-12 10:07:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 10:07:59 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 10:08:00 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 10:08:00 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:08:01 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 10:08:01 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 10:08:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 10:08:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 10:08:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 10:08:01 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 10:08:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 10:08:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 10:08:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 10:08:01 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 10:08:01 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7f6936cc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56bf6f1e, org.springframework.security.web.context.SecurityContextHolderFilter@3545c913, org.springframework.security.web.header.HeaderWriterFilter@1a3611b1, org.springframework.security.web.authentication.logout.LogoutFilter@43a72f0f, vn.tholv.web.config.filter.JwtAuthFilter@8a11a19, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3cdc5155, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@195888a6, org.springframework.security.web.session.SessionManagementFilter@69a031a4, org.springframework.security.web.access.ExceptionTranslationFilter@7a3f3bc4, org.springframework.security.web.access.intercept.AuthorizationFilter@35b38986]
2023-10-12 10:08:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 10:08:01 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 10:08:01 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 10:08:01 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.85 seconds (process running for 4.345)
2023-10-12 10:10:06 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:10:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 10:10:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 10:10:10 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 26120 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 10:10:10 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 10:10:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 10:10:11 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 5 JPA repository interfaces.
2023-10-12 10:10:11 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 10:10:11 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 10:10:11 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 10:10:11 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 10:10:11 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1104 ms
2023-10-12 10:10:11 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 10:10:11 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 10:10:11 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 10:10:11 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 10:10:11 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 10:10:12 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d77746b
2023-10-12 10:10:12 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 10:10:12 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 10:10:12 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 10:10:13 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:10:13 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 10:10:13 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 10:10:13 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 10:10:13 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 10:10:13 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 10:10:13 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 10:10:13 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 10:10:13 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 10:10:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 10:10:13 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 10:10:13 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3284de45, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5390862e, org.springframework.security.web.context.SecurityContextHolderFilter@b0e6d4e, org.springframework.security.web.header.HeaderWriterFilter@689fcf08, org.springframework.security.web.authentication.logout.LogoutFilter@2f408960, vn.tholv.web.config.filter.JwtAuthFilter@7866a7a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1be3e952, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@818a514, org.springframework.security.web.session.SessionManagementFilter@5fcff272, org.springframework.security.web.access.ExceptionTranslationFilter@55b78dad, org.springframework.security.web.access.intercept.AuthorizationFilter@c2dab10]
2023-10-12 10:10:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 10:10:13 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 10:10:13 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 10:10:13 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.878 seconds (process running for 4.342)
2023-10-12 10:10:25 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 10:10:25 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 10:10:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 10:10:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 10:10:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 10:10:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@72321701
2023-10-12 10:10:25 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4f63909f
2023-10-12 10:10:25 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 10:10:25 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-10-12 10:10:25 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:10:25 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:10:25 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:10:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:10:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@472f0e62]
2023-10-12 10:10:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:10:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:10:26 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:10:26 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:10:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-10-12 10:10:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@63def1fb]
2023-10-12 10:10:26 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 10:10:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:11:00 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:11:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 10:11:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 10:11:04 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 25880 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 10:11:04 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 10:11:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 10:11:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2023-10-12 10:11:05 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 10:11:05 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 10:11:05 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 10:11:05 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 10:11:05 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1182 ms
2023-10-12 10:11:05 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 10:11:06 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 10:11:06 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 10:11:06 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 10:11:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 10:11:06 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18e6b72b
2023-10-12 10:11:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 10:11:06 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 10:11:07 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 10:11:07 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:11:07 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 10:11:08 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 10:11:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 10:11:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 10:11:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 10:11:08 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 10:11:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 10:11:08 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 10:11:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 10:11:08 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 10:11:08 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e7d9d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b0d818d, org.springframework.security.web.context.SecurityContextHolderFilter@2ced7cf, org.springframework.security.web.header.HeaderWriterFilter@91c11b6, org.springframework.security.web.authentication.logout.LogoutFilter@18d63996, vn.tholv.web.config.filter.JwtAuthFilter@2559f65c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@604e8a6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bc44d78, org.springframework.security.web.session.SessionManagementFilter@5d00e30e, org.springframework.security.web.access.ExceptionTranslationFilter@427c2c96, org.springframework.security.web.access.intercept.AuthorizationFilter@56bf6f1e]
2023-10-12 10:11:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 10:11:08 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 10:11:08 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 10:11:08 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.413 seconds (process running for 4.912)
2023-10-12 10:11:11 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 10:11:11 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 10:11:11 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 10:11:11 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 10:11:11 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 10:11:11 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1dba7721
2023-10-12 10:11:11 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5263f554
2023-10-12 10:11:11 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 10:11:11 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2023-10-12 10:11:11 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:11:11 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:11:11 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:11:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:11:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@6a1dbbb2]
2023-10-12 10:11:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:11:12 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:11:12 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:11:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:11:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-10-12 10:11:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@27b9a4f2]
2023-10-12 10:11:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException]
2023-10-12 10:11:12 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:11:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:11:54 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 10:11:54 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 10:11:57 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 15364 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 10:11:57 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 10:11:58 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 10:11:58 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2023-10-12 10:11:58 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 10:11:58 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 10:11:58 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 10:11:58 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 10:11:58 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1059 ms
2023-10-12 10:11:59 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 10:11:59 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 10:11:59 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 10:11:59 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 10:11:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 10:11:59 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76af34b5
2023-10-12 10:11:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 10:11:59 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 10:12:00 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 10:12:00 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:12:00 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 10:12:00 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 10:12:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 10:12:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 10:12:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 10:12:01 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 10:12:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 10:12:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 10:12:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 10:12:01 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 10:12:01 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2c7ac998, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f6936cc, org.springframework.security.web.context.SecurityContextHolderFilter@4b9dd787, org.springframework.security.web.header.HeaderWriterFilter@8cd2bb5, org.springframework.security.web.authentication.logout.LogoutFilter@2f2a5064, vn.tholv.web.config.filter.JwtAuthFilter@8a11a19, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d00e30e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3cdc5155, org.springframework.security.web.session.SessionManagementFilter@3a2881d6, org.springframework.security.web.access.ExceptionTranslationFilter@2e8eafb2, org.springframework.security.web.access.intercept.AuthorizationFilter@4a532271]
2023-10-12 10:12:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 10:12:01 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 10:12:01 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 10:12:01 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.908 seconds (process running for 4.406)
2023-10-12 10:12:26 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:12:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 10:12:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 10:12:30 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 7932 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 10:12:30 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 10:12:31 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 10:12:31 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 5 JPA repository interfaces.
2023-10-12 10:12:31 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 10:12:31 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 10:12:31 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 10:12:31 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 10:12:31 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1309 ms
2023-10-12 10:12:31 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 10:12:31 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 10:12:32 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 10:12:32 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 10:12:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 10:12:32 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7db791df
2023-10-12 10:12:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 10:12:32 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 10:12:33 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 10:12:33 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:12:34 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 10:12:34 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 10:12:34 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 10:12:34 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 10:12:34 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 10:12:34 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 10:12:34 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 10:12:34 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 10:12:34 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 10:12:34 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 10:12:34 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@938e54a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@220d7eb7, org.springframework.security.web.context.SecurityContextHolderFilter@3c39c739, org.springframework.security.web.header.HeaderWriterFilter@6fc03cf6, org.springframework.security.web.authentication.logout.LogoutFilter@3284de45, vn.tholv.web.config.filter.JwtAuthFilter@7097ead6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e8eafb2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a3f3bc4, org.springframework.security.web.session.SessionManagementFilter@eef6e, org.springframework.security.web.access.ExceptionTranslationFilter@ab3b54, org.springframework.security.web.access.intercept.AuthorizationFilter@6c38f4de]
2023-10-12 10:12:34 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 10:12:34 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 10:12:34 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 10:12:34 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.117 seconds (process running for 5.589)
2023-10-12 10:13:08 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 10:13:08 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 10:13:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 10:13:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 10:13:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 10:13:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7b1b1784
2023-10-12 10:13:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@643fed50
2023-10-12 10:13:08 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 10:13:08 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 10:13:08 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:13:08 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:13:08 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:13:08 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:13:08 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:13:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:13:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@624cd4e8]
2023-10-12 10:13:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:13:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:13:09 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:13:09 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:13:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:13:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@25fbc514]
2023-10-12 10:13:09 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 10:13:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:13:31 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:13:31 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:13:31 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:13:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:13:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@3e9368f7]
2023-10-12 10:13:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:13:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:13:31 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:13:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-10-12 10:13:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{accessToken=Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0aG9sdjA1MDgiLCJpYXQiOjE2OTcwODA0MTEsImV4cCI6MTY (truncated)...]
2023-10-12 10:13:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:13:44 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:13:44 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 10:13:44 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 10:13:48 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 29672 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 10:13:48 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 10:13:48 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 10:13:48 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 5 JPA repository interfaces.
2023-10-12 10:13:49 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 10:13:49 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 10:13:49 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 10:13:49 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 10:13:49 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1054 ms
2023-10-12 10:13:49 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 10:13:49 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 10:13:49 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 10:13:49 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 10:13:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 10:13:49 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1da75dde
2023-10-12 10:13:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 10:13:49 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 10:13:50 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 10:13:50 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:13:51 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 10:13:51 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 10:13:51 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 10:13:51 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 10:13:51 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 10:13:51 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 10:13:51 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 10:13:51 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 10:13:51 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 10:13:51 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 10:13:51 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@21f9a305, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ff87203, org.springframework.security.web.context.SecurityContextHolderFilter@419ece7a, org.springframework.security.web.header.HeaderWriterFilter@2bf2523f, org.springframework.security.web.authentication.logout.LogoutFilter@48590849, vn.tholv.web.config.filter.JwtAuthFilter@21dd91da, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@238d27ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@91c11b6, org.springframework.security.web.session.SessionManagementFilter@7a3f3bc4, org.springframework.security.web.access.ExceptionTranslationFilter@3514df8d, org.springframework.security.web.access.intercept.AuthorizationFilter@1eda12b3]
2023-10-12 10:13:51 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 10:13:51 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 10:13:52 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 10:13:52 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.224 seconds (process running for 4.678)
2023-10-12 10:14:13 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 10:14:13 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 10:14:13 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 10:14:13 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 10:14:13 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 10:14:13 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1fb379e4
2023-10-12 10:14:13 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4c81e7c2
2023-10-12 10:14:13 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 10:14:13 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 10:14:13 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:14:13 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:14:13 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:14:13 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:14:13 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:14:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:14:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@7bd0c249]
2023-10-12 10:14:13 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:14:13 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:14:13 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:14:13 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 10:14:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:14:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@15f1a074]
2023-10-12 10:14:13 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.RuntimeException: Đăng nhập thất bại]
2023-10-12 10:14:13 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:14:43 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:14:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 10:14:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 10:14:47 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 25476 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 10:14:47 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 10:14:47 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 10:14:47 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 5 JPA repository interfaces.
2023-10-12 10:14:48 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 10:14:48 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 10:14:48 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 10:14:48 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 10:14:48 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1088 ms
2023-10-12 10:14:48 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 10:14:48 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 10:14:48 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 10:14:48 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 10:14:48 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 10:14:48 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@595fed99
2023-10-12 10:14:48 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 10:14:48 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 10:14:49 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 10:14:49 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 10:14:50 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 10:14:50 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 10:14:50 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 10:14:50 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 10:14:50 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 10:14:50 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 10:14:50 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 10:14:50 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 10:14:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 10:14:50 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 10:14:50 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@aaf4375, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f2a5064, org.springframework.security.web.context.SecurityContextHolderFilter@238d27ef, org.springframework.security.web.header.HeaderWriterFilter@818a514, org.springframework.security.web.authentication.logout.LogoutFilter@489c15e2, vn.tholv.web.config.filter.JwtAuthFilter@1f251bf1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ec6f3f1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1dfd6023, org.springframework.security.web.session.SessionManagementFilter@1a3611b1, org.springframework.security.web.access.ExceptionTranslationFilter@2bf2523f, org.springframework.security.web.access.intercept.AuthorizationFilter@193792e6]
2023-10-12 10:14:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 10:14:50 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 10:14:50 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 10:14:50 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.96 seconds (process running for 4.458)
2023-10-12 10:16:43 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 10:16:43 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 10:16:43 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 10:16:43 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 10:16:43 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 10:16:43 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1fb379e4
2023-10-12 10:16:43 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7d086485
2023-10-12 10:16:43 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 10:16:43 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-10-12 10:16:43 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:16:43 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:16:43 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:16:43 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:16:43 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:16:43 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:16:43 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@2ecd37a7]
2023-10-12 10:16:44 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:16:44 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:16:44 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:16:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:16:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{refreshToken=Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0aG9sdjA1MDgiLCJpYXQiOjE2OTcwODA2MDQsImV4cCI6MT (truncated)...]
2023-10-12 10:16:44 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 10:17:40 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 10:17:40 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 10:17:40 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 10:17:40 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 10:17:40 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 10:17:40 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 10:17:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@52e371d0]
2023-10-12 10:17:41 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 10:17:41 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 10:17:41 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 10:17:41 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 10:17:41 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{refreshToken=Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0aG9sdjA1MDgiLCJpYXQiOjE2OTcwODA2NjEsImV4cCI6MT (truncated)...]
2023-10-12 10:17:41 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:43:48 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 11:43:48 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 11:43:48 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 11:43:51 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 27224 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 11:43:51 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 11:43:51 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 11:43:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 5 JPA repository interfaces.
2023-10-12 11:43:52 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 11:43:52 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 11:43:52 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 11:43:52 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 11:43:52 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1327 ms
2023-10-12 11:43:52 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 11:43:52 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 11:43:52 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 11:43:53 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 11:43:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 11:43:53 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3313463c
2023-10-12 11:43:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 11:43:53 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 11:43:54 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 11:43:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 11:43:55 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 11:43:55 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 11:43:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 11:43:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 11:43:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 11:43:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 11:43:55 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 11:43:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 11:43:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 11:43:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 11:43:55 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 11:43:55 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7f6936cc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56bf6f1e, org.springframework.security.web.context.SecurityContextHolderFilter@3545c913, org.springframework.security.web.header.HeaderWriterFilter@1a3611b1, org.springframework.security.web.authentication.logout.LogoutFilter@43a72f0f, vn.tholv.web.config.filter.JwtAuthFilter@5b16e486, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3cdc5155, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@195888a6, org.springframework.security.web.session.SessionManagementFilter@69a031a4, org.springframework.security.web.access.ExceptionTranslationFilter@7a3f3bc4, org.springframework.security.web.access.intercept.AuthorizationFilter@35b38986]
2023-10-12 11:43:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 11:43:55 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 11:43:55 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 11:43:55 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.879 seconds (process running for 5.431)
2023-10-12 11:45:31 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 11:45:31 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 11:45:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 11:45:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 11:45:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 11:45:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@e5d9fa7
2023-10-12 11:45:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@70fe33fa
2023-10-12 11:45:31 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 11:45:31 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2023-10-12 11:45:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user
2023-10-12 11:45:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user
2023-10-12 11:45:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user
2023-10-12 11:45:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 11:45:32 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:45:32 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user
2023-10-12 11:45:32 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user", parameters={}
2023-10-12 11:45:32 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 11:45:32 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 11:45:32 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleResourceNotFoundException(Exception)
2023-10-12 11:45:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:45:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@4a770434]
2023-10-12 11:45:32 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user.]
2023-10-12 11:45:32 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:45:37 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user
2023-10-12 11:45:37 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user
2023-10-12 11:45:37 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user
2023-10-12 11:45:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 11:45:37 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:45:37 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user
2023-10-12 11:45:37 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user", parameters={}
2023-10-12 11:45:37 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 11:45:37 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 11:45:37 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleResourceNotFoundException(Exception)
2023-10-12 11:45:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:45:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@32a7bc9c]
2023-10-12 11:45:37 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user.]
2023-10-12 11:45:37 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:45:49 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user
2023-10-12 11:45:49 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user
2023-10-12 11:45:49 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user
2023-10-12 11:45:49 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 11:45:49 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:45:49 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user
2023-10-12 11:45:49 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user", parameters={}
2023-10-12 11:45:49 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 11:45:49 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 11:45:49 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleResourceNotFoundException(Exception)
2023-10-12 11:45:49 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:45:49 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@47f4ca14]
2023-10-12 11:45:49 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user.]
2023-10-12 11:45:49 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:47:20 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 11:47:20 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 11:47:20 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 11:47:24 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 17264 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 11:47:24 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 11:47:25 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 11:47:25 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 5 JPA repository interfaces.
2023-10-12 11:47:25 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 11:47:25 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 11:47:25 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 11:47:25 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 11:47:25 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1233 ms
2023-10-12 11:47:25 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 11:47:25 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 11:47:25 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 11:47:26 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 11:47:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 11:47:26 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6eed46e9
2023-10-12 11:47:26 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 11:47:26 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 11:47:27 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 11:47:27 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 11:47:27 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 11:47:27 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 11:47:27 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 11:47:27 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 11:47:27 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 11:47:27 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 11:47:27 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 11:47:27 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 11:47:27 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 11:47:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 11:47:27 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 11:47:27 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5390862e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4fccdd1d, org.springframework.security.web.context.SecurityContextHolderFilter@2bf2523f, org.springframework.security.web.header.HeaderWriterFilter@738153d8, org.springframework.security.web.authentication.logout.LogoutFilter@1516f497, vn.tholv.web.config.filter.JwtAuthFilter@19b8f1bd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@818a514, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7004cd44, org.springframework.security.web.session.SessionManagementFilter@5b5d6f9c, org.springframework.security.web.access.ExceptionTranslationFilter@47f4dc8d, org.springframework.security.web.access.intercept.AuthorizationFilter@6c4e11d0]
2023-10-12 11:47:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 11:47:27 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 11:47:28 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 11:47:28 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.093 seconds (process running for 4.599)
2023-10-12 11:47:33 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 11:47:33 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@785477e5
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@77d42ed7
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 11:47:33 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-10-12 11:47:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user
2023-10-12 11:47:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user
2023-10-12 11:47:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user
2023-10-12 11:47:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 11:47:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:47:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user", parameters={}
2023-10-12 11:47:33 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 11:47:33 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 11:47:33 DEBUG o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource user.]
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2023-10-12 11:47:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 11:47:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 11:47:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 11:47:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:47:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 11:47:33 ICT 2023, status=404, error=Not Found, path=/api/user}]
2023-10-12 11:47:33 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2023-10-12 11:48:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:48:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:48:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:48:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:48:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:48:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:48:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:48:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:48:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:48:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@79f47b1]]
2023-10-12 11:48:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:48:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:48:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:48:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:48:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:48:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:48:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:48:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:48:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:48:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:48:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:48:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5cae2e39]]
2023-10-12 11:48:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:48:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:48:11 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:48:11 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:48:11 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:48:11 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:48:11 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:48:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:48:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:48:11 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:48:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:48:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@498aea18]]
2023-10-12 11:48:11 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:48:11 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:48:29 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 11:48:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 11:48:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 11:48:32 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 26732 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 11:48:32 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 11:48:33 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 11:48:33 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 5 JPA repository interfaces.
2023-10-12 11:48:33 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 11:48:33 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 11:48:33 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 11:48:33 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 11:48:33 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1072 ms
2023-10-12 11:48:33 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 11:48:33 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 11:48:33 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 11:48:34 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 11:48:34 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 11:48:34 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@690df641
2023-10-12 11:48:34 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 11:48:34 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 11:48:35 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 11:48:35 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 11:48:35 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 11:48:35 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 11:48:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 11:48:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 11:48:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 11:48:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 11:48:35 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 11:48:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 11:48:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 11:48:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 12 mappings in 'requestMappingHandlerMapping'
2023-10-12 11:48:35 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 11:48:35 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1eda12b3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5006a697, org.springframework.security.web.context.SecurityContextHolderFilter@7a3f3bc4, org.springframework.security.web.header.HeaderWriterFilter@5b5d6f9c, org.springframework.security.web.authentication.logout.LogoutFilter@22c0c0bc, vn.tholv.web.config.filter.JwtAuthFilter@156f0281, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a3611b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@419ece7a, org.springframework.security.web.session.SessionManagementFilter@3c39c739, org.springframework.security.web.access.ExceptionTranslationFilter@6e70861, org.springframework.security.web.access.intercept.AuthorizationFilter@938e54a]
2023-10-12 11:48:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 11:48:35 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 11:48:36 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 11:48:36 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.954 seconds (process running for 4.421)
2023-10-12 11:50:03 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 11:50:03 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fba30fe
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@643fed50
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 11:50:03 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 11:50:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:50:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:50:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:50:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:50:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:50:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:50:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:50:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:50:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@66da8d8b]]
2023-10-12 11:50:03 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:50:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:50:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:50:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:50:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:50:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:50:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:50:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:50:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:50:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@453a8870]]
2023-10-12 11:50:03 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:50:03 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:50:06 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:50:06 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:50:06 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:50:06 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:50:06 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:50:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:50:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:50:06 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:50:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:50:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@75e6542d]]
2023-10-12 11:50:06 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:50:06 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:52:54 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:52:54 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:52:54 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:52:54 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:52:54 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:52:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:52:54 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:52:54 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:52:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:52:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4697c701]]
2023-10-12 11:52:55 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:52:55 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:52:55 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:52:55 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:52:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:52:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:52:55 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:52:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:52:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:52:55 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:52:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:52:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@73ef8f4f]]
2023-10-12 11:52:55 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:52:55 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:52:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:52:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:52:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:52:58 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:52:58 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:52:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:52:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:52:58 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:52:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:52:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@534c17da]]
2023-10-12 11:52:58 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:52:58 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:53:06 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /category/save
2023-10-12 11:53:06 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /category/save
2023-10-12 11:53:06 DEBUG o.s.security.web.FilterChainProxy - Securing POST /category/save
2023-10-12 11:53:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 11:53:06 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:53:06 DEBUG o.s.security.web.FilterChainProxy - Secured POST /category/save
2023-10-12 11:53:06 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/category/save", parameters={}
2023-10-12 11:53:06 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 11:53:06 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 11:53:06 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleResourceNotFoundException(Exception)
2023-10-12 11:53:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:53:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@677dcbbd]
2023-10-12 11:53:06 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource category/save.]
2023-10-12 11:53:06 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 11:53:16 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 11:53:16 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 11:53:16 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 11:53:16 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 11:53:16 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 11:53:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 11:53:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 11:53:16 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 11:53:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 11:53:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@70e1112c]]
2023-10-12 11:53:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 11:53:16 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:00:46 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:00:46 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:00:46 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:00:46 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:00:46 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:00:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:00:46 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:00:46 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:00:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:00:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@3aa639a3]]
2023-10-12 12:00:46 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:00:46 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:00:47 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:00:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:00:47 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:00:47 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:00:47 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:00:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:00:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:00:47 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:00:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:00:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@322d2816]]
2023-10-12 12:00:47 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:00:47 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:00:55 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 12:00:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 12:00:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 12:00:59 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 27480 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 12:00:59 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 12:01:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 12:01:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 5 JPA repository interfaces.
2023-10-12 12:01:00 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 12:01:00 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 12:01:00 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 12:01:00 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 12:01:00 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1281 ms
2023-10-12 12:01:00 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 12:01:00 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 12:01:01 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 12:01:01 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 12:01:01 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 12:01:01 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4597e6e3
2023-10-12 12:01:01 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 12:01:01 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 12:01:02 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 12:01:02 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 12:01:02 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 12:01:02 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 12:01:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 12:01:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 12:01:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 12:01:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 12:01:02 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 12:01:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 12:01:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 12:01:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 12:01:02 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 12:01:03 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7c928399, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1bcca516, org.springframework.security.web.context.SecurityContextHolderFilter@4d204b30, org.springframework.security.web.header.HeaderWriterFilter@3a2881d6, org.springframework.security.web.authentication.logout.LogoutFilter@56bf6f1e, vn.tholv.web.config.filter.JwtAuthFilter@7d3a2459, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44103266, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@439b0198, org.springframework.security.web.session.SessionManagementFilter@2f408960, org.springframework.security.web.access.ExceptionTranslationFilter@37ad818e, org.springframework.security.web.access.intercept.AuthorizationFilter@87df88d]
2023-10-12 12:01:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 12:01:03 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 12:01:03 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 12:01:03 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.213 seconds (process running for 4.716)
2023-10-12 12:01:21 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 12:01:21 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 12:01:21 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 12:01:21 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 12:01:21 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 12:01:21 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1cf7c055
2023-10-12 12:01:21 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2db75e32
2023-10-12 12:01:21 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 12:01:21 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 12:01:21 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:01:21 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:01:21 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:01:21 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:01:21 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:01:21 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:01:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:01:21 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:01:21 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:01:21 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1b44ddb6]]
2023-10-12 12:01:21 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:01:21 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:01:27 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /category/save
2023-10-12 12:01:27 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /category/save
2023-10-12 12:01:27 DEBUG o.s.security.web.FilterChainProxy - Securing POST /category/save
2023-10-12 12:01:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:01:27 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:01:27 DEBUG o.s.security.web.FilterChainProxy - Secured POST /category/save
2023-10-12 12:01:27 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/category/save", parameters={}
2023-10-12 12:01:27 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 12:01:27 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 12:01:27 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleResourceNotFoundException(Exception)
2023-10-12 12:01:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:01:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@17e3fff5]
2023-10-12 12:01:27 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource category/save.]
2023-10-12 12:01:27 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:01:34 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /category/save
2023-10-12 12:01:34 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /category/save
2023-10-12 12:01:34 DEBUG o.s.security.web.FilterChainProxy - Securing POST /category/save
2023-10-12 12:01:34 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:01:34 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:01:34 DEBUG o.s.security.web.FilterChainProxy - Secured POST /category/save
2023-10-12 12:01:34 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/category/save", parameters={}
2023-10-12 12:01:34 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 12:01:34 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 12:01:34 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleResourceNotFoundException(Exception)
2023-10-12 12:01:34 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:01:34 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@129ccfa9]
2023-10-12 12:01:34 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource category/save.]
2023-10-12 12:01:34 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:01:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:01:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:01:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:01:58 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:01:58 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:01:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:01:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:01:58 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:01:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:01:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@3ee9448]]
2023-10-12 12:01:58 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:01:58 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:01:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:01:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:01:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:01:58 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:01:58 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:01:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:01:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:01:58 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:01:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:01:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@391c444f]]
2023-10-12 12:01:58 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:01:58 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:07:04 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:07:04 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:07:04 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:07:04 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:07:04 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:07:04 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:07:04 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:07:04 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:07:04 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:07:04 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1f48fd07]]
2023-10-12 12:07:04 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:07:04 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:07:15 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 12:07:15 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 12:07:15 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 12:07:15 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:07:15 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:07:15 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 12:07:15 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 12:07:15 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 12:07:15 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Project@10c6022a]
2023-10-12 12:07:15 DEBUG org.hibernate.SQL - 
    insert 
    into
        projects
        (created_date, leader_id, modified_date, money, name, start_date) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 12:07:15 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:07:15 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@10c6022a]
2023-10-12 12:07:15 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:09:26 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:09:26 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:09:26 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:09:26 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:09:26 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:09:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:09:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:09:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:09:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:09:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@ab7d377]]
2023-10-12 12:09:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:09:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:09:29 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:09:29 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:09:29 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:09:29 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:09:29 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:09:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:09:29 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:09:29 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:09:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:09:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@50196282]]
2023-10-12 12:09:29 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:09:29 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:09:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 12:09:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 12:09:36 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 12:09:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:09:36 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:09:36 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 12:09:36 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 12:09:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 12:09:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Project@693bd0c5]
2023-10-12 12:09:36 DEBUG org.hibernate.SQL - 
    insert 
    into
        projects
        (created_date, leader_id, modified_date, money, name, start_date) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 12:09:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:09:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@693bd0c5]
2023-10-12 12:09:36 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:10:14 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:10:14 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:10:14 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:10:14 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:10:14 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:10:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:10:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:10:14 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:10:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:10:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@73e15eff]]
2023-10-12 12:10:14 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:10:14 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:10:14 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:10:14 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:10:14 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:10:14 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:10:14 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:10:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:10:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:10:14 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:10:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:10:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6fe462cf]]
2023-10-12 12:10:14 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:10:14 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:10:17 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:10:17 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:10:17 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:10:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:10:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:10:17 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:10:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:10:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@578b97e6]]
2023-10-12 12:10:17 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:10:17 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:10:26 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 12:10:26 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 12:10:26 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 12:10:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:10:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:10:26 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 12:10:26 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 12:10:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 12:10:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Project@5bc13b74]
2023-10-12 12:10:26 DEBUG org.hibernate.SQL - 
    insert 
    into
        projects
        (created_date, leader_id, modified_date, money, name, start_date) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 12:10:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:10:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@5bc13b74]
2023-10-12 12:10:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:13:27 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:13:27 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:13:27 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:13:27 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:13:27 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:13:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:13:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:13:27 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:13:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:13:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@35700ab7]]
2023-10-12 12:13:27 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:13:27 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:13:27 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:13:27 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:13:27 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:13:27 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:13:27 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:13:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:13:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:13:27 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:13:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:13:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4b59c98]]
2023-10-12 12:13:27 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:13:27 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:13:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:13:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:13:30 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:13:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:13:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:13:30 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:13:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:13:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@239ee50e]]
2023-10-12 12:13:30 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:13:30 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:13:42 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:13:42 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:13:42 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:13:42 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:13:42 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:13:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:13:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:13:42 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:13:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:13:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1ed37e5]]
2023-10-12 12:13:42 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:13:42 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:13:42 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:13:42 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:13:42 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:13:42 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:13:42 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:13:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:13:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:13:42 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:13:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:13:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4da3de87]]
2023-10-12 12:13:42 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:13:42 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:13:44 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:13:44 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:13:44 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:13:44 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:13:44 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:13:44 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:13:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:13:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@16da32f3]]
2023-10-12 12:13:44 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:13:44 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:13:56 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 12:13:56 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 12:13:56 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 12:13:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:13:56 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:13:56 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 12:13:56 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 12:13:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 12:13:56 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot construct instance of `vn.tholv.web.core.base.entity.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('ZrSAdz6I2Xta5Gp0YC96jA==')
2023-10-12 12:13:56 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 12:13:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:13:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@7e3988a7]
2023-10-12 12:13:56 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `vn.tholv.web.core.base.entity.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('ZrSAdz6I2Xta5Gp0YC96jA==')]
2023-10-12 12:13:56 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:14:43 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 12:14:43 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 12:14:43 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 12:14:43 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:14:43 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:14:43 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 12:14:43 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 12:14:43 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 12:14:43 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 12:14:43 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:14:43 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@13d4cfdf, vn.tholv.web.core.base.entity.Project@682297b9, vn. (truncated)...]
2023-10-12 12:14:43 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 12:14:43 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 12:14:43 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 12:14:43 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 12:14:43 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 12:14:43 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 12:14:43 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:20:41 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 12:20:41 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 12:20:41 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 12:20:45 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 21264 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 12:20:45 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 12:20:45 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 12:20:45 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2023-10-12 12:20:46 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 12:20:46 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 12:20:46 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 12:20:46 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 12:20:46 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1168 ms
2023-10-12 12:20:46 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 12:20:46 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 12:20:46 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 12:20:46 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 12:20:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 12:20:46 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3dc46f24
2023-10-12 12:20:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 12:20:46 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 12:20:47 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 12:20:47 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 12:20:48 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 12:20:48 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 12:20:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 12:20:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 12:20:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 12:20:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 12:20:48 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 12:20:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 12:20:48 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 12:20:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 12:20:48 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 12:20:48 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@91c11b6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ec6f3f1, org.springframework.security.web.context.SecurityContextHolderFilter@d8751de, org.springframework.security.web.header.HeaderWriterFilter@2b6a4da7, org.springframework.security.web.authentication.logout.LogoutFilter@6f076c53, vn.tholv.web.config.filter.JwtAuthFilter@145ef9e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75c30a4f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@360e4235, org.springframework.security.web.session.SessionManagementFilter@1d5fc340, org.springframework.security.web.access.ExceptionTranslationFilter@85b9f9c, org.springframework.security.web.access.intercept.AuthorizationFilter@419ece7a]
2023-10-12 12:20:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 12:20:48 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 12:20:48 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 12:20:48 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.144 seconds (process running for 4.627)
2023-10-12 12:21:17 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 12:21:17 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 12:21:17 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 12:21:17 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 12:21:17 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 12:21:17 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@f5a680
2023-10-12 12:21:17 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@e75bae7
2023-10-12 12:21:17 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 12:21:17 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 12:21:17 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:21:17 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:21:17 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:21:17 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:21:17 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:21:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:21:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:21:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:21:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:21:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6c4aaa57]]
2023-10-12 12:21:18 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:21:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:21:25 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 12:21:25 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 12:21:25 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 12:21:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:21:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:21:26 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 12:21:26 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 12:21:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 12:21:26 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 12:21:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:21:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@b65a787, vn.tholv.web.core.base.entity.Project@5a64cecc, vn.t (truncated)...]
2023-10-12 12:21:26 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 12:21:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 12:21:26 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 12:21:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 12:21:26 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 12:21:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 12:21:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:21:27 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:21:27 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:21:27 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:21:27 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:21:27 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:21:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:21:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:21:27 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:21:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:21:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4eebda30]]
2023-10-12 12:21:27 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:21:27 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:21:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 12:21:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 12:21:33 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 12:21:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:21:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:21:33 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 12:21:33 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 12:21:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 12:21:33 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot construct instance of `vn.tholv.web.core.base.entity.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (6)
2023-10-12 12:21:33 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 12:21:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:21:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@585c78e8]
2023-10-12 12:21:33 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `vn.tholv.web.core.base.entity.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (6)]
2023-10-12 12:21:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:23:00 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:23:00 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:23:00 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:23:00 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:23:00 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:23:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:23:00 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:23:00 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:23:00 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:23:00 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@622ef34]]
2023-10-12 12:23:00 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:23:00 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:23:02 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:23:02 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:23:02 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:23:02 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:23:02 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:23:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:23:02 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:23:02 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:23:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:23:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@af4ca63]]
2023-10-12 12:23:02 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:23:02 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:23:10 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 12:23:10 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 12:23:10 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 12:23:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:23:10 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:23:10 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 12:23:10 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 12:23:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 12:23:10 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot deserialize value of type `java.sql.Timestamp` from String "2023-10-12": not a valid representation (error: Failed to parse Date value '2023-10-12': Unparseable date: "2023-10-12")
2023-10-12 12:23:10 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 12:23:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:23:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@31509fd4]
2023-10-12 12:23:10 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.sql.Timestamp` from String "2023-10-12": not a valid representation (error: Failed to parse Date value '2023-10-12': Unparseable date: "2023-10-12")]
2023-10-12 12:23:10 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:23:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:23:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:23:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:23:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:23:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:23:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:23:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:23:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:23:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:23:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4198e7ae]]
2023-10-12 12:23:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:23:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:23:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:23:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:23:53 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:23:53 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:23:53 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:23:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:23:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:23:53 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:23:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:23:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1a15736d]]
2023-10-12 12:23:53 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:23:53 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:24:01 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:24:01 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:24:01 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:24:01 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:24:01 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:24:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:24:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:24:01 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:24:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:24:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5c1e07bf]]
2023-10-12 12:24:01 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:24:01 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:24:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:24:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:24:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:24:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:24:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:24:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:24:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:24:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:24:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:24:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@526f0770]]
2023-10-12 12:24:03 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:24:03 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:24:12 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 12:24:12 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 12:24:12 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 12:24:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:24:12 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:24:12 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 12:24:12 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 12:24:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 12:24:12 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot deserialize value of type `java.sql.Timestamp` from String "2023-10-11": not a valid representation (error: Failed to parse Date value '2023-10-11': Unparseable date: "2023-10-11")
2023-10-12 12:24:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 12:24:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:24:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@75a0af02]
2023-10-12 12:24:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.sql.Timestamp` from String "2023-10-11": not a valid representation (error: Failed to parse Date value '2023-10-11': Unparseable date: "2023-10-11")]
2023-10-12 12:24:12 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:27:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:27:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:27:53 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:27:53 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:27:53 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:27:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:27:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:27:53 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:27:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:27:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@74161705]]
2023-10-12 12:27:53 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:27:53 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:28:02 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:28:02 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:28:02 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:28:02 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:28:02 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:28:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:28:02 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:28:02 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:28:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:28:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1d3d4c97]]
2023-10-12 12:28:02 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:28:02 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:28:12 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 12:28:12 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 12:28:12 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 12:28:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 12:28:12 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:28:12 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 12:28:12 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 12:28:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 12:28:12 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot deserialize value of type `java.sql.Timestamp` from String "2023-10-18T12:30": not a valid representation (error: Failed to parse Date value '2023-10-18T12:30': Unparseable date: "2023-10-18T12:30")
2023-10-12 12:28:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 12:28:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:28:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@4594a2ff]
2023-10-12 12:28:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.sql.Timestamp` from String "2023-10-18T12:30": not a valid representation (error: Failed to parse Date value '2023-10-18T12:30': Unparseable date: "2023-10-18T12:30")]
2023-10-12 12:28:12 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:31:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:31:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:31:53 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:31:53 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:31:53 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:31:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:31:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:31:53 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:31:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:31:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@25fc6c2]]
2023-10-12 12:31:53 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 12:31:53 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 12:31:55 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 12:31:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 12:31:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 12:32:00 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 12924 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 12:32:00 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 12:32:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 12:32:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 5 JPA repository interfaces.
2023-10-12 12:32:01 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 12:32:01 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 12:32:01 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 12:32:01 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 12:32:01 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1544 ms
2023-10-12 12:32:01 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 12:32:01 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 12:32:01 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 12:32:02 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 12:32:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 12:32:02 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1da75dde
2023-10-12 12:32:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 12:32:02 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 12:32:03 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 12:32:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 12:32:04 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 12:32:04 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 12:32:04 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 12:32:04 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 12:32:04 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 12:32:04 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 12:32:04 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 12:32:04 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 12:32:04 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 12:32:04 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 12:32:04 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 12:32:04 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4b3b2a4f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e8eafb2, org.springframework.security.web.context.SecurityContextHolderFilter@1773faf8, org.springframework.security.web.header.HeaderWriterFilter@7890324e, org.springframework.security.web.authentication.logout.LogoutFilter@2bf2523f, vn.tholv.web.config.filter.JwtAuthFilter@2e76d0d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30f99ca1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@edb8f0c, org.springframework.security.web.session.SessionManagementFilter@7e1ae693, org.springframework.security.web.access.ExceptionTranslationFilter@37fc7e3c, org.springframework.security.web.access.intercept.AuthorizationFilter@56b66cc6]
2023-10-12 12:32:04 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 12:32:04 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 12:32:05 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 12:32:05 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.516 seconds (process running for 6.226)
2023-10-12 12:32:10 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 12:32:10 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 12:32:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 12:32:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 12:32:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 12:32:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@62536882
2023-10-12 12:32:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@8bd9d08
2023-10-12 12:32:10 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 12:32:10 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 12:32:10 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 12:32:10 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 12:32:10 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 12:32:10 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 12:32:10 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 12:32:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 12:32:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 12:32:10 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 12:32:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:32:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@354f3af6]]
2023-10-12 12:32:10 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 12:32:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 12:32:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@49a153ba]
2023-10-12 12:32:10 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]]
2023-10-12 12:32:10 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:30:00 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 13:30:00 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 13:30:00 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 13:30:00 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:30:00 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:30:00 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 13:30:00 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 13:30:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 13:30:00 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 13:30:00 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:30:00 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@5dcb7671, vn.tholv.web.core.base.entity.Project@7fc6cd18, vn. (truncated)...]
2023-10-12 13:30:00 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 13:30:00 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:30:00 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@418b9554]
2023-10-12 13:30:00 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]]
2023-10-12 13:30:00 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:30:02 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 13:30:02 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 13:30:02 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 13:30:02 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:30:02 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:30:02 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 13:30:02 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 13:30:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 13:30:02 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 13:30:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:30:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@5a49d42f, vn.tholv.web.core.base.entity.Project@506b8d61, vn. (truncated)...]
2023-10-12 13:30:02 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 13:30:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:30:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@74617919]
2023-10-12 13:30:02 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]]
2023-10-12 13:30:02 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:30:08 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 13:30:08 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 13:30:08 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 13:30:08 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:30:08 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:30:08 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 13:30:08 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 13:30:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 13:30:08 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 13:30:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:30:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@73d7e299, vn.tholv.web.core.base.entity.Project@542c3757, vn. (truncated)...]
2023-10-12 13:30:08 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 13:30:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:30:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@51351a69]
2023-10-12 13:30:08 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]]
2023-10-12 13:30:08 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:30:11 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 13:30:11 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 13:30:11 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 13:30:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:30:11 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:30:11 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 13:30:11 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 13:30:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 13:30:11 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 13:30:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:30:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@c1ad34f, vn.tholv.web.core.base.entity.Project@3f074a8f, vn.t (truncated)...]
2023-10-12 13:30:11 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 13:30:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:30:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@39d83fb6]
2023-10-12 13:30:11 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]]
2023-10-12 13:30:11 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:30:33 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:30:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:30:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:30:35 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 7096 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:30:35 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:30:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:30:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.
2023-10-12 13:30:36 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:30:36 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:30:36 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:30:36 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:30:36 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1010 ms
2023-10-12 13:30:36 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:30:36 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:30:36 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:30:37 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:30:37 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:30:37 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3313463c
2023-10-12 13:30:37 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:30:37 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:30:38 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists projects 
       drop constraint if exists FK7uqjwo7rwcmh3grohbxf6aojx
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       drop constraint if exists FKsfhn82y57i3k9uxww1s007acc
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       drop constraint if exists FK6s1ob9k4ihi75xbxe2w0ylsdh
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       drop constraint if exists FKt7e7djp752sqn6w22i6ocqy6q
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       drop constraint if exists FKj345gk1bovqvfame88rcx7yyx
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists FKj4xjs6i0exxcgearpuykol477
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    drop table if exists projects cascade
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    drop table if exists roles cascade
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    drop table if exists tasks cascade
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    drop table if exists user_role cascade
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    create table projects (
        id serial not null,
        leader_id integer,
        created_date timestamp(6) with time zone,
        modified_date timestamp(6) with time zone,
        start_date timestamp(6),
        name varchar(255),
        money bytea,
        primary key (id)
    )
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    create table roles (
        id serial not null,
        created_date timestamp(6) with time zone,
        modified_date timestamp(6) with time zone,
        name varchar(255),
        primary key (id)
    )
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    create table tasks (
        id serial not null,
        priority integer,
        project_id integer,
        status integer,
        user_id integer,
        created_date timestamp(6) with time zone,
        modified_date timestamp(6) with time zone,
        description varchar(255),
        name varchar(255),
        primary key (id)
    )
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    create table user_role (
        role_id integer not null,
        user_id integer not null,
        primary key (role_id, user_id)
    )
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    create table users (
        id serial not null,
        project_id integer,
        created_date timestamp(6) with time zone,
        modified_date timestamp(6) with time zone,
        email varchar(255),
        password varchar(255),
        username varchar(255) unique,
        primary key (id)
    )
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists projects 
       add constraint FK7uqjwo7rwcmh3grohbxf6aojx 
       foreign key (leader_id) 
       references users
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       add constraint FKsfhn82y57i3k9uxww1s007acc 
       foreign key (project_id) 
       references projects
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       add constraint FK6s1ob9k4ihi75xbxe2w0ylsdh 
       foreign key (user_id) 
       references users
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       add constraint FKt7e7djp752sqn6w22i6ocqy6q 
       foreign key (role_id) 
       references roles
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       add constraint FKj345gk1bovqvfame88rcx7yyx 
       foreign key (user_id) 
       references users
2023-10-12 13:30:38 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKj4xjs6i0exxcgearpuykol477 
       foreign key (project_id) 
       references projects
2023-10-12 13:30:38 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:30:38 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:30:38 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:30:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:30:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:30:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:30:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:30:38 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:30:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:30:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:30:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:30:38 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:30:38 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1de398c3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dc24732, org.springframework.security.web.context.SecurityContextHolderFilter@55a29589, org.springframework.security.web.header.HeaderWriterFilter@40ecead5, org.springframework.security.web.authentication.logout.LogoutFilter@1a61f634, vn.tholv.web.config.filter.JwtAuthFilter@4280b20b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a7427f9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@155767a7, org.springframework.security.web.session.SessionManagementFilter@b867869, org.springframework.security.web.access.ExceptionTranslationFilter@706c2726, org.springframework.security.web.access.intercept.AuthorizationFilter@73dc7db0]
2023-10-12 13:30:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:30:38 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:30:39 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:30:39 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.843 seconds (process running for 4.335)
2023-10-12 13:30:49 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:30:49 DEBUG org.hibernate.SQL - 
    alter table if exists projects 
       drop constraint if exists FK7uqjwo7rwcmh3grohbxf6aojx
2023-10-12 13:30:49 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       drop constraint if exists FKsfhn82y57i3k9uxww1s007acc
2023-10-12 13:30:49 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       drop constraint if exists FK6s1ob9k4ihi75xbxe2w0ylsdh
2023-10-12 13:30:49 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       drop constraint if exists FKt7e7djp752sqn6w22i6ocqy6q
2023-10-12 13:30:49 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       drop constraint if exists FKj345gk1bovqvfame88rcx7yyx
2023-10-12 13:30:50 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists FKj4xjs6i0exxcgearpuykol477
2023-10-12 13:30:50 DEBUG org.hibernate.SQL - 
    drop table if exists projects cascade
2023-10-12 13:30:50 DEBUG org.hibernate.SQL - 
    drop table if exists roles cascade
2023-10-12 13:30:50 DEBUG org.hibernate.SQL - 
    drop table if exists tasks cascade
2023-10-12 13:30:50 DEBUG org.hibernate.SQL - 
    drop table if exists user_role cascade
2023-10-12 13:30:50 DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2023-10-12 13:30:50 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:30:50 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:30:51 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 20364 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:30:51 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:30:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:30:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2023-10-12 13:30:52 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:30:52 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:30:52 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:30:52 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:30:52 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1043 ms
2023-10-12 13:30:53 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:30:53 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:30:53 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:30:53 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:30:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:30:53 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@41ece227
2023-10-12 13:30:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:30:53 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:30:54 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    create table projects (
        id serial not null,
        created_date timestamp(6) with time zone,
        modified_date timestamp(6) with time zone,
        money bytea,
        name varchar(255),
        start_date timestamp(6),
        leader_id integer,
        primary key (id)
    )
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    create table roles (
        id serial not null,
        created_date timestamp(6) with time zone,
        modified_date timestamp(6) with time zone,
        name varchar(255),
        primary key (id)
    )
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    create table tasks (
        id serial not null,
        created_date timestamp(6) with time zone,
        modified_date timestamp(6) with time zone,
        description varchar(255),
        name varchar(255),
        priority integer,
        status integer,
        project_id integer,
        user_id integer,
        primary key (id)
    )
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    create table user_role (
        user_id integer not null,
        role_id integer not null,
        primary key (user_id, role_id)
    )
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    create table users (
        id serial not null,
        created_date timestamp(6) with time zone,
        modified_date timestamp(6) with time zone,
        email varchar(255),
        password varchar(255),
        username varchar(255),
        project_id integer,
        primary key (id)
    )
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK_r43af9ap4edm43mmtq01oddj6
2023-10-12 13:30:54 WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2023-10-12 13:30:54 WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "uk_r43af9ap4edm43mmtq01oddj6" of relation "users" does not exist, skipping
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    alter table if exists projects 
       add constraint FK7uqjwo7rwcmh3grohbxf6aojx 
       foreign key (leader_id) 
       references users
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       add constraint FKsfhn82y57i3k9uxww1s007acc 
       foreign key (project_id) 
       references projects
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    alter table if exists tasks 
       add constraint FK6s1ob9k4ihi75xbxe2w0ylsdh 
       foreign key (user_id) 
       references users
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       add constraint FKt7e7djp752sqn6w22i6ocqy6q 
       foreign key (role_id) 
       references roles
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    alter table if exists user_role 
       add constraint FKj345gk1bovqvfame88rcx7yyx 
       foreign key (user_id) 
       references users
2023-10-12 13:30:54 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKj4xjs6i0exxcgearpuykol477 
       foreign key (project_id) 
       references projects
2023-10-12 13:30:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:30:55 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:30:55 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:30:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:30:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:30:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:30:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:30:55 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:30:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:30:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:30:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:30:55 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:30:55 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1a3272e0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7bc3c59f, org.springframework.security.web.context.SecurityContextHolderFilter@73476e2d, org.springframework.security.web.header.HeaderWriterFilter@147892be, org.springframework.security.web.authentication.logout.LogoutFilter@cbaabfb, vn.tholv.web.config.filter.JwtAuthFilter@1f86f7da, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ab6ec33, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@594965c9, org.springframework.security.web.session.SessionManagementFilter@1ef7e4c7, org.springframework.security.web.access.ExceptionTranslationFilter@20a2930f, org.springframework.security.web.access.intercept.AuthorizationFilter@47f4dc8d]
2023-10-12 13:30:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:30:55 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:30:55 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:30:55 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.033 seconds (process running for 4.541)
2023-10-12 13:31:36 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:31:36 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:31:36 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:31:38 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 5716 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:31:38 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:31:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:31:39 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2023-10-12 13:31:39 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:31:39 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:31:39 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:31:40 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:31:40 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1047 ms
2023-10-12 13:31:40 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:31:40 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:31:40 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:31:40 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:31:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:31:40 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3313463c
2023-10-12 13:31:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:31:40 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:31:41 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:31:41 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:31:42 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:31:42 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:31:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:31:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:31:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:31:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:31:42 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:31:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:31:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:31:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:31:42 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:31:42 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@37ad818e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41271320, org.springframework.security.web.context.SecurityContextHolderFilter@61c644fe, org.springframework.security.web.header.HeaderWriterFilter@3e0600a4, org.springframework.security.web.authentication.logout.LogoutFilter@8cd2bb5, vn.tholv.web.config.filter.JwtAuthFilter@145ef9e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48614fb3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4eb3b690, org.springframework.security.web.session.SessionManagementFilter@75c30a4f, org.springframework.security.web.access.ExceptionTranslationFilter@7e484bd, org.springframework.security.web.access.intercept.AuthorizationFilter@1dfd6023]
2023-10-12 13:31:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:31:42 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:31:42 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:31:42 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.05 seconds (process running for 4.657)
2023-10-12 13:31:56 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 13:31:56 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 13:31:56 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 13:31:56 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 13:31:56 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 13:31:56 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@363ee411
2023-10-12 13:31:56 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4f2b1a2f
2023-10-12 13:31:56 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 13:31:56 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 11 ms
2023-10-12 13:31:56 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 13:31:56 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 13:31:56 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 13:31:57 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:31:57 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception
java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.userdetails.UserDetails.getUsername()" because "userDetails" is null
	at vn.tholv.web.core.base.service.JwtServiceImpl.validateToken(JwtServiceImpl.java:59)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 13:31:57 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 13:31:57 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 13:31:57 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 13:31:57 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:31:57 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:31:57 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:31:57 ICT 2023, status=500, error=Internal Server Error, path=/api/project/ (truncated)...]
2023-10-12 13:31:57 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 13:34:19 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 13:34:19 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 13:34:19 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 13:34:19 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 13:34:19 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 13:34:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 13:34:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@6aae07c8]
2023-10-12 13:34:20 DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.created_date,
        r1_0.modified_date,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2023-10-12 13:34:20 DEBUG org.hibernate.SQL - 
    insert 
    into
        roles
        (created_date, modified_date, name) 
    values
        (?, ?, ?)
2023-10-12 13:34:20 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_date, email, modified_date, password, project_id, username) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 13:34:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:34:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.User@6aae07c8]
2023-10-12 13:34:20 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 13:34:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:34:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@48bd8159]
2023-10-12 13:34:20 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]]
2023-10-12 13:34:20 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:45:08 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 13:45:08 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 13:45:08 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 13:45:08 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 13:45:08 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 13:45:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 13:45:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@50b50a2c]
2023-10-12 13:45:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:45:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:45:09 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 13:45:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:45:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{refreshToken=Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0aG9sdjA1MDgiLCJpYXQiOjE2OTcwOTMxMDksImV4cCI6MT (truncated)...]
2023-10-12 13:45:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:45:14 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 13:45:14 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 13:45:14 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 13:45:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:45:14 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:45:14 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 13:45:14 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 13:45:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 13:45:14 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 13:45:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:45:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[]]
2023-10-12 13:45:14 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:45:16 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:45:16 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:45:16 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:45:16 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:45:16 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:45:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:45:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:45:16 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:45:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:45:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@3108112a]]
2023-10-12 13:45:16 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 13:45:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:45:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@40181dff]
2023-10-12 13:45:16 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]]
2023-10-12 13:45:16 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:45:30 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:45:30 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:45:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:45:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:45:30 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:45:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:45:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:45:30 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:45:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:45:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4646c50]]
2023-10-12 13:45:30 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler vn.tholv.web.core.exception.handle.HandlerExceptionRestController#handleException(Exception)
2023-10-12 13:45:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:45:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.exception.ExceptionError@133d8e5e]
2023-10-12 13:45:30 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]]
2023-10-12 13:45:30 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:45:47 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:45:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:45:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:45:51 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 13096 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:45:51 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:45:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:45:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2023-10-12 13:45:52 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:45:52 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:45:52 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:45:52 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:45:52 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1146 ms
2023-10-12 13:45:52 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:45:53 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:45:53 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:45:53 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:45:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:45:53 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4656fcc5
2023-10-12 13:45:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:45:53 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:45:54 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:45:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:45:54 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:45:54 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:45:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:45:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:45:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:45:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:45:55 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:45:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:45:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:45:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:45:55 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:45:55 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@cbaabfb, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@48614fb3, org.springframework.security.web.context.SecurityContextHolderFilter@1a3a6216, org.springframework.security.web.header.HeaderWriterFilter@1b83fac3, org.springframework.security.web.authentication.logout.LogoutFilter@6f70015, vn.tholv.web.config.filter.JwtAuthFilter@15f229e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1de398c3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@dc24732, org.springframework.security.web.session.SessionManagementFilter@3533d790, org.springframework.security.web.access.ExceptionTranslationFilter@3f7bf0f6, org.springframework.security.web.access.intercept.AuthorizationFilter@360e4235]
2023-10-12 13:45:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:45:55 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:45:55 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:45:55 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.105 seconds (process running for 4.561)
2023-10-12 13:46:00 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 13:46:00 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 13:46:00 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 13:46:00 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 13:46:00 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 13:46:00 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@60e5b3a8
2023-10-12 13:46:00 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@722d3ddb
2023-10-12 13:46:00 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 13:46:00 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 13:46:00 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:46:00 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:46:00 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:46:00 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:46:00 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:46:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:46:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:46:01 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:46:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:46:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@43391f23]]
2023-10-12 13:46:01 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]
2023-10-12 13:46:01 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: java.util.ImmutableCollections$ListN[0]->vn.tholv.web.core.base.entity.User["createdDate"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:190)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 13:46:01 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 13:46:01 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 13:46:01 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 13:46:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:46:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:46:01 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:46:01 ICT 2023, status=500, error=Internal Server Error, path=/api/user/fin (truncated)...]
2023-10-12 13:46:01 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 13:47:19 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:47:19 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:47:19 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:47:23 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 24868 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:47:23 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:47:23 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:47:23 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.
2023-10-12 13:47:24 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:47:24 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:47:24 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:47:24 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:47:24 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1058 ms
2023-10-12 13:47:24 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:47:24 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:47:24 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:47:24 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:47:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:47:24 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c16677c
2023-10-12 13:47:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:47:24 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:47:25 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:47:25 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:47:26 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:47:26 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:47:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:47:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:47:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:47:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:47:26 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:47:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:47:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:47:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:47:26 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:47:26 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@75c30a4f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@360e4235, org.springframework.security.web.context.SecurityContextHolderFilter@13d1653, org.springframework.security.web.header.HeaderWriterFilter@3abb6aa, org.springframework.security.web.authentication.logout.LogoutFilter@1773faf8, vn.tholv.web.config.filter.JwtAuthFilter@1f86f7da, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23e1f610, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73dc7db0, org.springframework.security.web.session.SessionManagementFilter@20a2930f, org.springframework.security.web.access.ExceptionTranslationFilter@e30a8ef, org.springframework.security.web.access.intercept.AuthorizationFilter@33ce081a]
2023-10-12 13:47:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:47:26 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:47:26 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:47:26 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.942 seconds (process running for 4.434)
2023-10-12 13:47:35 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 13:47:35 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 13:47:35 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 13:47:35 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 13:47:35 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 13:47:35 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5cdf61d
2023-10-12 13:47:35 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@434a2a10
2023-10-12 13:47:35 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 13:47:35 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 13:47:35 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:47:35 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:47:35 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:47:35 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:47:35 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:47:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:47:35 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:47:35 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:47:35 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:47:35 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@19fc7160]]
2023-10-12 13:47:35 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]
2023-10-12 13:47:35 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: java.util.ImmutableCollections$ListN[0]->vn.tholv.web.core.base.entity.User["createdDate"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:190)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 13:47:35 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 13:47:35 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 13:47:35 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 13:47:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:47:35 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:47:35 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:47:35 ICT 2023, status=500, error=Internal Server Error, path=/api/user/fin (truncated)...]
2023-10-12 13:47:36 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 13:47:57 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:47:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:47:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:47:59 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 10856 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:47:59 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:48:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:48:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 5 JPA repository interfaces.
2023-10-12 13:48:00 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:48:00 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:48:00 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:48:00 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:48:00 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 983 ms
2023-10-12 13:48:00 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:48:00 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:48:00 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:48:00 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:48:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:48:01 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6133e20b
2023-10-12 13:48:01 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:48:01 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:48:01 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:48:01 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:48:02 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:48:02 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:48:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:48:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:48:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:48:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:48:02 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:48:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:48:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:48:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:48:02 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:48:02 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b6b8cea, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73158d35, org.springframework.security.web.context.SecurityContextHolderFilter@53b83897, org.springframework.security.web.header.HeaderWriterFilter@6c399d4, org.springframework.security.web.authentication.logout.LogoutFilter@74159dc9, vn.tholv.web.config.filter.JwtAuthFilter@4df5f119, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@372e972d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@463746eb, org.springframework.security.web.session.SessionManagementFilter@61e34bec, org.springframework.security.web.access.ExceptionTranslationFilter@4def900a, org.springframework.security.web.access.intercept.AuthorizationFilter@2db4a84a]
2023-10-12 13:48:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:48:02 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:48:02 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:48:02 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.588 seconds (process running for 4.118)
2023-10-12 13:48:07 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 13:48:07 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 13:48:07 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 13:48:07 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 13:48:07 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 13:48:07 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4c51fc9a
2023-10-12 13:48:07 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@220d7eb7
2023-10-12 13:48:07 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 13:48:07 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 13:48:07 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:48:07 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:48:07 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:48:07 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:48:07 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:48:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:48:08 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:48:08 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:48:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:48:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6e0adb27]]
2023-10-12 13:48:08 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]
2023-10-12 13:48:08 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: java.util.ImmutableCollections$ListN[0]->vn.tholv.web.core.base.entity.User["createdDate"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:190)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 13:48:08 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 13:48:08 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 13:48:08 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 13:48:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:48:08 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:48:08 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:48:08 ICT 2023, status=500, error=Internal Server Error, path=/api/user/fin (truncated)...]
2023-10-12 13:48:08 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 13:48:30 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:48:30 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:48:30 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:48:35 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 10360 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:48:35 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:48:35 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:48:35 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 5 JPA repository interfaces.
2023-10-12 13:48:36 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:48:36 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:48:36 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:48:36 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:48:36 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1079 ms
2023-10-12 13:48:36 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:48:36 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:48:36 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:48:36 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:48:36 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:48:36 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@687a0e40
2023-10-12 13:48:36 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:48:36 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:48:37 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:48:37 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:48:38 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:48:38 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:48:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:48:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:48:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:48:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:48:38 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:48:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:48:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:48:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:48:38 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:48:38 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4cc28ad0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29811d4d, org.springframework.security.web.context.SecurityContextHolderFilter@3a678e40, org.springframework.security.web.header.HeaderWriterFilter@2723b0d0, org.springframework.security.web.authentication.logout.LogoutFilter@68303aad, vn.tholv.web.config.filter.JwtAuthFilter@3eb641a8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3445ddf2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27b84c9a, org.springframework.security.web.session.SessionManagementFilter@321558f8, org.springframework.security.web.access.ExceptionTranslationFilter@428e9be2, org.springframework.security.web.access.intercept.AuthorizationFilter@5b27d03d]
2023-10-12 13:48:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:48:38 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:48:38 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:48:38 INFO  vn.tholv.web.WebApplication - Started WebApplication in 3.671 seconds (process running for 4.118)
2023-10-12 13:49:09 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 13:49:09 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 13:49:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 13:49:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 13:49:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 13:49:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@45689582
2023-10-12 13:49:09 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@306c8e09
2023-10-12 13:49:09 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 13:49:09 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 13:49:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:49:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:49:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:49:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:49:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:49:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:49:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:49:10 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:49:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:49:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@497e33ee]]
2023-10-12 13:49:10 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]
2023-10-12 13:49:10 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: java.util.ImmutableCollections$ListN[0]->vn.tholv.web.core.base.entity.User["createdDate"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:190)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-10-12 13:49:10 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 13:49:10 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 13:49:10 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 13:49:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:49:10 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:49:10 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:49:10 ICT 2023, status=500, error=Internal Server Error, path=/api/user/fin (truncated)...]
2023-10-12 13:49:10 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 13:50:05 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:50:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:50:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:50:08 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 19.0.2 with PID 30060 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:50:08 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:50:09 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:50:09 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2023-10-12 13:50:10 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:50:10 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:50:10 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:50:10 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:50:10 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1156 ms
2023-10-12 13:50:10 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:50:10 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:50:10 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:50:10 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:50:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:50:10 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1231a1be
2023-10-12 13:50:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:50:10 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:50:11 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:50:11 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:50:11 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:50:12 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:50:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:50:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:50:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:50:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:50:12 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:50:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:50:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:50:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:50:12 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:50:12 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7bc3c59f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6db2a260, org.springframework.security.web.context.SecurityContextHolderFilter@52b77d5e, org.springframework.security.web.header.HeaderWriterFilter@13d1653, org.springframework.security.web.authentication.logout.LogoutFilter@48614fb3, vn.tholv.web.config.filter.JwtAuthFilter@404566e7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@594965c9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11b74ecb, org.springframework.security.web.session.SessionManagementFilter@57edfa89, org.springframework.security.web.access.ExceptionTranslationFilter@609edb55, org.springframework.security.web.access.intercept.AuthorizationFilter@689fcf08]
2023-10-12 13:50:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:50:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:50:12 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:50:12 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.118 seconds (process running for 4.571)
2023-10-12 13:50:42 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:50:42 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:50:42 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:50:53 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 30340 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:50:53 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:50:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:50:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 5 JPA repository interfaces.
2023-10-12 13:50:54 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:50:54 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:50:54 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:50:54 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:50:54 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1112 ms
2023-10-12 13:50:54 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:50:54 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:50:54 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:50:55 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:50:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:50:55 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a69f9d
2023-10-12 13:50:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:50:55 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:50:56 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:50:56 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:50:56 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:50:56 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:50:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:50:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:50:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:50:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:50:56 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:50:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:50:56 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:50:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:50:56 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:50:57 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4b20a8e4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ad4ef13, org.springframework.security.web.context.SecurityContextHolderFilter@1d9cac6e, org.springframework.security.web.header.HeaderWriterFilter@eb66b47, org.springframework.security.web.authentication.logout.LogoutFilter@52518ee1, vn.tholv.web.config.filter.JwtAuthFilter@5e75cf7a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@55a2ca5e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6abca7a6, org.springframework.security.web.session.SessionManagementFilter@6805415d, org.springframework.security.web.access.ExceptionTranslationFilter@20724c21, org.springframework.security.web.access.intercept.AuthorizationFilter@6f09cb98]
2023-10-12 13:50:57 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:50:57 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:50:57 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:50:57 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.112 seconds (process running for 4.693)
2023-10-12 13:51:05 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 13:51:05 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@32eeef08
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5bb90b89
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 13:51:05 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 13:51:05 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:51:05 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:51:05 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:51:05 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:51:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:51:05 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:51:05 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:51:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:51:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1b025e86]]
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]
2023-10-12 13:51:05 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class java.time.Instant]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.Instant` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: java.util.ImmutableCollections$ListN[0]->vn.tholv.web.core.base.entity.User["createdDate"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:190)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 13:51:05 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 13:51:05 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 13:51:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:51:05 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:51:05 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:51:05 ICT 2023, status=500, error=Internal Server Error, path=/api/user/fin (truncated)...]
2023-10-12 13:51:05 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 13:52:21 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:52:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:52:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:52:26 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 28448 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:52:26 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:52:27 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:52:27 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 5 JPA repository interfaces.
2023-10-12 13:52:27 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:52:27 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:52:27 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:52:27 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:52:27 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1071 ms
2023-10-12 13:52:27 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:52:27 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:52:27 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:52:28 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:52:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:52:28 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@432c0f1
2023-10-12 13:52:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:52:28 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:52:29 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:52:29 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:52:29 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:52:29 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:52:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:52:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:52:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:52:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:52:29 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:52:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:52:29 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:52:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:52:30 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:52:30 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@69c335c4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6f09cb98, org.springframework.security.web.context.SecurityContextHolderFilter@75bbe39d, org.springframework.security.web.header.HeaderWriterFilter@1a23136f, org.springframework.security.web.authentication.logout.LogoutFilter@1930e8ef, vn.tholv.web.config.filter.JwtAuthFilter@38213efa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@870413c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3791160a, org.springframework.security.web.session.SessionManagementFilter@7f5c4ff8, org.springframework.security.web.access.ExceptionTranslationFilter@6dcdc378, org.springframework.security.web.access.intercept.AuthorizationFilter@157267db]
2023-10-12 13:52:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:52:30 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:52:30 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:52:30 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.105 seconds (process running for 4.662)
2023-10-12 13:52:44 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:52:44 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:52:44 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:52:48 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 14036 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:52:48 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:52:49 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:52:49 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 5 JPA repository interfaces.
2023-10-12 13:52:50 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:52:50 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:52:50 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:52:50 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:52:50 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1147 ms
2023-10-12 13:52:50 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:52:50 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:52:50 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:52:50 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:52:50 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:52:50 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1846ad0f
2023-10-12 13:52:50 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:52:50 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:52:51 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:52:52 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:52:52 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:52:52 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:52:52 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:52:52 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:52:52 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:52:52 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:52:52 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:52:52 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:52:52 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:52:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:52:52 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:52:52 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@29280ca6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c7a4986, org.springframework.security.web.context.SecurityContextHolderFilter@55a2ca5e, org.springframework.security.web.header.HeaderWriterFilter@23c61c1b, org.springframework.security.web.authentication.logout.LogoutFilter@1a4564a2, vn.tholv.web.config.filter.JwtAuthFilter@12c30824, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12bb8943, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45f4c27c, org.springframework.security.web.session.SessionManagementFilter@3791160a, org.springframework.security.web.access.ExceptionTranslationFilter@eb66b47, org.springframework.security.web.access.intercept.AuthorizationFilter@3b3dc752]
2023-10-12 13:52:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:52:52 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:52:53 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:52:53 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.508 seconds (process running for 5.068)
2023-10-12 13:53:10 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 13:53:10 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 13:53:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 13:53:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 13:53:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 13:53:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@46cb800b
2023-10-12 13:53:10 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4c231f62
2023-10-12 13:53:10 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 13:53:10 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 13:53:10 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:53:10 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:53:10 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:53:10 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:53:10 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:53:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:53:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:53:11 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:53:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:53:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1bcaf1cb]]
2023-10-12 13:53:11 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:53:11 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:53:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 13:53:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 13:53:31 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 13:53:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:53:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:53:31 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 13:53:31 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 13:53:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 13:53:31 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-12T16:53": not a valid representation (error: Failed to parse Date value '2023-10-12T16:53': Unparseable date: "2023-10-12T16:53")
2023-10-12 13:53:31 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-12T16:53": not a valid representation (error: Failed to parse Date value '2023-10-12T16:53': Unparseable date: "2023-10-12T16:53")]
2023-10-12 13:53:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 13:53:31 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 13:53:31 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 13:53:31 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 13:53:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:53:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:53:31 ICT 2023, status=400, error=Bad Request, path=/api/project/save}]
2023-10-12 13:53:31 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 13:54:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:54:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:54:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:54:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:54:33 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:54:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:54:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:54:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:54:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:54:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@77fae397]]
2023-10-12 13:54:33 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:54:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:54:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:54:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:54:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:54:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:54:33 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:54:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:54:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:54:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:54:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:54:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@31f90aef]]
2023-10-12 13:54:33 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:54:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:54:42 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 13:54:42 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 13:54:42 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 13:54:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:54:42 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:54:42 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 13:54:42 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 13:54:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 13:54:42 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-13T13:55": not a valid representation (error: Failed to parse Date value '2023-10-13T13:55': Unparseable date: "2023-10-13T13:55")
2023-10-12 13:54:42 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-13T13:55": not a valid representation (error: Failed to parse Date value '2023-10-13T13:55': Unparseable date: "2023-10-13T13:55")]
2023-10-12 13:54:42 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 13:54:42 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 13:54:42 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 13:54:42 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 13:54:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:54:42 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:54:42 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:54:42 ICT 2023, status=400, error=Bad Request, path=/api/project/save}]
2023-10-12 13:54:42 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 13:55:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:55:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:55:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:55:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:55:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:55:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:55:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:55:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:55:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:55:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@58289374]]
2023-10-12 13:55:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:55:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:55:21 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:55:21 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:55:21 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:55:21 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:55:21 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:55:21 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:55:21 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:55:21 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:55:21 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:55:21 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@2b8a6d16]]
2023-10-12 13:55:21 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:55:21 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:55:22 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:55:22 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:55:22 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:55:22 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:55:22 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:55:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:55:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:55:22 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:55:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:55:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@32a676d8]]
2023-10-12 13:55:22 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:55:22 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:55:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 13:55:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 13:55:33 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 13:55:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:55:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:55:33 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 13:55:33 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 13:55:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 13:55:33 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-12T14:55": not a valid representation (error: Failed to parse Date value '2023-10-12T14:55': Unparseable date: "2023-10-12T14:55")
2023-10-12 13:55:33 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-12T14:55": not a valid representation (error: Failed to parse Date value '2023-10-12T14:55': Unparseable date: "2023-10-12T14:55")]
2023-10-12 13:55:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 13:55:33 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 13:55:33 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 13:55:33 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 13:55:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:55:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:55:33 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:55:33 ICT 2023, status=400, error=Bad Request, path=/api/project/save}]
2023-10-12 13:55:33 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 13:55:56 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:55:56 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:55:56 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:55:58 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 9792 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:55:58 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:55:59 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:55:59 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 JPA repository interfaces.
2023-10-12 13:55:59 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:55:59 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:55:59 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:55:59 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:55:59 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1267 ms
2023-10-12 13:56:00 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:56:00 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:56:00 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:56:00 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:56:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:56:00 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@166e5a6d
2023-10-12 13:56:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:56:00 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:56:01 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:56:01 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:56:02 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:56:02 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:56:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:56:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:56:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:56:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:56:02 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:56:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:56:02 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:56:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:56:02 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:56:02 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1a4564a2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@157267db, org.springframework.security.web.context.SecurityContextHolderFilter@6edb093f, org.springframework.security.web.header.HeaderWriterFilter@280f061e, org.springframework.security.web.authentication.logout.LogoutFilter@2d732cda, vn.tholv.web.config.filter.JwtAuthFilter@3cfab56d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7692c0e9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@431f8830, org.springframework.security.web.session.SessionManagementFilter@773cc551, org.springframework.security.web.access.ExceptionTranslationFilter@5b697993, org.springframework.security.web.access.intercept.AuthorizationFilter@4cb87009]
2023-10-12 13:56:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:56:02 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:56:02 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:56:02 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.408 seconds (process running for 5.082)
2023-10-12 13:56:08 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 13:56:08 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@8318808
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@397f9672
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 13:56:08 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 13:56:08 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 13:56:08 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 13:56:08 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 13:56:08 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:56:08 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:56:08 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 13:56:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 13:56:08 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot deserialize value of type `java.lang.Integer` from Object value (token `JsonToken.START_OBJECT`)
2023-10-12 13:56:08 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.Integer` from Object value (token `JsonToken.START_OBJECT`)]
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 13:56:08 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 13:56:08 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 13:56:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:56:08 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:56:08 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:56:08 ICT 2023, status=400, error=Bad Request, path=/api/project/save}]
2023-10-12 13:56:08 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 13:56:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:56:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 13:56:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 13:56:45 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 23120 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 13:56:45 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 13:56:46 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 13:56:46 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 5 JPA repository interfaces.
2023-10-12 13:56:47 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 13:56:47 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 13:56:47 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 13:56:47 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 13:56:47 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1880 ms
2023-10-12 13:56:47 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 13:56:47 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 13:56:47 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 13:56:47 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 13:56:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 13:56:47 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@10b87ff6
2023-10-12 13:56:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 13:56:47 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 13:56:48 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 13:56:48 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 13:56:49 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 13:56:49 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 13:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 13:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 13:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 13:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 13:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 13:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 13:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 13:56:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 13:56:49 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 13:56:49 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6dcdc378, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4accc3de, org.springframework.security.web.context.SecurityContextHolderFilter@5cbebfba, org.springframework.security.web.header.HeaderWriterFilter@182469d0, org.springframework.security.web.authentication.logout.LogoutFilter@5b977aaa, vn.tholv.web.config.filter.JwtAuthFilter@62ba3045, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58df2864, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@76ccde41, org.springframework.security.web.session.SessionManagementFilter@288e50c1, org.springframework.security.web.access.ExceptionTranslationFilter@72321701, org.springframework.security.web.access.intercept.AuthorizationFilter@7ffb0bb4]
2023-10-12 13:56:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 13:56:49 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 13:56:49 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 13:56:49 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.678 seconds (process running for 6.309)
2023-10-12 13:57:19 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 13:57:19 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4884350b
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@9cdf13e
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 13:57:19 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 13:57:19 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 13:57:19 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 13:57:19 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 13:57:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:57:19 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:57:19 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 13:57:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 13:57:19 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.save(T): JSON parse error: Cannot deserialize value of type `java.lang.Integer` from Object value (token `JsonToken.START_OBJECT`)
2023-10-12 13:57:19 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.Integer` from Object value (token `JsonToken.START_OBJECT`)]
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 13:57:19 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 13:57:19 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 13:57:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 13:57:19 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:57:19 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 13:57:19 ICT 2023, status=400, error=Bad Request, path=/api/project/save}]
2023-10-12 13:57:19 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 13:57:35 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:57:35 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:57:35 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:57:35 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:57:35 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:57:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:57:35 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:57:35 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:57:35 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:57:35 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@69e931e8]]
2023-10-12 13:57:35 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:57:35 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:57:46 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 13:57:46 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 13:57:46 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 13:57:46 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:57:46 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:57:46 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 13:57:46 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 13:57:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 13:57:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Project@bd999a0]
2023-10-12 13:57:46 DEBUG org.hibernate.SQL - 
    insert 
    into
        projects
        (created_date, leader_id, modified_date, money, name, start_date) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 13:57:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:57:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@bd999a0]
2023-10-12 13:57:46 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:57:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 13:57:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 13:57:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 13:57:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:57:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:57:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 13:57:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 13:57:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 13:57:48 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 13:57:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 13:57:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:57:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@3f49eab9]]
2023-10-12 13:57:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:57:48 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 13:57:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 13:57:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:59:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 13:59:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 13:59:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 13:59:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:59:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:59:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 13:59:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 13:59:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 13:59:03 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 13:59:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 13:59:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:59:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@70a9b4c6]]
2023-10-12 13:59:03 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:59:03 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 13:59:03 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 13:59:03 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:59:06 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 13:59:06 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 13:59:06 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 13:59:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 13:59:06 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:59:06 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 13:59:06 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 13:59:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 13:59:06 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 13:59:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 13:59:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:59:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@4bbccaf7]]
2023-10-12 13:59:06 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:59:06 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 13:59:06 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 13:59:06 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:59:11 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:59:11 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:59:11 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:59:11 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:59:11 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:59:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:59:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:59:11 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:59:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:59:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@e8d65e1]]
2023-10-12 13:59:11 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:59:11 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:59:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:59:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:59:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:59:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:59:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:59:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:59:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:59:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:59:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:59:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@35a8bb37]]
2023-10-12 13:59:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:59:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 13:59:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 13:59:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 13:59:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 13:59:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 13:59:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 13:59:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 13:59:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 13:59:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 13:59:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 13:59:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@258a1938]]
2023-10-12 13:59:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 13:59:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:00:23 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:00:23 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:00:23 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:00:23 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:00:23 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:00:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:00:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:00:23 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:00:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:00:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@3bab8f6c]]
2023-10-12 14:00:23 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:00:23 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:00:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:00:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:00:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:00:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:00:33 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:00:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:00:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:00:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:00:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:00:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@23a241ef]]
2023-10-12 14:00:33 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:00:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:03:07 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:03:07 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:03:07 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:03:07 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:03:07 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:03:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:03:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:03:07 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:03:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:03:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5d98463e]]
2023-10-12 14:03:07 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:03:07 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:03:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:03:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:03:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:03:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:03:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:03:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:03:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:03:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:03:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:03:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5f264dd6]]
2023-10-12 14:03:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:03:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:03:22 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 14:03:22 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 14:03:22 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 14:03:22 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:03:22 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:03:22 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 14:03:22 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 14:03:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 14:03:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Project@baebe14]
2023-10-12 14:03:22 DEBUG org.hibernate.SQL - 
    insert 
    into
        projects
        (created_date, leader_id, modified_date, money, name, start_date) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 14:03:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:03:22 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@baebe14]
2023-10-12 14:03:22 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:03:24 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:03:24 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:03:24 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:03:24 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:03:24 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:03:24 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:03:24 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:03:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:03:24 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:03:24 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:03:24 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:03:24 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@12f035bd, vn.tholv.web.core.base.entity.Project@50e18e35]]
2023-10-12 14:03:24 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:03:24 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:03:24 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:03:24 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:03:24 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:03:24 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:04:34 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:04:34 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:04:34 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:04:34 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:04:34 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:04:34 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:04:34 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:04:34 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:04:34 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:04:34 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:04:34 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:04:34 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@23bf7a56, vn.tholv.web.core.base.entity.Project@36d47b63]]
2023-10-12 14:04:34 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:04:34 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:04:34 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:04:34 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:04:34 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:04:34 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:05:27 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:05:27 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:05:27 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:05:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:05:27 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:05:27 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:05:27 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:05:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:05:27 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:05:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:05:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:05:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@24d15e12, vn.tholv.web.core.base.entity.Project@4f5882c4]]
2023-10-12 14:05:27 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:05:27 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:05:27 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:05:27 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:05:27 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:05:27 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:06:52 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:06:52 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:06:52 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:06:52 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:06:52 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:06:52 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:06:52 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:06:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:06:52 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:06:52 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:06:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:06:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@23d2d463, vn.tholv.web.core.base.entity.Project@33f0bca1]]
2023-10-12 14:06:52 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:06:52 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:06:52 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:06:52 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:06:52 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:06:52 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:07:13 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:07:13 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:07:13 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:07:13 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:07:13 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:07:13 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:07:13 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:07:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:07:13 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:07:13 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:07:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:07:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@297d1d72, vn.tholv.web.core.base.entity.Project@23b5c6fe]]
2023-10-12 14:07:13 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:07:13 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:07:13 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:07:13 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:07:13 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:07:13 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:07:16 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:07:16 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:07:16 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:07:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:07:16 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:07:16 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:07:16 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:07:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:07:16 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:07:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:07:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:07:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@2b562218, vn.tholv.web.core.base.entity.Project@4a624708]]
2023-10-12 14:07:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:07:16 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:07:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:07:16 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:07:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:07:16 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:07:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:07:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:07:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:07:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:07:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:07:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:07:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:07:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:07:50 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:07:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:07:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:07:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@1c543754, vn.tholv.web.core.base.entity.Project@756cbbd2]]
2023-10-12 14:07:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:07:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:07:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:07:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:07:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:07:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:08:05 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:08:05 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:08:05 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:08:05 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:08:05 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:08:05 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:08:05 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:08:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:08:05 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:08:05 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:08:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:08:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@197b1ce, vn.tholv.web.core.base.entity.Project@2d6586bb]]
2023-10-12 14:08:05 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:08:05 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:05 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:05 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:05 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:05 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:08:08 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:08:08 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:08:08 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:08:08 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:08:08 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:08:08 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:08:08 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:08:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:08:08 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:08:08 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:08:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:08:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@2c3a4ebd, vn.tholv.web.core.base.entity.Project@50433485]]
2023-10-12 14:08:08 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:08:08 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:08 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:08 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:08 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:08 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:08:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:08:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:08:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:08:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:08:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:08:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:08:33 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:08:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:08:33 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:08:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:08:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:08:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@2c3b08b5, vn.tholv.web.core.base.entity.Project@1284bf50]]
2023-10-12 14:08:33 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:08:33 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:33 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:33 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:33 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:08:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:08:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:08:36 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:08:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:08:36 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:08:36 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:08:36 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:08:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:08:36 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:08:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:08:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:08:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@3bd0e45f, vn.tholv.web.core.base.entity.Project@47b5a63f]]
2023-10-12 14:08:36 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:08:36 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:36 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:36 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:36 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:36 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:08:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:08:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:08:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:08:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:08:58 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:08:58 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:08:58 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:08:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:08:58 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:08:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:08:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:08:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@6fc1b32d, vn.tholv.web.core.base.entity.Project@26d2401]]
2023-10-12 14:08:58 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:08:58 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:58 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:58 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:08:58 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:08:58 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:09:00 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:09:00 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:09:00 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:09:00 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:09:00 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:09:00 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:09:00 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:09:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:09:00 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:09:00 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:09:00 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:09:00 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@18f0623b, vn.tholv.web.core.base.entity.Project@1f63cb0b]]
2023-10-12 14:09:00 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:09:00 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:09:00 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:09:00 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:09:00 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:09:00 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:09:40 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:09:40 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:09:40 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:09:40 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:09:40 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:09:40 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:09:40 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:09:40 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:09:40 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:09:40 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:09:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:09:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@663709ba, vn.tholv.web.core.base.entity.Project@11af9c86]]
2023-10-12 14:09:40 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:09:40 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:09:40 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:09:40 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:09:40 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:09:40 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:09:52 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:09:52 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:09:52 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:09:52 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:09:52 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:09:52 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:09:52 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:09:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:09:52 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:09:52 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:09:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:09:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@5631472d, vn.tholv.web.core.base.entity.Project@c580076]]
2023-10-12 14:09:52 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:09:52 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:09:52 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:09:52 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:09:52 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:09:52 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:09:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:09:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:09:53 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:09:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:09:53 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:09:53 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:09:53 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:09:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:09:53 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:09:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:09:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:09:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@60b901af, vn.tholv.web.core.base.entity.Project@555dfd14]]
2023-10-12 14:09:53 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:09:53 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:09:53 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:09:53 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:09:53 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:09:53 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:10:06 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:10:06 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:10:06 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:10:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:10:06 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:10:06 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:10:06 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:10:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:10:06 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:10:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:10:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:10:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@1706f010, vn.tholv.web.core.base.entity.Project@47166418]]
2023-10-12 14:10:06 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:10:06 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:06 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:06 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:06 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:06 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:10:39 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:10:39 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:10:39 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:10:39 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:10:39 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:10:39 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:10:39 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:10:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:10:39 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:10:39 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:10:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:10:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@6ede036a, vn.tholv.web.core.base.entity.Project@1317ef33]]
2023-10-12 14:10:39 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:10:39 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:39 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:39 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:39 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:39 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:10:40 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:10:40 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:10:40 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:10:40 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:10:40 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:10:40 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:10:40 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:10:40 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:10:40 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:10:40 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:10:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:10:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@1b31b62f, vn.tholv.web.core.base.entity.Project@4c80bf64]]
2023-10-12 14:10:40 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:10:40 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:40 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:40 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:40 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:40 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:10:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:10:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:10:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:10:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:10:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:10:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:10:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:10:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@42813515, vn.tholv.web.core.base.entity.Project@7de75893]]
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:10:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:10:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:10:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:10:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:10:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:10:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:10:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:10:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@7855116c, vn.tholv.web.core.base.entity.Project@4069eb0b]]
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:10:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:10:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:11:17 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:11:17 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:11:17 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:11:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:11:17 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:11:17 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:11:17 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:11:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:11:17 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:11:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:11:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:11:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@7fd54325, vn.tholv.web.core.base.entity.Project@65628c0b]]
2023-10-12 14:11:17 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:11:17 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:11:17 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:11:17 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:11:17 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:11:17 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:11:19 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:11:19 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:11:19 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:11:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:11:19 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:11:19 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:11:19 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:11:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:11:19 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:11:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:11:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:11:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@70cf26dd, vn.tholv.web.core.base.entity.Project@734d3543]]
2023-10-12 14:11:19 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:11:19 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:11:19 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:11:19 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:11:19 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:11:19 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:11:45 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:11:45 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:11:45 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:11:45 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:11:45 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:11:45 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:11:45 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:11:45 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:11:45 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:11:45 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:11:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:11:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@c467c8b, vn.tholv.web.core.base.entity.Project@1939790b]]
2023-10-12 14:11:45 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:11:45 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:11:45 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:11:45 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:11:45 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:11:45 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:11:47 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:11:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:11:47 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:11:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:11:47 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:11:47 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:11:47 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:11:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:11:47 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:11:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:11:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:11:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@7d1e0033, vn.tholv.web.core.base.entity.Project@3ca8343a]]
2023-10-12 14:11:47 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:11:47 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:11:47 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:11:47 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:11:47 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:11:47 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:12:10 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:12:10 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:12:10 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:12:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:12:10 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:12:10 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:12:10 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:12:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:12:10 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:12:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:12:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:12:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@618aef07, vn.tholv.web.core.base.entity.Project@2b747cf7]]
2023-10-12 14:12:10 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:12:10 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:12:10 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:12:10 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:12:10 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:12:10 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:12:12 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:12:12 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:12:12 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:12:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:12:12 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:12:12 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:12:12 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:12:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:12:12 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:12:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:12:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:12:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@66c6dbd, vn.tholv.web.core.base.entity.Project@28508a2d]]
2023-10-12 14:12:12 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:12:12 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:12:12 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:12:12 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:12:12 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:12:12 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:12:13 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:12:13 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:12:13 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:12:13 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:12:13 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:12:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:12:13 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:12:13 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:12:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:12:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@8214e24]]
2023-10-12 14:12:13 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:12:13 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:15:37 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:15:37 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:15:37 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:15:37 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:15:37 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:15:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:15:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:15:37 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:15:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:15:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1db13c0d]]
2023-10-12 14:15:37 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:15:37 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:16:02 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:16:02 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:16:02 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:16:02 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:16:02 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:16:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:16:02 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:16:02 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:16:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:16:02 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@51e3f9f0]]
2023-10-12 14:16:02 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:16:02 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:16:04 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:16:04 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:16:04 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:16:04 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:16:04 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:16:04 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:16:04 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:16:04 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:16:04 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:16:04 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:16:04 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:16:04 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@745a094, vn.tholv.web.core.base.entity.Project@d8fadcd]]
2023-10-12 14:16:04 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:16:04 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:16:04 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:16:04 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:16:04 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:16:04 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:16:06 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:16:06 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:16:06 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:16:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:16:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:16:06 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:16:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:16:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6d2aff31]]
2023-10-12 14:16:06 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:16:06 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:16:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:16:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:16:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:16:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:16:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:16:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:16:09 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:16:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:16:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:16:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@6712830, vn.tholv.web.core.base.entity.Project@66bdd861]]
2023-10-12 14:16:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:16:09 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:16:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:16:09 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:16:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:16:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:16:10 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/1
2023-10-12 14:16:10 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/1
2023-10-12 14:16:10 DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /project/1
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:16:10 DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /project/1
2023-10-12 14:16:10 DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/project/1", parameters={}
2023-10-12 14:16:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#deleteById(Object)
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    delete 
    from
        projects 
    where
        id=?
2023-10-12 14:16:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:16:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2023-10-12 14:16:10 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:16:10 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:16:10 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:16:10 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:16:10 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:16:10 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:16:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:16:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:16:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@3ab70dbf]]
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:16:10 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:16:10 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:16:12 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:16:12 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:16:12 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:16:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:16:12 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:16:12 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:16:12 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:16:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:16:12 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:16:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:16:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:16:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@169c9d0]]
2023-10-12 14:16:12 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:16:12 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:16:12 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:16:12 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:16:13 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:16:13 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:16:13 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:16:13 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:16:13 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:16:13 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:16:13 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:16:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:16:13 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:16:13 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:16:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:16:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@54a53e9e]]
2023-10-12 14:16:13 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:16:13 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:16:13 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:16:13 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:17:05 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:17:05 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:17:05 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:17:05 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:17:05 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:17:05 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:17:05 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:17:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:17:05 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:17:05 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:17:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:17:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@33c6b2b2]]
2023-10-12 14:17:05 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:17:05 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:17:05 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:17:05 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:17:07 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:17:07 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:17:07 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:17:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:17:07 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:17:07 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:17:07 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:17:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:17:07 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:17:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:17:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:17:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@4b903016]]
2023-10-12 14:17:07 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:17:07 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:17:07 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:17:07 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:17:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:17:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:17:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:17:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:17:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:17:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:17:31 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:17:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:17:31 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:17:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:17:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:17:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@576fadf8]]
2023-10-12 14:17:31 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:17:31 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:17:31 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:17:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:18:04 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:18:04 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:18:04 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:18:04 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:18:04 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:18:04 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:18:04 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:18:04 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:18:04 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:18:04 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:18:04 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:18:04 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@3e198822]]
2023-10-12 14:18:04 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:18:04 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:18:04 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:18:04 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:18:06 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:18:06 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:18:06 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:18:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:18:06 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:18:06 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:18:06 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:18:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:18:06 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:18:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:18:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:18:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@1e0a53d5]]
2023-10-12 14:18:06 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:18:06 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:18:06 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:18:06 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:22:16 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:22:16 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:22:16 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:22:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:22:16 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:22:16 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:22:16 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:22:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:22:16 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:22:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:22:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:22:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@7e9224ae]]
2023-10-12 14:22:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:22:16 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:22:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:22:16 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:22:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:22:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:22:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:22:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:22:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:22:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:22:18 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:22:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:22:18 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:22:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:22:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:22:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@12502d59]]
2023-10-12 14:22:18 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:22:18 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:22:18 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:22:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:22:19 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:22:19 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:22:19 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:22:19 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:22:19 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:22:19 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:22:19 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:22:19 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:22:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:22:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:22:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:22:19 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:22:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:22:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1e1b779b]]
2023-10-12 14:22:19 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:22:19 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:22:19 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:22:19 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:22:19 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:22:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:22:19 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:22:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:22:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@2d32d599]
2023-10-12 14:22:19 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:22:19 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:22:19 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:22:19 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:22:25 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:22:25 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:22:25 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:22:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:22:25 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:22:25 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:22:25 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:22:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:22:25 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:22:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:22:25 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:22:25 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@259d0220]]
2023-10-12 14:22:25 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:22:25 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:22:25 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:22:25 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:22:29 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:22:29 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:22:29 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:22:29 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:22:29 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:22:29 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:22:29 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:22:29 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:22:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:22:29 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:22:29 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:22:29 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:22:29 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:22:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:22:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@3873e401]]
2023-10-12 14:22:29 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:22:29 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:22:29 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:22:29 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:22:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:22:29 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:22:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:22:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@3485bf4b]
2023-10-12 14:22:29 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:22:29 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:22:29 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:22:29 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:22:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:22:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:22:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:22:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:22:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:22:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:22:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:22:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:22:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:22:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:22:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:22:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:22:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:22:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:22:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@52bd95d0]]
2023-10-12 14:22:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:22:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:22:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:22:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:22:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:22:48 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:22:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:22:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@73ae66fc]
2023-10-12 14:22:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:22:48 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:22:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:22:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:23:44 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:23:44 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:23:44 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:23:44 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:23:44 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:23:44 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:23:44 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:23:44 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:23:44 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:23:44 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:23:44 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:23:44 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:23:44 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:23:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:23:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@471085f3]]
2023-10-12 14:23:44 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:23:44 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:23:44 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:23:44 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:23:44 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:23:44 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:23:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:23:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@12cc3c74]
2023-10-12 14:23:44 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:23:44 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:23:44 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:23:44 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:23:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:23:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:23:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:23:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:23:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:23:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:23:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:23:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:23:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:23:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:23:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:23:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:23:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:23:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:23:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@511f81e8]]
2023-10-12 14:23:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:23:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:23:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:23:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:23:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:23:50 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:23:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:23:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@13836b9f]
2023-10-12 14:23:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:23:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:23:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:23:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:24:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:24:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:24:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:24:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:24:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:24:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:24:31 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:24:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:24:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:24:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:24:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@7af6896f]]
2023-10-12 14:24:31 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:24:31 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:24:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:24:31 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:24:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@6a7058e1]
2023-10-12 14:24:31 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:31 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:24:31 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:24:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:24:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:24:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:24:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:24:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:24:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:24:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:24:33 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:24:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:24:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:24:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:24:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4dc192bf]]
2023-10-12 14:24:33 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:24:33 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:24:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:24:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:33 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:24:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@5fa2766f]
2023-10-12 14:24:33 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:33 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:24:33 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:24:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:24:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:24:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:24:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:24:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:24:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:24:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:24:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:24:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:24:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:24:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:24:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@7e741cd6]]
2023-10-12 14:24:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:24:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:24:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:24:50 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:24:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@1a471775]
2023-10-12 14:24:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:24:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:24:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:55 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:24:55 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:24:55 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:24:55 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:24:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:24:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:24:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:24:55 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:24:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:24:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:24:55 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:24:55 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@15329960]]
2023-10-12 14:24:55 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:55 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:24:55 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:24:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:24:55 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:24:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@b707121]
2023-10-12 14:24:55 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:55 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:24:55 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:24:55 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:57 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:24:57 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:24:57 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:24:57 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:24:57 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:24:57 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:24:57 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:24:57 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:24:57 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:24:57 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:24:57 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:24:57 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:57 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:24:57 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:57 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1d440c35]]
2023-10-12 14:24:57 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:57 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:24:57 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:24:57 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:24:57 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:24:57 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:24:57 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:24:57 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@11c6b421]
2023-10-12 14:24:57 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:24:57 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:24:57 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:24:57 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:26:54 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:26:54 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:26:54 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:26:54 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:26:54 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:26:54 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:26:54 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:26:54 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:26:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:26:54 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:26:54 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:26:54 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:26:54 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:26:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:26:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4b0a4fcc]]
2023-10-12 14:26:54 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:26:54 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:26:54 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:26:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:26:54 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:26:54 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:26:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:26:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@a33ce7d]
2023-10-12 14:26:54 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:26:54 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:26:54 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:26:54 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:26:55 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:26:55 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:26:55 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:26:55 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:26:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:26:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:26:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:26:55 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:26:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:26:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:26:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:26:55 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:26:55 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:26:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:26:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@2f3bad6a]]
2023-10-12 14:26:55 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:26:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:26:55 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:26:55 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:26:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:26:55 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:26:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:26:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@a01b9cb]
2023-10-12 14:26:55 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:26:55 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:26:55 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:26:55 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:27:47 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:27:47 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:27:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:27:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:27:47 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:27:47 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:27:47 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:27:47 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:27:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:27:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:27:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:27:47 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:27:47 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:27:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:27:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@2e548c94]]
2023-10-12 14:27:47 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:27:47 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:27:47 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:27:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:27:47 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:27:47 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:27:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:27:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@1fbb6405]
2023-10-12 14:27:47 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:27:47 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:27:47 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:27:47 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:27:49 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:27:49 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:27:49 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:27:49 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:27:49 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:27:49 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:27:49 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:27:49 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:27:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:27:49 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:27:49 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:27:49 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:27:49 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:27:49 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:27:49 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@12927ac]]
2023-10-12 14:27:49 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:27:49 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:27:49 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:27:49 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:27:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:27:49 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:27:49 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:27:49 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@5c2abe93]
2023-10-12 14:27:49 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:27:49 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:27:49 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:27:49 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:27:54 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:27:54 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:27:54 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:27:54 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:27:54 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:27:54 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:27:54 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:27:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:27:54 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:27:54 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:27:54 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:27:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:27:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1ff57257]]
2023-10-12 14:27:54 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:27:54 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:27:54 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:27:54 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:27:54 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:27:54 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:27:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:27:54 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:27:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:27:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@5426ce6e]
2023-10-12 14:27:54 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:27:54 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:27:54 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:27:54 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:28:32 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:28:32 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:28:32 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:28:32 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:28:32 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:28:32 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:28:32 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:28:32 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:28:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:28:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:28:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:28:32 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:28:32 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:28:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:28:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5edae360]]
2023-10-12 14:28:32 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:28:32 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:28:32 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:28:32 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:28:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:28:32 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:28:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:28:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@22040f61]
2023-10-12 14:28:32 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:28:32 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:28:32 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:28:32 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:31:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:31:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 14:31:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 14:31:13 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 26220 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 14:31:13 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 14:31:14 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 14:31:14 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2023-10-12 14:31:14 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 14:31:14 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 14:31:14 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 14:31:14 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 14:31:14 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1146 ms
2023-10-12 14:31:14 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 14:31:14 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 14:31:14 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 14:31:15 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 14:31:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 14:31:15 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a357c3e
2023-10-12 14:31:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 14:31:15 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 14:31:16 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 14:31:16 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:31:16 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 14:31:16 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 14:31:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 14:31:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 14:31:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 14:31:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 14:31:16 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 14:31:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 14:31:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 14:31:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 14:31:16 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 14:31:17 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@230dd372, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@663cc8c9, org.springframework.security.web.context.SecurityContextHolderFilter@62aefc75, org.springframework.security.web.header.HeaderWriterFilter@41962299, org.springframework.security.web.authentication.logout.LogoutFilter@4b6fc231, vn.tholv.web.config.filter.JwtAuthFilter@6344004d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@435e224d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@788fa91f, org.springframework.security.web.session.SessionManagementFilter@72321701, org.springframework.security.web.access.ExceptionTranslationFilter@785477e5, org.springframework.security.web.access.intercept.AuthorizationFilter@2eed6331]
2023-10-12 14:31:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 14:31:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 14:31:17 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 14:31:17 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.246 seconds (process running for 5.498)
2023-10-12 14:32:31 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:32:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 14:32:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 14:32:35 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 6024 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 14:32:35 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 14:32:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 14:32:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 5 JPA repository interfaces.
2023-10-12 14:32:36 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 14:32:36 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 14:32:36 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 14:32:36 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 14:32:36 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1145 ms
2023-10-12 14:32:37 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 14:32:37 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 14:32:37 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 14:32:37 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 14:32:37 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 14:32:37 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5597ca3
2023-10-12 14:32:37 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 14:32:37 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 14:32:38 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 14:32:38 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:32:38 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 14:32:39 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 14:32:39 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 14:32:39 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 14:32:39 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 14:32:39 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 14:32:39 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 14:32:39 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 14:32:39 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 14:32:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 14:32:39 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 14:32:39 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4e77f29e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a598e30, org.springframework.security.web.context.SecurityContextHolderFilter@2f0b5d79, org.springframework.security.web.header.HeaderWriterFilter@6805415d, org.springframework.security.web.authentication.logout.LogoutFilter@29280ca6, vn.tholv.web.config.filter.JwtAuthFilter@561c031, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@761ea1f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f047670, org.springframework.security.web.session.SessionManagementFilter@2472ba04, org.springframework.security.web.access.ExceptionTranslationFilter@431f8830, org.springframework.security.web.access.intercept.AuthorizationFilter@7b45f7ef]
2023-10-12 14:32:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 14:32:39 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 14:32:39 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 14:32:39 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.14 seconds (process running for 4.752)
2023-10-12 14:32:50 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 14:32:50 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@170937fe
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@539f2fec
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 14:32:50 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 14:32:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:32:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:32:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:32:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:32:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:32:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:32:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:32:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:32:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:32:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:32:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:32:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:32:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:32:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:32:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:32:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@27bf599e]]
2023-10-12 14:32:50 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:32:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:32:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@2936cd3b]
2023-10-12 14:32:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:32:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:32:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:32:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:32:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:33:12 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:33:12 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 14:33:12 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 14:33:16 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 30656 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 14:33:16 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 14:33:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 14:33:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 5 JPA repository interfaces.
2023-10-12 14:33:17 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 14:33:17 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 14:33:17 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 14:33:17 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 14:33:17 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1213 ms
2023-10-12 14:33:17 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 14:33:17 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 14:33:17 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 14:33:17 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 14:33:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 14:33:17 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3348c987
2023-10-12 14:33:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 14:33:17 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 14:33:18 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 14:33:18 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:33:19 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 14:33:19 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 14:33:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 14:33:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 14:33:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 14:33:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 14:33:19 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 14:33:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 14:33:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 14:33:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 14:33:19 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 14:33:19 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54faa040, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35d4fecf, org.springframework.security.web.context.SecurityContextHolderFilter@18419ab7, org.springframework.security.web.header.HeaderWriterFilter@2472ba04, org.springframework.security.web.authentication.logout.LogoutFilter@6768dc74, vn.tholv.web.config.filter.JwtAuthFilter@7e24a2e2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57cc0333, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e22dadb, org.springframework.security.web.session.SessionManagementFilter@7fd7085d, org.springframework.security.web.access.ExceptionTranslationFilter@949165f, org.springframework.security.web.access.intercept.AuthorizationFilter@7fd3c38b]
2023-10-12 14:33:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 14:33:19 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 14:33:19 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 14:33:20 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.282 seconds (process running for 4.828)
2023-10-12 14:33:26 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 14:33:26 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5f6b1f19
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@36c5a4b7
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 14:33:26 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 14:33:26 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:33:26 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:33:26 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:33:26 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:33:26 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:33:26 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:33:26 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:33:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:33:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:33:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:33:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:33:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:33:26 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:33:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:33:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:33:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5d10553c]]
2023-10-12 14:33:26 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:33:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:33:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@f8c06f6]
2023-10-12 14:33:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:33:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:33:26 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:33:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:33:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:33:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/save
2023-10-12 14:33:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/save
2023-10-12 14:33:36 DEBUG o.s.security.web.FilterChainProxy - Securing POST /project/save
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:33:36 DEBUG o.s.security.web.FilterChainProxy - Secured POST /project/save
2023-10-12 14:33:36 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/project/save", parameters={}
2023-10-12 14:33:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#save(BaseEntity)
2023-10-12 14:33:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Project@29cc825]
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    update
        projects 
    set
        created_date=?,
        leader_id=?,
        modified_date=?,
        money=?,
        name=?,
        start_date=? 
    where
        id=?
2023-10-12 14:33:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:33:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@20ea64bc]
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:33:36 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:33:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:33:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:33:36 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:33:36 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:33:36 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:33:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:33:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:33:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@4e663dd4]]
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:33:36 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:33:36 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:33:38 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:33:38 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:33:38 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:33:39 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:33:39 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:33:39 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:33:39 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:33:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:33:39 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:33:39 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:33:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:33:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@48b214e8]]
2023-10-12 14:33:39 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:33:39 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:33:39 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:33:39 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:35:23 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:35:23 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:35:23 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:35:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:35:23 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:35:23 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:35:23 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:35:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:35:23 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:35:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:35:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:35:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@22f5a81f]]
2023-10-12 14:35:23 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:35:23 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:35:23 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:35:23 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:36:27 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:36:27 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:36:27 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:36:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:36:27 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:36:27 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:36:27 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:36:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:36:27 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:36:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:36:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:36:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@664fa469]]
2023-10-12 14:36:27 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:36:27 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:36:27 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:36:27 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:36:44 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:36:44 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:36:44 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:36:44 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:36:44 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:36:44 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:36:44 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:36:44 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:36:44 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:36:44 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:36:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:36:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@2e64b41b]]
2023-10-12 14:36:44 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:36:44 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:36:44 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:36:44 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:36:47 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:36:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:36:47 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:36:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:36:47 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:36:47 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:36:47 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:36:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:36:47 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:36:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:36:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:36:47 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@ce4a0ac]]
2023-10-12 14:36:47 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:36:47 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:36:47 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:36:47 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:36:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:36:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:36:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:36:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:36:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:36:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:36:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:36:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:36:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:36:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:36:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:36:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:36:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:36:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:36:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@613dd06d]]
2023-10-12 14:36:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:36:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:36:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:36:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:36:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:36:50 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:36:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:36:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@14d76f2f]
2023-10-12 14:36:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:36:50 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:36:50 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:36:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:07 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:37:07 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:37:07 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:37:07 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:37:07 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:37:07 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:37:07 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:37:07 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:37:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:37:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:37:07 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:07 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@3286bd60]]
2023-10-12 14:37:07 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:37:07 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:07 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:37:07 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:37:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:37:07 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:37:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@276080c4]
2023-10-12 14:37:07 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:37:07 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:37:07 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:37:07 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:11 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:37:11 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:37:11 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:37:11 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:37:11 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:37:11 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:37:11 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:37:11 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:37:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:37:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:37:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:37:11 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:11 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@3a491bab]]
2023-10-12 14:37:11 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:37:11 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:11 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:37:11 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:37:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:37:11 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:37:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@3a67ee4]
2023-10-12 14:37:11 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:37:11 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:37:11 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:37:11 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:13 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/update
2023-10-12 14:37:13 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/update
2023-10-12 14:37:13 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /project/update
2023-10-12 14:37:13 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:37:13 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:13 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /project/update
2023-10-12 14:37:13 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/project/update", parameters={}
2023-10-12 14:37:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#update(BaseEntity)
2023-10-12 14:37:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Project@5d998728]
2023-10-12 14:37:13 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:37:13 DEBUG org.hibernate.SQL - 
    update
        projects 
    set
        created_date=?,
        leader_id=?,
        modified_date=?,
        money=?,
        name=?,
        start_date=? 
    where
        id=?
2023-10-12 14:37:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:13 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@519c1e01]
2023-10-12 14:37:13 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:13 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:37:13 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:37:13 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:37:13 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:37:13 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:13 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:37:13 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:37:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:37:14 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:37:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:37:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@1e6d97fb]]
2023-10-12 14:37:14 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:37:14 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:37:14 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:37:14 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:16 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:37:16 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:37:16 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:37:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:37:16 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:16 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:37:16 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:37:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:37:16 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:37:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:37:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@3a4553d4]]
2023-10-12 14:37:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:37:16 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:37:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:37:16 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:17 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:37:17 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:37:17 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:37:17 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:37:17 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:37:17 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:37:17 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:37:17 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:37:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:37:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:37:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:37:17 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:17 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@69e1874a]]
2023-10-12 14:37:17 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:37:17 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:17 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:37:17 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:37:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:37:17 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:37:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@5349aea9]
2023-10-12 14:37:17 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:37:17 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:37:17 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:37:17 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:37:25 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/update
2023-10-12 14:37:25 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/update
2023-10-12 14:37:25 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /project/update
2023-10-12 14:37:25 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:37:25 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:25 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /project/update
2023-10-12 14:37:25 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/project/update", parameters={}
2023-10-12 14:37:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#update(BaseEntity)
2023-10-12 14:37:25 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.update(T) throws java.lang.Exception: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-04T07:06": expected format "yyyy-MM-dd HH:mm:ss"
2023-10-12 14:37:25 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-04T07:06": expected format "yyyy-MM-dd HH:mm:ss"]
2023-10-12 14:37:25 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 14:37:25 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /error
2023-10-12 14:37:25 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /error
2023-10-12 14:37:25 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/api/error", parameters={}
2023-10-12 14:37:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 14:37:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 14:37:25 ICT 2023, status=400, error=Bad Request, path=/api/project/update}]
2023-10-12 14:37:25 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 14:37:28 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /project/update
2023-10-12 14:37:28 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:37:28 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:28 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /project/update
2023-10-12 14:37:28 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/project/update", parameters={}
2023-10-12 14:37:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#update(BaseEntity)
2023-10-12 14:37:28 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.update(T) throws java.lang.Exception: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-04T07:06": expected format "yyyy-MM-dd HH:mm:ss"
2023-10-12 14:37:28 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-04T07:06": expected format "yyyy-MM-dd HH:mm:ss"]
2023-10-12 14:37:28 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 14:37:28 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /error
2023-10-12 14:37:28 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /error
2023-10-12 14:37:28 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/api/error", parameters={}
2023-10-12 14:37:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 14:37:28 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:28 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 14:37:28 ICT 2023, status=400, error=Bad Request, path=/api/project/update}]
2023-10-12 14:37:28 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 14:37:46 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/update
2023-10-12 14:37:46 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/update
2023-10-12 14:37:46 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /project/update
2023-10-12 14:37:46 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:37:46 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:37:46 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /project/update
2023-10-12 14:37:46 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/project/update", parameters={}
2023-10-12 14:37:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#update(BaseEntity)
2023-10-12 14:37:46 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.update(T) throws java.lang.Exception: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-04T07:06": expected format "yyyy-MM-dd HH:mm:ss"
2023-10-12 14:37:46 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2023-10-04T07:06": expected format "yyyy-MM-dd HH:mm:ss"]
2023-10-12 14:37:46 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 14:37:46 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /error
2023-10-12 14:37:46 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /error
2023-10-12 14:37:46 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/api/error", parameters={}
2023-10-12 14:37:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 14:37:46 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:37:46 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 14:37:46 ICT 2023, status=400, error=Bad Request, path=/api/project/update}]
2023-10-12 14:37:46 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 14:39:49 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:39:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 14:39:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 14:39:53 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 11232 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 14:39:53 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 14:39:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 14:39:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2023-10-12 14:39:54 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 14:39:54 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 14:39:54 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 14:39:54 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 14:39:54 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1193 ms
2023-10-12 14:39:55 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 14:39:55 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 14:39:55 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 14:39:55 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 14:39:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 14:39:55 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@31b741e2
2023-10-12 14:39:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 14:39:55 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 14:39:56 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 14:39:56 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:39:56 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 14:39:57 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 14:39:57 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 14:39:57 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 14:39:57 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 14:39:57 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 14:39:57 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 14:39:57 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 14:39:57 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 14:39:57 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 14:39:57 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 14:39:57 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1a598e30, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6768dc74, org.springframework.security.web.context.SecurityContextHolderFilter@1e186006, org.springframework.security.web.header.HeaderWriterFilter@870413c, org.springframework.security.web.authentication.logout.LogoutFilter@7c7a4986, vn.tholv.web.config.filter.JwtAuthFilter@7343d843, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f047670, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a91027c, org.springframework.security.web.session.SessionManagementFilter@1a0e5c0c, org.springframework.security.web.access.ExceptionTranslationFilter@75bbe39d, org.springframework.security.web.access.intercept.AuthorizationFilter@5da41d02]
2023-10-12 14:39:57 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 14:39:57 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 14:39:57 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 14:39:57 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.352 seconds (process running for 4.956)
2023-10-12 14:40:20 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 14:40:20 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@623be2a0
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@a4e1ca7
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 14:40:20 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 14:40:20 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:40:20 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:40:20 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:40:20 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:40:20 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:40:20 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:40:20 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:40:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:40:20 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:40:20 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:40:20 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:40:20 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:40:20 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:40:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:40:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:40:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6d6beab6]]
2023-10-12 14:40:20 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:40:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:40:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@413468a0]
2023-10-12 14:40:20 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:40:20 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:40:20 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:40:20 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:40:20 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:40:29 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/update
2023-10-12 14:40:29 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/update
2023-10-12 14:40:29 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /project/update
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:40:29 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /project/update
2023-10-12 14:40:29 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/project/update", parameters={}
2023-10-12 14:40:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#update(BaseEntity)
2023-10-12 14:40:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Project@7cfd1377]
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    update
        projects 
    set
        created_date=?,
        leader_id=?,
        modified_date=?,
        money=?,
        name=?,
        start_date=? 
    where
        id=?
2023-10-12 14:40:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:40:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@1f5297f4]
2023-10-12 14:40:29 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:40:29 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:40:29 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:40:29 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:40:29 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:40:29 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:40:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:40:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:40:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@38b3030f]]
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:40:29 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:40:29 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:40:32 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 14:40:32 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 14:40:32 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 14:40:32 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 14:40:32 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 14:40:32 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 14:40:32 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 14:40:32 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 14:40:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 14:40:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 14:40:32 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:40:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:40:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:40:32 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:40:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@37192b1d]]
2023-10-12 14:40:32 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:40:32 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:40:32 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 14:40:32 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 14:40:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 14:40:32 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:40:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:40:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@4601e5fa]
2023-10-12 14:40:32 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:40:32 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:40:32 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:40:32 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:40:37 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/update
2023-10-12 14:40:37 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/update
2023-10-12 14:40:37 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /project/update
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:40:37 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /project/update
2023-10-12 14:40:37 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/project/update", parameters={}
2023-10-12 14:40:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#update(BaseEntity)
2023-10-12 14:40:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Project@6f0d14ac]
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    update
        projects 
    set
        created_date=?,
        leader_id=?,
        modified_date=?,
        money=?,
        name=?,
        start_date=? 
    where
        id=?
2023-10-12 14:40:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:40:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@50e11d30]
2023-10-12 14:40:37 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:40:37 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:40:37 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:40:37 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:40:37 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:40:37 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:40:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:40:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:40:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@75bc851c]]
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:40:37 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:40:37 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:41:16 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:41:16 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:41:16 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:41:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:41:16 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:41:16 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:41:16 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:41:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:41:16 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:41:16 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:41:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:41:16 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@2c07141e]]
2023-10-12 14:41:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:41:16 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:41:16 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:41:16 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:41:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 14:41:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 14:41:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 14:41:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 14:41:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 14:41:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 14:41:18 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 14:41:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 14:41:18 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 14:41:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 14:41:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 14:41:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@8a962b8]]
2023-10-12 14:41:18 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 14:41:18 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 14:41:18 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 14:41:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 14:44:21 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:44:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 14:44:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 14:49:20 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 19344 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 14:49:20 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 14:49:21 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 14:49:21 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104 ms. Found 5 JPA repository interfaces.
2023-10-12 14:49:21 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 14:49:21 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 14:49:21 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 14:49:22 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 14:49:22 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1380 ms
2023-10-12 14:49:22 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 14:49:22 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 14:49:22 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 14:49:22 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 14:49:22 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 14:49:22 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d55dd21
2023-10-12 14:49:22 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 14:49:22 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 14:49:24 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 14:49:24 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 14:49:24 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 14:49:24 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 14:49:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 14:49:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 14:49:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 14:49:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 14:49:24 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 14:49:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 14:49:24 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 14:49:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 21 mappings in 'requestMappingHandlerMapping'
2023-10-12 14:49:25 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 14:49:25 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@16160a37, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@380e470a, org.springframework.security.web.context.SecurityContextHolderFilter@64710a6, org.springframework.security.web.header.HeaderWriterFilter@4f0f56f5, org.springframework.security.web.authentication.logout.LogoutFilter@69c335c4, vn.tholv.web.config.filter.JwtAuthFilter@7ff7e353, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47f677a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2472ba04, org.springframework.security.web.session.SessionManagementFilter@6abca7a6, org.springframework.security.web.access.ExceptionTranslationFilter@773cc551, org.springframework.security.web.access.intercept.AuthorizationFilter@7c7a4986]
2023-10-12 14:49:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 14:49:25 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 14:49:25 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 14:49:25 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.33 seconds (process running for 6.139)
2023-10-12 15:36:47 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:36:47 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:36:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:36:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:36:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:36:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7da59f6e
2023-10-12 15:36:47 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@393d4e34
2023-10-12 15:36:47 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:36:47 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:36:47 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:36:47 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:36:47 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:36:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:36:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:36:47 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:36:47 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:36:47 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:36:47 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:36:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:36:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:36:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:36:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:36:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:36:48 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 15:36:48 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:36:48 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 15:36:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:36:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@7a408382]]
2023-10-12 15:36:48 DEBUG o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource task/NaN.]
2023-10-12 15:36:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2023-10-12 15:36:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:36:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:36:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:36:48 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:36:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:36:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:36:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@2be911c1]]
2023-10-12 15:36:48 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:36:48 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:36:48 ICT 2023, status=404, error=Not Found, path=/api/task/NaN}]
2023-10-12 15:36:48 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2023-10-12 15:36:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:36:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:36:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:36:48 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:36:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:36:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:38:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:38:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:38:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:38:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6cd6a4a9]]
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:38:03 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:38:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:38:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:38:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:38:03 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:38:03 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 15:38:03 DEBUG o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource task/NaN.]
2023-10-12 15:38:03 DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:38:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:38:03 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:38:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:38:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:38:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:38:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@701b6ce2]]
2023-10-12 15:38:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:38:03 ICT 2023, status=404, error=Not Found, path=/api/task/NaN}]
2023-10-12 15:38:03 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:38:03 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:38:03 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:38:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:38:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:38:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:38:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@46e0a1c0]]
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:38:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:38:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:38:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:38:09 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 15:38:09 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:38:09 DEBUG o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource task/NaN.]
2023-10-12 15:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:38:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:38:09 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:38:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:38:09 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:38:09 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:38:09 ICT 2023, status=404, error=Not Found, path=/api/task/NaN}]
2023-10-12 15:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2023-10-12 15:38:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:38:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@2d446850]]
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:38:09 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:38:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:38:14 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/update
2023-10-12 15:38:14 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/update
2023-10-12 15:38:14 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /task/update
2023-10-12 15:38:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:38:14 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:38:14 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /task/update
2023-10-12 15:38:14 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/task/update", parameters={}
2023-10-12 15:38:14 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 15:38:14 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 15:38:14 DEBUG o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource task/update.]
2023-10-12 15:38:14 DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2023-10-12 15:38:14 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /error
2023-10-12 15:38:14 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /error
2023-10-12 15:38:14 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/api/error", parameters={}
2023-10-12 15:38:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:38:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:38:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:38:14 ICT 2023, status=404, error=Not Found, path=/api/task/update}]
2023-10-12 15:38:14 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2023-10-12 15:38:24 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/update
2023-10-12 15:38:24 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/update
2023-10-12 15:38:24 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /task/update
2023-10-12 15:38:24 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:38:24 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:38:24 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /task/update
2023-10-12 15:38:24 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/task/update", parameters={}
2023-10-12 15:38:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2023-10-12 15:38:24 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2023-10-12 15:38:24 DEBUG o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource task/update.]
2023-10-12 15:38:24 DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2023-10-12 15:38:24 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /error
2023-10-12 15:38:24 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /error
2023-10-12 15:38:24 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/api/error", parameters={}
2023-10-12 15:38:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:38:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:38:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:38:24 ICT 2023, status=404, error=Not Found, path=/api/task/update}]
2023-10-12 15:38:24 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2023-10-12 15:39:29 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:39:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:39:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:39:38 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 9608 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:39:38 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:39:38 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:39:38 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 5 JPA repository interfaces.
2023-10-12 15:39:39 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:39:39 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:39:39 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:39:39 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:39:39 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1262 ms
2023-10-12 15:39:39 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:39:39 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:39:39 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:39:39 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:39:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:39:40 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a69f9d
2023-10-12 15:39:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:39:40 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:39:41 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:39:41 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:39:41 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:39:41 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:39:41 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:39:41 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:39:41 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:39:41 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:39:41 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:39:41 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:39:41 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:39:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:39:42 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:39:42 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6768dc74, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31dbca5d, org.springframework.security.web.context.SecurityContextHolderFilter@761ea1f5, org.springframework.security.web.header.HeaderWriterFilter@3791160a, org.springframework.security.web.authentication.logout.LogoutFilter@32d3b965, vn.tholv.web.config.filter.JwtAuthFilter@561c031, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a91027c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27d44578, org.springframework.security.web.session.SessionManagementFilter@5bb45afc, org.springframework.security.web.access.ExceptionTranslationFilter@6805415d, org.springframework.security.web.access.intercept.AuthorizationFilter@17d837ab]
2023-10-12 15:39:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:39:42 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:39:42 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:39:42 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.852 seconds (process running for 5.549)
2023-10-12 15:39:58 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:39:58 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:39:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:39:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:39:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:39:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3b44ed3c
2023-10-12 15:39:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7d466ef9
2023-10-12 15:39:58 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:39:58 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:39:58 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:39:58 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:39:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:39:59 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:39:59 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:39:59 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:39:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:39:59 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:39:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 15:39:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:39:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6d909bfb]]
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:39:59 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 15:39:59 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 15:39:59 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 15:39:59 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:39:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:39:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@49ff1d]]
2023-10-12 15:39:59 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:39:59 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:39:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:39:59 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:39:59 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:39:59 ICT 2023, status=400, error=Bad Request, path=/api/task/NaN}]
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:39:59 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 15:39:59 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:39:59 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:39:59 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:40:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/update
2023-10-12 15:40:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/update
2023-10-12 15:40:03 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /task/update
2023-10-12 15:40:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:40:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:40:03 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /task/update
2023-10-12 15:40:03 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/task/update", parameters={}
2023-10-12 15:40:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#update(BaseEntity)
2023-10-12 15:40:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Task@4ad6ae87]
2023-10-12 15:40:03 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-10-12 15:40:03 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:172)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:302)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:249)
	at jdk.proxy2/jdk.proxy2.$Proxy137.findById(Unknown Source)
	at vn.tholv.web.core.base.service.core.AbstractService.update(AbstractService.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at vn.tholv.web.core.base.service.TaskServiceImpl$$SpringCGLIB$$0.update(<generated>)
	at vn.tholv.web.core.base.controller.AbstractController.update(AbstractController.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:253)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:40:03 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /error
2023-10-12 15:40:03 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /error
2023-10-12 15:40:03 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/api/error", parameters={}
2023-10-12 15:40:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:40:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:40:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:40:03 ICT 2023, status=500, error=Internal Server Error, path=/api/task/upd (truncated)...]
2023-10-12 15:40:03 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:40:43 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@998dc73]]
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:40:43 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:40:43 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:40:43 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 15:40:43 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:40:43 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 15:40:43 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:40:43 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:40:43 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:40:43 ICT 2023, status=400, error=Bad Request, path=/api/task/NaN}]
2023-10-12 15:40:43 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:40:43 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@339ac114]]
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:40:43 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:40:43 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:42:31 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4ada1664]]
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:42:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:42:31 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:42:31 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 15:42:31 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 15:42:31 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 15:42:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:42:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:42:31 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:42:31 ICT 2023, status=400, error=Bad Request, path=/api/task/NaN}]
2023-10-12 15:42:31 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:42:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@450b752e]]
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:42:31 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:42:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:42:42 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:42:42 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6ac27172]]
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:42:42 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 15:42:42 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 15:42:42 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:42:42 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:42:42 ICT 2023, status=400, error=Bad Request, path=/api/task/NaN}]
2023-10-12 15:42:42 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 15:42:42 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:42:42 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:42:42 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:42:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@2ba6ff78]]
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:42:42 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:42:42 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:43:12 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6bf5ed6c]]
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:43:12 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:43:12 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 15:43:12 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:43:12 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 15:43:12 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 15:43:12 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:43:12 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:43:12 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:43:12 ICT 2023, status=400, error=Bad Request, path=/api/task/NaN}]
2023-10-12 15:43:12 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:12 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@f9ed99c]]
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:43:12 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:43:12 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:43:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:43:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:43:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:43:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:43:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:43:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:43:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:43:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:43:19 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:43:19 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:43:19 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@53357756]]
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:43:19 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:43:19 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:43:19 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:43:19 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 15:43:19 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 15:43:19 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:43:19 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 15:43:19 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 15:43:19 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:43:19 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:43:19 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:43:19 ICT 2023, status=400, error=Bad Request, path=/api/task/NaN}]
2023-10-12 15:43:19 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@5b0dc8f2]]
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:43:19 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:43:19 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:43:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@658bec30]]
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:43:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:43:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:43:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 15:43:48 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 15:43:48 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 15:43:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:43:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:43:48 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:43:48 ICT 2023, status=400, error=Bad Request, path=/api/task/NaN}]
2023-10-12 15:43:48 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@73d93e5]]
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:43:48 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:43:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/NaN
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/NaN
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/NaN
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:43:53 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@75188589]]
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/NaN
2023-10-12 15:43:53 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:43:53 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:43:53 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/NaN", parameters={}
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 15:43:53 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 15:43:53 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 15:43:53 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 15:43:53 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 15:43:53 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:43:53 ICT 2023, status=400, error=Bad Request, path=/api/task/NaN}]
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:43:53 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:43:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@44b847c3]]
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:43:53 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:43:53 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:47:26 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:47:26 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:47:26 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:47:26 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:47:26 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:47:26 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:47:26 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:47:26 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:47:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:47:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:47:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@29d0a8f4]]
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:47:26 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:47:26 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:47:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:47:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:47:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:47:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@4dd74b28]]
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:47:26 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:47:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:47:30 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 15:47:30 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 15:47:30 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:47:30 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:47:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 15:47:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:47:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 15:47:30 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 15:47:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:47:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:47:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4cdf905b]]
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:47:30 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:47:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:47:30 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:47:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:47:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:47:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@1de2ee30]]
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:47:30 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:47:30 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/save
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/save
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Securing POST /task/save
2023-10-12 15:47:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:47:37 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Secured POST /task/save
2023-10-12 15:47:37 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/task/save", parameters={}
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#save(BaseEntity)
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Task@7ba9a047]
2023-10-12 15:47:37 DEBUG org.hibernate.SQL - 
    insert 
    into
        tasks
        (created_date, description, modified_date, name, priority, project_id, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@7ba9a047]
2023-10-12 15:47:37 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:47:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:47:37 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:47:37 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:47:37 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:47:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@495d58e8]]
2023-10-12 15:47:37 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:47:37 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:47:37 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:47:37 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:47:37 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:47:37 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:47:37 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:47:37 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:47:37 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:48:12 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:48:12 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:48:12 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:48:15 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 24640 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:48:15 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:48:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:48:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2023-10-12 15:48:16 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:48:16 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:48:16 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:48:16 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:48:16 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1267 ms
2023-10-12 15:48:16 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:48:16 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:48:16 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:48:16 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:48:16 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:48:17 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@30358dc7
2023-10-12 15:48:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:48:17 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:48:18 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:48:18 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:48:18 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:48:19 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:48:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:48:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:48:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:48:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:48:19 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:48:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:48:19 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:48:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:48:19 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:48:19 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6b7ebac1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39dee5fd, org.springframework.security.web.context.SecurityContextHolderFilter@a3e458, org.springframework.security.web.header.HeaderWriterFilter@48a2b492, org.springframework.security.web.authentication.logout.LogoutFilter@1dba7721, vn.tholv.web.config.filter.JwtAuthFilter@4144d4a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63df2eb8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@49c72fb7, org.springframework.security.web.session.SessionManagementFilter@2e2546bf, org.springframework.security.web.access.ExceptionTranslationFilter@53fb3e1b, org.springframework.security.web.access.intercept.AuthorizationFilter@5b312863]
2023-10-12 15:48:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:48:19 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:48:19 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:48:19 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.763 seconds (process running for 5.346)
2023-10-12 15:48:27 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:48:27 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3f7d73e3
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1ae26c59
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:48:27 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 15:48:27 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:48:27 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:48:27 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:48:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:48:27 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:48:27 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:48:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:48:27 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:48:27 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:48:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:48:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@1081412c]]
2023-10-12 15:48:27 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:48:27 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:48:27 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
2023-10-12 15:48:27 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:48:27 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:48:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:48:27 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:48:27 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:48:27 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:48:27 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:48:30 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:48:30 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:48:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:48:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:48:30 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:48:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:48:30 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:48:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:48:30 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:48:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:48:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:48:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@1b8d61a]]
2023-10-12 15:48:30 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:48:30 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:48:30 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:48:30 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.Class.getComponentType(Class.java:1227)
	at java.base/java.util.Arrays.copyOf(Arrays.java:3513)
	at java.base/java.util.Arrays.copyOf(Arrays.java:3481)
	at java.base/java.text.DateFormatSymbols.copyMembers(DateFormatSymbols.java:878)
	at java.base/java.text.DateFormatSymbols.initializeData(DateFormatSymbols.java:788)
	at java.base/java.text.DateFormatSymbols.<init>(DateFormatSymbols.java:151)
	at java.base/sun.util.locale.provider.DateFormatSymbolsProviderImpl.getInstance(DateFormatSymbolsProviderImpl.java:85)
	at java.base/java.text.DateFormatSymbols.getProviderInstance(DateFormatSymbols.java:370)
	at java.base/java.text.DateFormatSymbols.getInstance(DateFormatSymbols.java:346)
	at java.base/java.util.Calendar.getDisplayName(Calendar.java:2135)
	at java.base/java.text.SimpleDateFormat.subFormat(SimpleDateFormat.java:1160)
	at java.base/java.text.SimpleDateFormat.format(SimpleDateFormat.java:1001)
	at java.base/java.text.SimpleDateFormat.format(SimpleDateFormat.java:971)
	at java.base/java.text.DateFormat.format(DateFormat.java:378)
	at com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._serializeAsString(DateTimeSerializerBase.java:230)
	at com.fasterxml.jackson.databind.ser.std.DateSerializer.serialize(DateSerializer.java:51)
	at com.fasterxml.jackson.databind.ser.std.DateSerializer.serialize(DateSerializer.java:15)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
2023-10-12 15:48:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:48:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:48:30 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:48:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:48:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:48:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:48:30 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:48:30 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:48:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:48:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:48:36 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:48:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:48:36 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:48:36 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:48:36 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:48:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:48:36 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:48:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:48:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:48:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@52bca5d3]]
2023-10-12 15:48:36 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:48:36 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:48:36 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:48:36 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.util.Calendar.getDisplayName(Calendar.java:2104)
	at java.base/java.text.SimpleDateFormat.subFormat(SimpleDateFormat.java:1160)
	at java.base/java.text.SimpleDateFormat.format(SimpleDateFormat.java:1001)
	at java.base/java.text.SimpleDateFormat.format(SimpleDateFormat.java:971)
	at java.base/java.text.DateFormat.format(DateFormat.java:378)
	at com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._serializeAsString(DateTimeSerializerBase.java:230)
	at com.fasterxml.jackson.databind.ser.std.DateSerializer.serialize(DateSerializer.java:51)
	at com.fasterxml.jackson.databind.ser.std.DateSerializer.serialize(DateSerializer.java:15)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
2023-10-12 15:48:36 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:48:36 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:48:36 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:48:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:48:36 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:48:36 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:48:36 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:48:36 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:49:28 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:49:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:49:28 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:49:33 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 21728 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:49:33 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:49:34 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:49:34 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 5 JPA repository interfaces.
2023-10-12 15:49:34 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:49:34 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:49:34 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:49:34 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:49:34 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1214 ms
2023-10-12 15:49:34 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:49:35 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:49:35 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:49:35 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:49:35 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:49:35 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4b5798c2
2023-10-12 15:49:35 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:49:35 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:49:36 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:49:36 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:49:36 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:49:37 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:49:37 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:49:37 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:49:37 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:49:37 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:49:37 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:49:37 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:49:37 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:49:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:49:37 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:49:37 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54faa040, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35d4fecf, org.springframework.security.web.context.SecurityContextHolderFilter@18419ab7, org.springframework.security.web.header.HeaderWriterFilter@2472ba04, org.springframework.security.web.authentication.logout.LogoutFilter@6768dc74, vn.tholv.web.config.filter.JwtAuthFilter@4c89c98a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57cc0333, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e22dadb, org.springframework.security.web.session.SessionManagementFilter@7fd7085d, org.springframework.security.web.access.ExceptionTranslationFilter@949165f, org.springframework.security.web.access.intercept.AuthorizationFilter@7fd3c38b]
2023-10-12 15:49:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:49:37 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:49:37 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:49:37 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.59 seconds (process running for 5.257)
2023-10-12 15:49:46 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:49:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:49:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:49:50 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 23856 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:49:50 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:49:51 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:49:51 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 5 JPA repository interfaces.
2023-10-12 15:49:51 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:49:51 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:49:51 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:49:51 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:49:51 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1329 ms
2023-10-12 15:49:51 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:49:51 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:49:52 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:49:52 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:49:52 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:49:52 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28f05b0c
2023-10-12 15:49:52 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:49:52 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:49:53 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:49:53 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:49:53 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:49:54 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:49:54 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:49:54 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:49:54 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:49:54 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:49:54 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:49:54 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:49:54 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:49:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:49:54 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:49:54 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@51d41b97, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fd3c38b, org.springframework.security.web.context.SecurityContextHolderFilter@7aad7df5, org.springframework.security.web.header.HeaderWriterFilter@45f4c27c, org.springframework.security.web.authentication.logout.LogoutFilter@5da41d02, vn.tholv.web.config.filter.JwtAuthFilter@20cf3ab3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69cc3370, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@9120cb5, org.springframework.security.web.session.SessionManagementFilter@27d44578, org.springframework.security.web.access.ExceptionTranslationFilter@6abca7a6, org.springframework.security.web.access.intercept.AuthorizationFilter@16b713dd]
2023-10-12 15:49:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:49:54 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:49:54 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:49:54 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.64 seconds (process running for 5.251)
2023-10-12 15:49:58 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:49:58 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3197b
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2b30b25f
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:49:58 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-10-12 15:49:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:49:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:49:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:49:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:49:58 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:49:58 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:49:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:49:58 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:49:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:49:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:49:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@148c777]]
2023-10-12 15:49:58 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:49:58 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:49:58 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-10-12 15:49:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:49:58 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:49:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:49:58 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:49:58 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:49:58 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:49:58 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:50:08 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:50:08 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:50:08 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:50:11 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 30120 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:50:11 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:50:12 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:50:12 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 5 JPA repository interfaces.
2023-10-12 15:50:12 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:50:12 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:50:12 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:50:13 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:50:13 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1299 ms
2023-10-12 15:50:13 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:50:13 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:50:13 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:50:13 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:50:13 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:50:13 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70f85235
2023-10-12 15:50:13 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:50:13 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:50:14 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:50:14 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:50:15 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:50:15 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:50:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:50:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:50:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:50:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:50:15 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:50:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:50:15 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:50:15 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:50:15 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:50:15 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4cc4f6bd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@798753cc, org.springframework.security.web.context.SecurityContextHolderFilter@1299fed3, org.springframework.security.web.header.HeaderWriterFilter@7aad7df5, org.springframework.security.web.authentication.logout.LogoutFilter@35d4fecf, vn.tholv.web.config.filter.JwtAuthFilter@41092c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4cb87009, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52518ee1, org.springframework.security.web.session.SessionManagementFilter@3c98eaa9, org.springframework.security.web.access.ExceptionTranslationFilter@2446597e, org.springframework.security.web.access.intercept.AuthorizationFilter@2f6352a3]
2023-10-12 15:50:15 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:50:15 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:50:15 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:50:15 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.549 seconds (process running for 5.182)
2023-10-12 15:50:18 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:50:18 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3da12ba4
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@280e4390
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:50:18 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-10-12 15:50:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:50:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:50:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:50:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:50:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:50:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:50:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:50:18 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:50:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:50:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:50:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@683576de]]
2023-10-12 15:50:18 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:50:18 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:50:18 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-10-12 15:50:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:50:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:50:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:50:18 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:50:18 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:50:18 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:50:18 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:50:30 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:50:30 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:50:30 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:50:34 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 29920 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:50:34 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:50:35 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:50:35 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 5 JPA repository interfaces.
2023-10-12 15:50:35 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:50:35 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:50:35 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:50:35 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:50:35 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1233 ms
2023-10-12 15:50:35 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:50:35 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:50:35 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:50:36 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:50:36 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:50:36 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bfa3893
2023-10-12 15:50:36 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:50:36 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:50:37 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:50:37 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:50:37 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:50:38 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:50:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:50:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:50:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:50:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:50:38 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:50:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:50:38 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:50:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:50:38 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:50:38 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@bb160fb, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4cc4f6bd, org.springframework.security.web.context.SecurityContextHolderFilter@1930e8ef, org.springframework.security.web.header.HeaderWriterFilter@8dd0c70, org.springframework.security.web.authentication.logout.LogoutFilter@54faa040, vn.tholv.web.config.filter.JwtAuthFilter@6e349258, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69af938b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4cb87009, org.springframework.security.web.session.SessionManagementFilter@755fdfad, org.springframework.security.web.access.ExceptionTranslationFilter@27d44578, org.springframework.security.web.access.intercept.AuthorizationFilter@33de9d85]
2023-10-12 15:50:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:50:38 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:50:38 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:50:38 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.675 seconds (process running for 5.281)
2023-10-12 15:50:40 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:50:40 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:50:40 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:50:40 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:50:40 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:50:40 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@525c0f74
2023-10-12 15:50:40 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@63f16350
2023-10-12 15:50:40 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:50:40 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2023-10-12 15:50:40 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:50:40 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:50:40 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:50:40 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:50:40 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:50:40 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:50:40 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:50:40 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:50:40 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:50:40 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:50:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:50:40 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@63419d1c]]
2023-10-12 15:50:40 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:50:41 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:50:41 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:50:41 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
2023-10-12 15:50:41 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:50:41 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:50:41 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:50:41 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:50:41 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:50:41 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:50:41 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:50:41 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:50:51 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:50:51 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:50:51 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:50:55 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 5948 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:50:55 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:50:56 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:50:56 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2023-10-12 15:50:57 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:50:57 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:50:57 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:50:57 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:50:57 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1196 ms
2023-10-12 15:50:57 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:50:57 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:50:57 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:50:57 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:50:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:50:57 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@28f05b0c
2023-10-12 15:50:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:50:57 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:50:58 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:50:58 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:50:59 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:50:59 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:50:59 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:50:59 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:50:59 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:50:59 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:50:59 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:50:59 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:50:59 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:50:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:50:59 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:50:59 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@51d41b97, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fd3c38b, org.springframework.security.web.context.SecurityContextHolderFilter@7aad7df5, org.springframework.security.web.header.HeaderWriterFilter@45f4c27c, org.springframework.security.web.authentication.logout.LogoutFilter@5da41d02, vn.tholv.web.config.filter.JwtAuthFilter@20cf3ab3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69cc3370, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@9120cb5, org.springframework.security.web.session.SessionManagementFilter@27d44578, org.springframework.security.web.access.ExceptionTranslationFilter@6abca7a6, org.springframework.security.web.access.intercept.AuthorizationFilter@16b713dd]
2023-10-12 15:50:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:50:59 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:51:00 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:51:00 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.684 seconds (process running for 5.314)
2023-10-12 15:51:03 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:51:03 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3197b
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2b30b25f
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:51:03 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2023-10-12 15:51:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:51:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:51:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:51:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:51:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:51:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:51:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:51:03 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:51:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:51:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:51:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@63419d1c]]
2023-10-12 15:51:03 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:51:03 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:51:03 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
2023-10-12 15:51:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:51:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:51:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:51:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:51:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:51:03 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:51:03 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:52:07 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:52:07 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:52:07 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:52:13 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 16764 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:52:13 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:52:13 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:52:13 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 5 JPA repository interfaces.
2023-10-12 15:52:14 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:52:14 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:52:14 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:52:14 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:52:14 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1261 ms
2023-10-12 15:52:14 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:52:14 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:52:14 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:52:14 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:52:14 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:52:15 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@75d97e18
2023-10-12 15:52:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:52:15 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:52:16 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:52:16 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:52:16 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:52:16 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:52:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:52:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:52:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:52:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:52:16 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:52:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:52:16 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:52:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:52:16 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:52:16 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@47f677a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2472ba04, org.springframework.security.web.context.SecurityContextHolderFilter@3074575a, org.springframework.security.web.header.HeaderWriterFilter@654dbb78, org.springframework.security.web.authentication.logout.LogoutFilter@870413c, vn.tholv.web.config.filter.JwtAuthFilter@4779df3d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2eed6331, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1254a3cd, org.springframework.security.web.session.SessionManagementFilter@39dee5fd, org.springframework.security.web.access.ExceptionTranslationFilter@20f3291d, org.springframework.security.web.access.intercept.AuthorizationFilter@45f4c27c]
2023-10-12 15:52:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:52:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:52:17 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:52:17 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.569 seconds (process running for 5.502)
2023-10-12 15:52:46 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:52:46 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5dd62f07
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@59043128
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:52:46 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-10-12 15:52:46 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:52:46 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:52:46 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:52:46 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:52:46 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:52:46 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:52:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:52:46 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:52:46 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:52:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:52:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@75d34dc9]]
2023-10-12 15:52:46 DEBUG org.hibernate.SQL - 
    select
        tl1_0.user_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        tl1_0.status 
    from
        tasks tl1_0 
    left join
        projects p1_0 
            on p1_0.id=tl1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        tl1_0.user_id=?
2023-10-12 15:52:46 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:52:46 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
2023-10-12 15:52:46 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:52:46 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:52:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:52:46 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:52:46 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:52:46 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:52:46 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:53:37 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:53:37 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:53:37 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:53:42 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 22580 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:53:42 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:53:43 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:53:43 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 5 JPA repository interfaces.
2023-10-12 15:53:43 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:53:43 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:53:43 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:53:43 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:53:43 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1287 ms
2023-10-12 15:53:43 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:53:43 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:53:44 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:53:44 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:53:44 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:53:44 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70f85235
2023-10-12 15:53:44 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:53:44 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:53:45 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:53:45 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:53:45 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:53:46 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:53:46 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:53:46 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:53:46 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:53:46 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:53:46 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:53:46 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:53:46 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:53:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:53:46 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:53:46 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@663cc8c9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51c15508, org.springframework.security.web.context.SecurityContextHolderFilter@c6653e, org.springframework.security.web.header.HeaderWriterFilter@3f910f36, org.springframework.security.web.authentication.logout.LogoutFilter@6b7ebac1, vn.tholv.web.config.filter.JwtAuthFilter@fef2768, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@788fa91f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6dd7af2f, org.springframework.security.web.session.SessionManagementFilter@2f83467, org.springframework.security.web.access.ExceptionTranslationFilter@c950fd, org.springframework.security.web.access.intercept.AuthorizationFilter@1254a3cd]
2023-10-12 15:53:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:53:46 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:53:46 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:53:46 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.703 seconds (process running for 5.316)
2023-10-12 15:53:53 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:53:53 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:53:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:53:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:53:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:53:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@53b579d2
2023-10-12 15:53:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6347f9cc
2023-10-12 15:53:53 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:53:53 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-10-12 15:53:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:53:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:53:54 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:53:54 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:53:54 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:53:54 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:53:54 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:53:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:53:54 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:53:54 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:53:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:53:54 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@69b9935f]]
2023-10-12 15:53:54 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:54:15 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:54:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:54:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:54:19 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 4488 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:54:19 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:54:20 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:54:20 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 5 JPA repository interfaces.
2023-10-12 15:54:21 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:54:21 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:54:21 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:54:21 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:54:21 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1275 ms
2023-10-12 15:54:21 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:54:21 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:54:21 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:54:21 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:54:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:54:21 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71039ce1
2023-10-12 15:54:21 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:54:22 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:54:23 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:54:23 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:54:23 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:54:23 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:54:23 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:54:23 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:54:23 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:54:23 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:54:23 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:54:23 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:54:23 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:54:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:54:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:54:24 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@40c92dfa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16b713dd, org.springframework.security.web.context.SecurityContextHolderFilter@7a91027c, org.springframework.security.web.header.HeaderWriterFilter@5f510929, org.springframework.security.web.authentication.logout.LogoutFilter@16160a37, vn.tholv.web.config.filter.JwtAuthFilter@29a1dab3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2446597e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8dd0c70, org.springframework.security.web.session.SessionManagementFilter@1e186006, org.springframework.security.web.access.ExceptionTranslationFilter@3791160a, org.springframework.security.web.access.intercept.AuthorizationFilter@1a598e30]
2023-10-12 15:54:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:54:24 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:54:24 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:54:24 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.134 seconds (process running for 5.786)
2023-10-12 15:54:24 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:54:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:54:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:54:29 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 29908 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:54:29 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:54:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:54:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 5 JPA repository interfaces.
2023-10-12 15:54:30 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:54:30 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:54:30 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:54:30 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:54:30 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1279 ms
2023-10-12 15:54:30 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:54:30 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:54:30 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:54:31 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:54:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:54:31 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1f408ab6
2023-10-12 15:54:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:54:31 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:54:32 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:54:32 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:54:33 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:54:33 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:54:33 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:54:33 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:54:33 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:54:33 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:54:33 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:54:33 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:54:33 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:54:34 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:54:34 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:54:34 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f510929, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55a2ca5e, org.springframework.security.web.context.SecurityContextHolderFilter@5b312863, org.springframework.security.web.header.HeaderWriterFilter@f9d8285, org.springframework.security.web.authentication.logout.LogoutFilter@4f0f56f5, vn.tholv.web.config.filter.JwtAuthFilter@22a8c837, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b6fc231, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b7ebac1, org.springframework.security.web.session.SessionManagementFilter@4010f232, org.springframework.security.web.access.ExceptionTranslationFilter@3e8eea59, org.springframework.security.web.access.intercept.AuthorizationFilter@870413c]
2023-10-12 15:54:34 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:54:34 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:54:34 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:54:34 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.656 seconds (process running for 6.394)
2023-10-12 15:55:55 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:55:55 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1ff52a71
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1de6f29d
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:55:55 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 15:55:55 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:55:55 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:55:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:55:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:55:55 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:55:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:55:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:55:55 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:55:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:55:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:55:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@46705af1]]
2023-10-12 15:55:55 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:55:55 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:55:55 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:55:55 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
2023-10-12 15:55:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:55:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:55:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:55:55 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:55:55 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:55:55 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:55:55 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:56:18 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:56:18 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:56:18 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:56:23 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 1252 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:56:23 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:56:23 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:56:23 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 5 JPA repository interfaces.
2023-10-12 15:56:24 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:56:24 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:56:24 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:56:24 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:56:24 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1223 ms
2023-10-12 15:56:24 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:56:24 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:56:24 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:56:24 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:56:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:56:25 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d2e6f62
2023-10-12 15:56:25 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:56:25 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:56:25 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:56:26 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:56:26 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:56:26 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:56:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:56:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:56:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:56:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:56:26 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:56:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:56:26 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:56:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:56:26 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:56:26 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@11e75942, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23c61c1b, org.springframework.security.web.context.SecurityContextHolderFilter@f9d8285, org.springframework.security.web.header.HeaderWriterFilter@6c75c5e8, org.springframework.security.web.authentication.logout.LogoutFilter@7ffb0bb4, vn.tholv.web.config.filter.JwtAuthFilter@225fb75e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e243122, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a5c115b, org.springframework.security.web.session.SessionManagementFilter@5f26fc4d, org.springframework.security.web.access.ExceptionTranslationFilter@6dd7af2f, org.springframework.security.web.access.intercept.AuthorizationFilter@20724c21]
2023-10-12 15:56:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:56:27 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:56:27 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:56:27 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.613 seconds (process running for 5.508)
2023-10-12 15:56:31 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:56:31 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3b235623
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4ccf1d3e
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:56:31 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 15:56:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:56:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:56:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:56:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:56:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:56:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:56:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:56:31 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:56:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:56:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:56:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@8de5c2a]]
2023-10-12 15:56:31 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 15:56:31 DEBUG org.hibernate.SQL - 
    select
        tl1_0.project_id,
        tl1_0.id,
        tl1_0.created_date,
        tl1_0.description,
        tl1_0.modified_date,
        tl1_0.name,
        tl1_0.priority,
        tl1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p2_0.id,
        p2_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        l1_0.username,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        u1_0.username 
    from
        tasks tl1_0 
    left join
        users u1_0 
            on u1_0.id=tl1_0.user_id 
    left join
        projects p2_0 
            on p2_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p2_0.leader_id 
    where
        tl1_0.project_id=?
2023-10-12 15:56:31 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at jakarta.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:97)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:116)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:662)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:608)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:238)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:161)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1357)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-10-12 15:56:31 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1017)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-10-12 15:56:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:56:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - "INCLUDE" dispatch for GET "/api/error", parameters={}
2023-10-12 15:56:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 15:56:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Found 'Content-Type:application/json' in response
2023-10-12 15:56:31 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 15:56:31 ICT 2023, status=200, error=OK, path=/api/project/findAll}]
2023-10-12 15:56:31 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "INCLUDE" dispatch, status 200
2023-10-12 15:56:42 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:56:42 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:56:42 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:56:46 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 8308 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:56:46 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:56:46 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:56:46 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 5 JPA repository interfaces.
2023-10-12 15:56:47 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:56:47 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:56:47 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:56:47 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:56:47 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1219 ms
2023-10-12 15:56:47 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:56:47 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:56:47 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:56:47 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:56:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:56:47 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a69f9d
2023-10-12 15:56:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:56:48 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:56:48 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 15:56:48 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:56:49 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 15:56:49 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 15:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 15:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 15:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 15:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 15:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 15:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 15:56:49 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 15:56:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 15:56:49 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 15:56:49 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7236213e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b3dc752, org.springframework.security.web.context.SecurityContextHolderFilter@870413c, org.springframework.security.web.header.HeaderWriterFilter@20724c21, org.springframework.security.web.authentication.logout.LogoutFilter@69af938b, vn.tholv.web.config.filter.JwtAuthFilter@2d2fe68a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d9cac6e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f510929, org.springframework.security.web.session.SessionManagementFilter@431f8830, org.springframework.security.web.access.ExceptionTranslationFilter@1a23136f, org.springframework.security.web.access.intercept.AuthorizationFilter@58922a00]
2023-10-12 15:56:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 15:56:49 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 15:56:50 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 15:56:50 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.289 seconds (process running for 4.938)
2023-10-12 15:56:53 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 15:56:53 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 15:56:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 15:56:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 15:56:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 15:56:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1b4ade78
2023-10-12 15:56:53 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@507187c1
2023-10-12 15:56:53 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 15:56:53 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2023-10-12 15:56:53 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 15:56:53 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 15:56:53 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 15:56:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 15:56:53 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 15:56:53 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 15:56:53 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 15:56:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 15:56:53 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 15:56:53 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 15:56:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 15:56:53 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@8de5c2a]]
2023-10-12 15:56:53 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 15:58:10 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 15:58:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:58:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:58:15 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 26536 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 15:58:15 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 15:58:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 15:58:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 5 JPA repository interfaces.
2023-10-12 15:58:16 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 15:58:16 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 15:58:16 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 15:58:16 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 15:58:16 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1161 ms
2023-10-12 15:58:16 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 15:58:16 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 15:58:16 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 15:58:16 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 15:58:16 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 15:58:17 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2d9de284
2023-10-12 15:58:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 15:58:17 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 15:58:17 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.InstantiationException: Could not instantiate entity 'vn.tholv.web.core.base.entity.Project' due to: null
2023-10-12 15:58:17 ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthFilter' defined in file [C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main\vn\tholv\web\config\filter\JwtAuthFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'userServiceImpl' defined in file [C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main\vn\tholv\web\core\base\service\UserServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'roleDao' defined in vn.tholv.web.core.base.dao.RoleDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
2023-10-12 15:58:17 INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2023-10-12 15:58:17 WARN  o.a.c.loader.WebappClassLoaderBase - The web application [api] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.8.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:58:17 WARN  o.a.c.loader.WebappClassLoaderBase - The web application [api] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.8.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.8.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.8.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.8.1/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.8.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.8.1/java.lang.Thread.run(Thread.java:833)
2023-10-12 15:58:17 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2023-10-12 15:58:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 15:58:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 15:58:17 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-10-12 15:58:18 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at vn.tholv.web.WebApplication.main(WebApplication.java:9)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:491)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:213)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthFilter' defined in file [C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main\vn\tholv\web\config\filter\JwtAuthFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'userServiceImpl' defined in file [C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main\vn\tholv\web\core\base\service\UserServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'roleDao' defined in vn.tholv.web.core.base.dao.RoleDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl' defined in file [C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main\vn\tholv\web\core\base\service\UserServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'roleDao' defined in vn.tholv.web.core.base.dao.RoleDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 56 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleDao' defined in vn.tholv.web.core.base.dao.RoleDao defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 70 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 84 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.InstantiationException: Could not instantiate entity 'vn.tholv.web.core.base.entity.Project' due to: null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1775)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 96 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.InstantiationException: Could not instantiate entity 'vn.tholv.web.core.base.entity.Project' due to: null
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	... 103 common frames omitted
Caused by: org.hibernate.InstantiationException: Could not instantiate entity 'vn.tholv.web.core.base.entity.Project' due to: null
	at org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard.instantiate(EntityInstantiatorPojoStandard.java:100)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$15(AbstractEntityPersister.java:5052)
	at org.hibernate.internal.util.LazyValue.getValue(LazyValue.java:30)
	at org.hibernate.engine.internal.UnsavedValueFactory.getUnsavedIdentifierValue(UnsavedValueFactory.java:45)
	at org.hibernate.metamodel.mapping.internal.BasicEntityIdentifierMappingImpl.<init>(BasicEntityIdentifierMappingImpl.java:119)
	at org.hibernate.persister.entity.AbstractEntityPersister.generateIdentifierMapping(AbstractEntityPersister.java:5397)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$16(AbstractEntityPersister.java:5057)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.processSubPart(MappingModelCreationProcess.java:163)
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareMappingModel(AbstractEntityPersister.java:5055)
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareMappingModel(AbstractEntityPersister.java:4895)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:84)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:197)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:323)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:273)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 107 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard.instantiate(EntityInstantiatorPojoStandard.java:97)
	... 126 common frames omitted
Caused by: java.lang.NullPointerException: Cannot invoke "java.util.List.size()" because "this.memberList" is null
	at vn.tholv.web.core.base.entity.Project.<init>(Project.java:43)
	... 132 common frames omitted
2023-10-12 16:09:12 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 19888 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 16:09:12 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 16:09:13 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 16:09:13 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 5 JPA repository interfaces.
2023-10-12 16:09:14 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 16:09:14 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 16:09:14 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 16:09:14 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 16:09:14 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1177 ms
2023-10-12 16:09:14 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 16:09:14 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 16:09:14 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 16:09:14 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 16:09:14 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 16:09:14 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2bdcfcf
2023-10-12 16:09:14 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 16:09:15 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 16:09:16 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 16:09:16 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:09:17 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 16:09:17 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 16:09:17 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 16:09:17 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 16:09:17 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 16:09:17 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 16:09:17 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 16:09:17 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 16:09:17 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 16:09:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 16:09:17 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 16:09:17 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f943847, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c376b44, org.springframework.security.web.context.SecurityContextHolderFilter@29280ca6, org.springframework.security.web.header.HeaderWriterFilter@1299fed3, org.springframework.security.web.authentication.logout.LogoutFilter@5f5076f9, vn.tholv.web.config.filter.JwtAuthFilter@7d836c4a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@32d3b965, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7fb2645b, org.springframework.security.web.session.SessionManagementFilter@3b3dc752, org.springframework.security.web.access.ExceptionTranslationFilter@2d91147b, org.springframework.security.web.access.intercept.AuthorizationFilter@76b6bad3]
2023-10-12 16:09:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 16:09:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 16:09:17 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 16:09:17 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.373 seconds (process running for 6.005)
2023-10-12 16:09:22 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 16:09:22 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 16:09:22 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 16:09:22 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 16:09:22 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 16:09:22 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@702ab027
2023-10-12 16:09:22 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@44ec6637
2023-10-12 16:09:22 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 16:09:22 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 16:09:22 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:09:22 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:09:22 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:09:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:23 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:23 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:09:23 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:09:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:09:23 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:09:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:09:23 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:09:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@78264d7f]]
2023-10-12 16:09:23 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:32 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:09:32 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:09:32 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:09:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:32 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:32 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:09:32 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:09:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:09:32 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:09:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:09:32 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:09:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@76965ee6]]
2023-10-12 16:09:32 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/2
2023-10-12 16:09:33 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:09:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:09:33 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/2
2023-10-12 16:09:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:09:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:09:33 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/2
2023-10-12 16:09:33 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:09:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:09:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:09:33 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@3d641f57]]
2023-10-12 16:09:33 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:33 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/2
2023-10-12 16:09:33 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/2", parameters={}
2023-10-12 16:09:33 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 16:09:33 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:09:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:33 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Project@122bbe0]
2023-10-12 16:09:33 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:36 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:09:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:36 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:36 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:09:36 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:09:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:09:36 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:09:36 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:09:36 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:09:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@364d7828]]
2023-10-12 16:09:36 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:39 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:09:39 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:09:39 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:09:39 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:09:39 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:09:39 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:09:39 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:09:39 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:09:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:09:39 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:09:39 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:39 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:39 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@501bad03]]
2023-10-12 16:09:39 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:39 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:09:39 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:09:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:09:39 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:09:39 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:09:39 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:09:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@33244e33]]
2023-10-12 16:09:39 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:42 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:09:42 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:09:42 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:09:42 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:42 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:42 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:09:42 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:09:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:09:42 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:09:42 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:09:42 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:09:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:42 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@2fded6a1]]
2023-10-12 16:09:42 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/1
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/1
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:09:45 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:09:45 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/1
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@507f2d07]]
2023-10-12 16:09:45 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:09:45 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:09:45 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:09:45 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/1
2023-10-12 16:09:45 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/1", parameters={}
2023-10-12 16:09:45 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:09:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:45 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        t1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p3_0.id,
        p3_0.created_date,
        l3_0.id,
        l3_0.created_date,
        l3_0.email,
        l3_0.modified_date,
        l3_0.password,
        l3_0.project_id,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        l3_0.username,
        p3_0.modified_date,
        p3_0.money,
        p3_0.name,
        p3_0.start_date,
        rl3_0.user_id,
        rl3_1.id,
        rl3_1.created_date,
        rl3_1.modified_date,
        rl3_1.name,
        u1_0.username 
    from
        tasks t1_0 
    left join
        projects p1_0 
            on p1_0.id=t1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        users u1_0 
            on u1_0.id=t1_0.user_id 
    left join
        projects p3_0 
            on p3_0.id=u1_0.project_id 
    left join
        users l3_0 
            on l3_0.id=p3_0.leader_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on l3_0.id=rl2_0.user_id 
    left join
        (user_role rl3_0 
    join
        roles rl3_1 
            on rl3_1.id=rl3_0.role_id) 
        on u1_0.id=rl3_0.user_id 
    where
        t1_0.id=?
2023-10-12 16:09:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@36f35c80]]
2023-10-12 16:09:45 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@681d68b0]
2023-10-12 16:09:45 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/update
2023-10-12 16:09:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/update
2023-10-12 16:09:50 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /task/update
2023-10-12 16:09:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:50 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /task/update
2023-10-12 16:09:50 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/task/update", parameters={}
2023-10-12 16:09:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#update(BaseEntity)
2023-10-12 16:09:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Task@4e65e354]
2023-10-12 16:09:50 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        t1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p3_0.id,
        p3_0.created_date,
        l3_0.id,
        l3_0.created_date,
        l3_0.email,
        l3_0.modified_date,
        l3_0.password,
        l3_0.project_id,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        l3_0.username,
        p3_0.modified_date,
        p3_0.money,
        p3_0.name,
        p3_0.start_date,
        rl3_0.user_id,
        rl3_1.id,
        rl3_1.created_date,
        rl3_1.modified_date,
        rl3_1.name,
        u1_0.username 
    from
        tasks t1_0 
    left join
        projects p1_0 
            on p1_0.id=t1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        users u1_0 
            on u1_0.id=t1_0.user_id 
    left join
        projects p3_0 
            on p3_0.id=u1_0.project_id 
    left join
        users l3_0 
            on l3_0.id=p3_0.leader_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on l3_0.id=rl2_0.user_id 
    left join
        (user_role rl3_0 
    join
        roles rl3_1 
            on rl3_1.id=rl3_0.role_id) 
        on u1_0.id=rl3_0.user_id 
    where
        t1_0.id=?
2023-10-12 16:09:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@7845bc2e]
2023-10-12 16:09:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:50 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:09:50 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:09:50 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:09:50 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:50 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:50 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:09:50 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:09:50 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:09:50 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:09:50 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:09:50 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:09:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:50 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@5ba67b77]]
2023-10-12 16:09:50 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:52 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:09:52 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:09:52 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:09:52 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:52 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:52 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:09:52 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:09:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:09:52 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:09:52 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:09:52 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:09:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@5ce87279]]
2023-10-12 16:09:52 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/1
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/1
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/1
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:09:55 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:09:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:09:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@61e5bdfe]]
2023-10-12 16:09:55 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:09:55 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:09:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:09:55 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/1
2023-10-12 16:09:55 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/1", parameters={}
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:09:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        t1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p3_0.id,
        p3_0.created_date,
        l3_0.id,
        l3_0.created_date,
        l3_0.email,
        l3_0.modified_date,
        l3_0.password,
        l3_0.project_id,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        l3_0.username,
        p3_0.modified_date,
        p3_0.money,
        p3_0.name,
        p3_0.start_date,
        rl3_0.user_id,
        rl3_1.id,
        rl3_1.created_date,
        rl3_1.modified_date,
        rl3_1.name,
        u1_0.username 
    from
        tasks t1_0 
    left join
        projects p1_0 
            on p1_0.id=t1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        users u1_0 
            on u1_0.id=t1_0.user_id 
    left join
        projects p3_0 
            on p3_0.id=u1_0.project_id 
    left join
        users l3_0 
            on l3_0.id=p3_0.leader_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on l3_0.id=rl2_0.user_id 
    left join
        (user_role rl3_0 
    join
        roles rl3_1 
            on rl3_1.id=rl3_0.role_id) 
        on u1_0.id=rl3_0.user_id 
    where
        t1_0.id=?
2023-10-12 16:09:55 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:09:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@1a158649]
2023-10-12 16:09:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:09:55 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:09:55 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@66340d90]]
2023-10-12 16:09:55 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:10:01 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/update
2023-10-12 16:10:01 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/update
2023-10-12 16:10:01 DEBUG o.s.security.web.FilterChainProxy - Securing PUT /task/update
2023-10-12 16:10:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:10:01 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:10:01 DEBUG o.s.security.web.FilterChainProxy - Secured PUT /task/update
2023-10-12 16:10:01 DEBUG o.s.web.servlet.DispatcherServlet - PUT "/api/task/update", parameters={}
2023-10-12 16:10:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#update(BaseEntity)
2023-10-12 16:10:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Task@4b946104]
2023-10-12 16:10:01 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        t1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p3_0.id,
        p3_0.created_date,
        l3_0.id,
        l3_0.created_date,
        l3_0.email,
        l3_0.modified_date,
        l3_0.password,
        l3_0.project_id,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        l3_0.username,
        p3_0.modified_date,
        p3_0.money,
        p3_0.name,
        p3_0.start_date,
        rl3_0.user_id,
        rl3_1.id,
        rl3_1.created_date,
        rl3_1.modified_date,
        rl3_1.name,
        u1_0.username 
    from
        tasks t1_0 
    left join
        projects p1_0 
            on p1_0.id=t1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        users u1_0 
            on u1_0.id=t1_0.user_id 
    left join
        projects p3_0 
            on p3_0.id=u1_0.project_id 
    left join
        users l3_0 
            on l3_0.id=p3_0.leader_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on l3_0.id=rl2_0.user_id 
    left join
        (user_role rl3_0 
    join
        roles rl3_1 
            on rl3_1.id=rl3_0.role_id) 
        on u1_0.id=rl3_0.user_id 
    where
        t1_0.id=?
2023-10-12 16:10:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:10:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@38ef4b45]
2023-10-12 16:10:01 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:10:01 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:10:01 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:10:01 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:10:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:10:01 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:10:01 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:10:01 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:10:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:10:01 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:10:01 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:10:01 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:10:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:10:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@2d00d23e]]
2023-10-12 16:10:01 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:11:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:11:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:11:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:11:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:11:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:11:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:11:18 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:11:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:11:18 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:11:18 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:11:18 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:11:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:11:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@6a894fc3]]
2023-10-12 16:11:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:01 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:14:01 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:14:01 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:14:01 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:01 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:01 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:14:01 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:14:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:14:01 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:14:01 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:14:01 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:14:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:01 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@27a056df]]
2023-10-12 16:14:01 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:06 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:14:06 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:14:06 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:14:06 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:06 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:06 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:14:06 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:14:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:14:06 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:14:06 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:14:06 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:14:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:06 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@1b6ed06e]]
2023-10-12 16:14:06 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/1
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/1
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/1
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:14:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:14:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@6fdd2373]]
2023-10-12 16:14:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:14:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/1
2023-10-12 16:14:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:14:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:14:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/1", parameters={}
2023-10-12 16:14:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        t1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p3_0.id,
        p3_0.created_date,
        l3_0.id,
        l3_0.created_date,
        l3_0.email,
        l3_0.modified_date,
        l3_0.password,
        l3_0.project_id,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        l3_0.username,
        p3_0.modified_date,
        p3_0.money,
        p3_0.name,
        p3_0.start_date,
        rl3_0.user_id,
        rl3_1.id,
        rl3_1.created_date,
        rl3_1.modified_date,
        rl3_1.name,
        u1_0.username 
    from
        tasks t1_0 
    left join
        projects p1_0 
            on p1_0.id=t1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        users u1_0 
            on u1_0.id=t1_0.user_id 
    left join
        projects p3_0 
            on p3_0.id=u1_0.project_id 
    left join
        users l3_0 
            on l3_0.id=p3_0.leader_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on l3_0.id=rl2_0.user_id 
    left join
        (user_role rl3_0 
    join
        roles rl3_1 
            on rl3_1.id=rl3_0.role_id) 
        on u1_0.id=rl3_0.user_id 
    where
        t1_0.id=?
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:14:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:09 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:14:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@57d3ca2f]
2023-10-12 16:14:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@a31bbb2]]
2023-10-12 16:14:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:14 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:14:14 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:14:14 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:14:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:14 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:14 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:14:14 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:14:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:14:14 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:14:14 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:14:14 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:14:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@7d58aae9]]
2023-10-12 16:14:14 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/1
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/1
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/1
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:14:17 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:14:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1b9dbc87]]
2023-10-12 16:14:17 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:14:17 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/1
2023-10-12 16:14:17 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:14:17 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/1", parameters={}
2023-10-12 16:14:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:14:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        t1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p3_0.id,
        p3_0.created_date,
        l3_0.id,
        l3_0.created_date,
        l3_0.email,
        l3_0.modified_date,
        l3_0.password,
        l3_0.project_id,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        l3_0.username,
        p3_0.modified_date,
        p3_0.money,
        p3_0.name,
        p3_0.start_date,
        rl3_0.user_id,
        rl3_1.id,
        rl3_1.created_date,
        rl3_1.modified_date,
        rl3_1.name,
        u1_0.username 
    from
        tasks t1_0 
    left join
        projects p1_0 
            on p1_0.id=t1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        users u1_0 
            on u1_0.id=t1_0.user_id 
    left join
        projects p3_0 
            on p3_0.id=u1_0.project_id 
    left join
        users l3_0 
            on l3_0.id=p3_0.leader_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on l3_0.id=rl2_0.user_id 
    left join
        (user_role rl3_0 
    join
        roles rl3_1 
            on rl3_1.id=rl3_0.role_id) 
        on u1_0.id=rl3_0.user_id 
    where
        t1_0.id=?
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:14:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:17 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:14:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@4fe533ed]
2023-10-12 16:14:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:17 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:17 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@27124111]]
2023-10-12 16:14:17 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:20 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:14:20 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:14:20 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:14:20 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:20 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:20 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:14:20 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:14:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:14:20 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:14:20 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:14:20 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:14:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:20 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@71cac6af]]
2023-10-12 16:14:20 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/1
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/1
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/1
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:14:23 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:14:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@2e15d158]]
2023-10-12 16:14:23 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:14:23 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/1
2023-10-12 16:14:23 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:14:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:14:23 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/1", parameters={}
2023-10-12 16:14:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findById(Object)
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        t1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p3_0.id,
        p3_0.created_date,
        l3_0.id,
        l3_0.created_date,
        l3_0.email,
        l3_0.modified_date,
        l3_0.password,
        l3_0.project_id,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        l3_0.username,
        p3_0.modified_date,
        p3_0.money,
        p3_0.name,
        p3_0.start_date,
        rl3_0.user_id,
        rl3_1.id,
        rl3_1.created_date,
        rl3_1.modified_date,
        rl3_1.name,
        u1_0.username 
    from
        tasks t1_0 
    left join
        projects p1_0 
            on p1_0.id=t1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        users u1_0 
            on u1_0.id=t1_0.user_id 
    left join
        projects p3_0 
            on p3_0.id=u1_0.project_id 
    left join
        users l3_0 
            on l3_0.id=p3_0.leader_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on l3_0.id=rl2_0.user_id 
    left join
        (user_role rl3_0 
    join
        roles rl3_1 
            on rl3_1.id=rl3_0.role_id) 
        on u1_0.id=rl3_0.user_id 
    where
        t1_0.id=?
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:14:23 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:14:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@6652d144]
2023-10-12 16:14:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@512c9505]]
2023-10-12 16:14:23 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:23 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:26 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:14:26 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:14:26 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:14:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:26 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:14:26 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:14:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:14:26 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:14:26 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:14:26 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:14:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@2b1eea15]]
2023-10-12 16:14:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:14:46 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:14:46 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:14:46 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:14:46 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:14:46 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:14:46 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:14:46 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:14:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:14:46 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:14:46 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:14:46 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:14:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:14:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@68834efa]]
2023-10-12 16:14:46 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:15:15 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:15:15 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:15:15 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:15:15 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:15:15 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:15:15 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:15:15 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:15:15 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:15:15 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:15:15 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:15:15 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:15:15 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:15:15 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@44619014]]
2023-10-12 16:15:15 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:15:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:15:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:15:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:15:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:15:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:15:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:15:18 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:15:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:15:18 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:15:18 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:15:18 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:15:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:15:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@2060b32f]]
2023-10-12 16:15:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:15:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:15:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:15:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:15:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:15:58 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:15:58 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:15:58 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:15:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:15:58 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:15:58 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:15:58 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:15:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:15:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@633fb5c]]
2023-10-12 16:15:58 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:16:10 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:16:10 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:16:10 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:16:10 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:16:10 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:16:10 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:16:10 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:16:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:16:10 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:16:10 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:16:10 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:16:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:16:10 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@f98b1bc]]
2023-10-12 16:16:10 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:16:51 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:16:51 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:16:51 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:16:51 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:16:51 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:16:51 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:16:51 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:16:51 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:16:51 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:16:51 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:16:51 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:16:51 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:16:51 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@43fb3a68]]
2023-10-12 16:16:51 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:17:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:17:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:17:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:17:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:17:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:17:18 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:17:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:17:18 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:17:18 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:17:18 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:17:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@c900248]]
2023-10-12 16:17:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:17:19 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:17:19 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:17:19 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:17:19 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:17:19 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:19 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:17:19 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:17:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:17:19 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:17:19 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:17:19 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:17:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:19 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@49e5c694]]
2023-10-12 16:17:19 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:17:26 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:17:26 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:17:26 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:17:26 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:17:26 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:26 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:17:26 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:17:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:17:26 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:17:26 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:17:26 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:17:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@17f895fa]]
2023-10-12 16:17:26 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:17:29 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:17:29 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:17:29 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:17:29 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:17:29 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:29 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:17:29 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:17:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:17:29 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:17:29 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:17:29 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:17:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@3da36d96]]
2023-10-12 16:17:29 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/NaN
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/NaN
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:17:30 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:17:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/NaN
2023-10-12 16:17:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:17:30 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@54d5cec0]]
2023-10-12 16:17:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:17:30 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:17:30 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/NaN
2023-10-12 16:17:30 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/NaN", parameters={}
2023-10-12 16:17:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findById(Object)
2023-10-12 16:17:30 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 16:17:30 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 16:17:30 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 16:17:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 16:17:30 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 16:17:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:17:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:30 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:17:30 ICT 2023, status=400, error=Bad Request, path=/api/project/NaN}]
2023-10-12 16:17:30 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 16:17:32 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:17:32 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:17:32 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:17:32 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:17:32 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:17:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:17:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:17:32 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:32 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:17:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1e351f74]]
2023-10-12 16:17:32 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:17:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:17:32 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:32 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:17:32 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:17:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:17:32 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:17:32 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:17:32 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:17:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@6572bfc8]]
2023-10-12 16:17:32 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:17:39 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/save
2023-10-12 16:17:39 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/save
2023-10-12 16:17:39 DEBUG o.s.security.web.FilterChainProxy - Securing POST /task/save
2023-10-12 16:17:39 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:17:39 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:39 DEBUG o.s.security.web.FilterChainProxy - Secured POST /task/save
2023-10-12 16:17:39 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/task/save", parameters={}
2023-10-12 16:17:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#save(BaseEntity)
2023-10-12 16:17:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Task@19eaf441]
2023-10-12 16:17:39 DEBUG org.hibernate.SQL - 
    insert 
    into
        tasks
        (created_date, description, modified_date, name, priority, project_id, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2023-10-12 16:17:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@19eaf441]
2023-10-12 16:17:39 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:17:39 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:17:39 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:17:39 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:17:39 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:17:39 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:17:39 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:17:39 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:17:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:17:39 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:17:39 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:17:39 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:17:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:17:39 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@65d18488, vn.tholv.web.core.base.entity.Task@6d97f132]]
2023-10-12 16:17:39 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:19:31 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:19:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 16:19:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 16:19:37 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 27688 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 16:19:37 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 16:19:38 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 16:19:38 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 5 JPA repository interfaces.
2023-10-12 16:19:39 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 16:19:39 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 16:19:39 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 16:19:39 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 16:19:39 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1385 ms
2023-10-12 16:19:39 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 16:19:39 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 16:19:39 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 16:19:39 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 16:19:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 16:19:39 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@44a93f8a
2023-10-12 16:19:39 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 16:19:39 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 16:19:40 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 16:19:41 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:19:41 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 16:19:42 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 16:19:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 16:19:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 16:19:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 16:19:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 16:19:42 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 16:19:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 16:19:42 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 16:19:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 16:19:42 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 16:19:42 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1a598e30, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6768dc74, org.springframework.security.web.context.SecurityContextHolderFilter@1e186006, org.springframework.security.web.header.HeaderWriterFilter@870413c, org.springframework.security.web.authentication.logout.LogoutFilter@7c7a4986, vn.tholv.web.config.filter.JwtAuthFilter@390978, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f047670, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a91027c, org.springframework.security.web.session.SessionManagementFilter@1a0e5c0c, org.springframework.security.web.access.ExceptionTranslationFilter@75bbe39d, org.springframework.security.web.access.intercept.AuthorizationFilter@5da41d02]
2023-10-12 16:19:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 16:19:42 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 16:19:43 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 16:19:43 INFO  vn.tholv.web.WebApplication - Started WebApplication in 6.281 seconds (process running for 7.322)
2023-10-12 16:19:52 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 16:19:52 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 16:19:52 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 16:19:52 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 16:19:52 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 16:19:52 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@623be2a0
2023-10-12 16:19:52 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@a4e1ca7
2023-10-12 16:19:52 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 16:19:52 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-10-12 16:19:52 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:19:52 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:19:52 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:19:52 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:19:52 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:19:52 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:19:52 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:19:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:19:52 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:19:52 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:19:52 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:19:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:19:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@64b4db62, vn.tholv.web.core.base.entity.Task@6466084]]
2023-10-12 16:19:52 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:19:56 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/2
2023-10-12 16:19:56 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/2
2023-10-12 16:19:56 DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /task/2
2023-10-12 16:19:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:19:56 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:19:56 DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /task/2
2023-10-12 16:19:56 DEBUG o.s.web.servlet.DispatcherServlet - DELETE "/api/task/2", parameters={}
2023-10-12 16:19:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#deleteById(Object)
2023-10-12 16:19:56 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        t1_0.status,
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p3_0.id,
        p3_0.created_date,
        l3_0.id,
        l3_0.created_date,
        l3_0.email,
        l3_0.modified_date,
        l3_0.password,
        l3_0.project_id,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        l3_0.username,
        p3_0.modified_date,
        p3_0.money,
        p3_0.name,
        p3_0.start_date,
        rl3_0.user_id,
        rl3_1.id,
        rl3_1.created_date,
        rl3_1.modified_date,
        rl3_1.name,
        u1_0.username 
    from
        tasks t1_0 
    left join
        projects p1_0 
            on p1_0.id=t1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        users u1_0 
            on u1_0.id=t1_0.user_id 
    left join
        projects p3_0 
            on p3_0.id=u1_0.project_id 
    left join
        users l3_0 
            on l3_0.id=p3_0.leader_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on l3_0.id=rl2_0.user_id 
    left join
        (user_role rl3_0 
    join
        roles rl3_1 
            on rl3_1.id=rl3_0.role_id) 
        on u1_0.id=rl3_0.user_id 
    where
        t1_0.id=?
2023-10-12 16:19:56 DEBUG org.hibernate.SQL - 
    delete 
    from
        tasks 
    where
        id=?
2023-10-12 16:19:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:19:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2023-10-12 16:19:56 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:19:56 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:19:56 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:19:56 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:19:56 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:19:56 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:19:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:19:56 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:19:56 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:19:56 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:19:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:19:56 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@6a9708a3]]
2023-10-12 16:19:56 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:19:58 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:19:58 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:19:58 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:19:58 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:19:58 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:19:58 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:19:58 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:19:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:19:58 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:19:58 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:19:58 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:19:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:19:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@297304c3]]
2023-10-12 16:19:58 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:20:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:20:03 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /project/findAll
2023-10-12 16:20:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:20:03 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /project/findAll
2023-10-12 16:20:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:20:03 DEBUG o.s.security.web.FilterChainProxy - Securing GET /project/findAll
2023-10-12 16:20:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:20:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:20:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:20:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:20:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:20:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:20:03 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:20:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:20:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5c9584b0]]
2023-10-12 16:20:03 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:20:03 DEBUG o.s.security.web.FilterChainProxy - Secured GET /project/findAll
2023-10-12 16:20:03 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/project/findAll", parameters={}
2023-10-12 16:20:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.ProjectController#findAll()
2023-10-12 16:20:03 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        p1_0.leader_id,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0
2023-10-12 16:20:03 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        l1_0.project_id,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date,
        rl2_0.user_id,
        rl2_1.id,
        rl2_1.created_date,
        rl2_1.modified_date,
        rl2_1.name,
        u1_0.username 
    from
        users u1_0 
    left join
        projects p1_0 
            on p1_0.id=u1_0.project_id 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    left join
        (user_role rl2_0 
    join
        roles rl2_1 
            on rl2_1.id=rl2_0.role_id) 
        on u1_0.id=rl2_0.user_id 
    where
        u1_0.id=?
2023-10-12 16:20:03 DEBUG org.hibernate.SQL - 
    select
        ml1_0.project_id,
        ml1_0.id,
        ml1_0.created_date,
        ml1_0.email,
        ml1_0.modified_date,
        ml1_0.password,
        ml1_0.username 
    from
        users ml1_0 
    where
        ml1_0.project_id=?
2023-10-12 16:20:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:20:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Project@2bbe266a]]
2023-10-12 16:20:03 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:20:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/save
2023-10-12 16:20:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/save
2023-10-12 16:20:09 DEBUG o.s.security.web.FilterChainProxy - Securing POST /task/save
2023-10-12 16:20:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:20:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:20:09 DEBUG o.s.security.web.FilterChainProxy - Secured POST /task/save
2023-10-12 16:20:09 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/task/save", parameters={}
2023-10-12 16:20:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#save(BaseEntity)
2023-10-12 16:20:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.Task@50c0d6a3]
2023-10-12 16:20:09 DEBUG org.hibernate.SQL - 
    insert 
    into
        tasks
        (created_date, description, modified_date, name, priority, project_id, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2023-10-12 16:20:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:20:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.Task@50c0d6a3]
2023-10-12 16:20:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:20:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:20:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:20:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:20:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:20:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:20:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:20:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:20:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:20:09 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:20:09 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:20:09 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:20:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:20:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@5daf7299, vn.tholv.web.core.base.entity.Task@3ef8654f]]
2023-10-12 16:20:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:21:52 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:21:52 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:21:52 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:21:52 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:21:52 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:21:52 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:21:52 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:21:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:21:52 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:21:52 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:21:52 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:21:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:21:52 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@7df2da31, vn.tholv.web.core.base.entity.Task@7b0016a0]]
2023-10-12 16:21:52 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:22:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:22:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:22:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:22:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:22:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:22:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:22:18 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:22:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:22:18 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:22:18 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:22:18 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:22:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:22:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@55d951f5, vn.tholv.web.core.base.entity.Task@abc295d]]
2023-10-12 16:22:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:31:07 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:31:07 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:31:07 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:31:07 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:31:07 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:31:07 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:31:07 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:31:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:31:07 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:31:07 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:31:07 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:31:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:31:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@3d0bc1b0, vn.tholv.web.core.base.entity.Task@405fdd90]]
2023-10-12 16:31:07 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:31:41 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:31:41 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:31:41 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:31:41 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:31:41 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:31:41 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:31:41 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:31:41 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:31:41 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:31:41 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:31:41 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:31:41 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:31:41 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@5bfef0d3, vn.tholv.web.core.base.entity.Task@7bac38f6]]
2023-10-12 16:31:41 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:31:44 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /task/findAll
2023-10-12 16:31:44 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /task/findAll
2023-10-12 16:31:44 DEBUG o.s.security.web.FilterChainProxy - Securing GET /task/findAll
2023-10-12 16:31:44 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:31:44 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:31:44 DEBUG o.s.security.web.FilterChainProxy - Secured GET /task/findAll
2023-10-12 16:31:44 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/task/findAll", parameters={}
2023-10-12 16:31:44 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.TaskController#findAll()
2023-10-12 16:31:44 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0
2023-10-12 16:31:44 DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_date,
        l1_0.id,
        l1_0.created_date,
        l1_0.email,
        l1_0.modified_date,
        l1_0.password,
        p2_0.id,
        p2_0.created_date,
        p2_0.leader_id,
        p2_0.modified_date,
        p2_0.money,
        p2_0.name,
        p2_0.start_date,
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name,
        l1_0.username,
        p1_0.modified_date,
        p1_0.money,
        p1_0.name,
        p1_0.start_date 
    from
        projects p1_0 
    left join
        users l1_0 
            on l1_0.id=p1_0.leader_id 
    left join
        projects p2_0 
            on p2_0.id=l1_0.project_id 
    left join
        (user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id) 
        on l1_0.id=rl1_0.user_id 
    where
        p1_0.id=?
2023-10-12 16:31:44 DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.created_date,
        t1_0.description,
        t1_0.modified_date,
        t1_0.name,
        t1_0.priority,
        t1_0.project_id,
        t1_0.status,
        t1_0.user_id 
    from
        tasks t1_0 
    where
        1=1 
    order by
        t1_0.priority,
        t1_0.id desc
2023-10-12 16:31:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:31:44 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.Task@2ca2a5dd, vn.tholv.web.core.base.entity.Task@57fd6b8a]]
2023-10-12 16:31:44 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:31:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:31:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:31:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:31:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:31:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:31:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:31:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:31:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:31:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:31:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@246e82c]]
2023-10-12 16:31:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:31:51 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/NaN
2023-10-12 16:31:51 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:31:51 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/NaN
2023-10-12 16:31:51 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:31:51 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:31:51 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:31:51 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:31:51 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/NaN
2023-10-12 16:31:51 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:31:51 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:31:51 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@75b6a87d]]
2023-10-12 16:31:51 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:31:51 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:31:51 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:31:51 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/NaN
2023-10-12 16:31:51 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/NaN", parameters={}
2023-10-12 16:31:51 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findById(Object)
2023-10-12 16:31:51 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 16:31:51 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 16:31:51 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 16:31:51 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 16:31:51 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 16:31:51 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 16:31:51 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:31:51 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:31:51 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:31:51 ICT 2023, status=400, error=Bad Request, path=/api/user/NaN}]
2023-10-12 16:31:51 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/NaN
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/NaN
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/NaN
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:34:23 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:34:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:34:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:34:23 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:34:23 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:34:23 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:34:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:34:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@311d4fed]]
2023-10-12 16:34:23 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/NaN
2023-10-12 16:34:23 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/NaN", parameters={}
2023-10-12 16:34:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findById(Object)
2023-10-12 16:34:23 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 16:34:23 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 16:34:23 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 16:34:23 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 16:34:23 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 16:34:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:34:23 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:34:23 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:34:23 ICT 2023, status=400, error=Bad Request, path=/api/user/NaN}]
2023-10-12 16:34:23 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/NaN
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/NaN
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/NaN
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:34:49 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:34:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:34:49 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:34:49 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:34:49 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:34:49 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:34:49 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:34:49 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@bff9504]]
2023-10-12 16:34:49 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/NaN
2023-10-12 16:34:49 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/NaN", parameters={}
2023-10-12 16:34:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findById(Object)
2023-10-12 16:34:49 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 16:34:49 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 16:34:49 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 16:34:49 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 16:34:49 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 16:34:49 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:34:49 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:34:49 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:34:49 ICT 2023, status=400, error=Bad Request, path=/api/user/NaN}]
2023-10-12 16:34:49 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/NaN
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/NaN
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/NaN
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:35:18 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:35:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:35:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:35:18 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:35:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:35:18 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:35:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:35:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@12881f72]]
2023-10-12 16:35:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/NaN
2023-10-12 16:35:18 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/NaN", parameters={}
2023-10-12 16:35:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findById(Object)
2023-10-12 16:35:18 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 16:35:18 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 16:35:18 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 16:35:18 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 16:35:18 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 16:35:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:35:18 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:35:18 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:35:18 ICT 2023, status=400, error=Bad Request, path=/api/user/NaN}]
2023-10-12 16:35:18 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 16:38:34 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/NaN
2023-10-12 16:38:34 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:38:34 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:38:34 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/NaN
2023-10-12 16:38:34 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/NaN
2023-10-12 16:38:34 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:38:34 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:38:34 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:38:34 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:38:34 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:38:34 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:38:34 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:38:35 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:38:35 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:38:35 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@79dd0a73]]
2023-10-12 16:38:35 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:38:35 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/NaN
2023-10-12 16:38:35 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/NaN", parameters={}
2023-10-12 16:38:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findById(Object)
2023-10-12 16:38:35 DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public T vn.tholv.web.core.base.controller.AbstractController.findById(ID) throws java.lang.Exception: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"
2023-10-12 16:38:35 WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "NaN"]
2023-10-12 16:38:35 DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2023-10-12 16:38:35 DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2023-10-12 16:38:35 DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2023-10-12 16:38:35 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/api/error", parameters={}
2023-10-12 16:38:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:38:35 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:38:35 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:38:35 ICT 2023, status=400, error=Bad Request, path=/api/user/NaN}]
2023-10-12 16:38:35 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 400
2023-10-12 16:39:30 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:39:30 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:39:30 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:39:30 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:39:30 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:39:30 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:39:30 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:39:30 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:39:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:39:30 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@711d0724]]
2023-10-12 16:39:30 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:41:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:41:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:41:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:41:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:41:31 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:41:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:41:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:41:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:41:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:41:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4686ae31]]
2023-10-12 16:41:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:42:08 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:42:08 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:42:08 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:42:08 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:42:08 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:42:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:42:08 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:42:08 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:42:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:42:08 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@e8d65bd]]
2023-10-12 16:42:08 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:43:24 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:43:24 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:43:24 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:43:24 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:43:24 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:43:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:43:24 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:43:24 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:43:24 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:43:24 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@1ea7a367]]
2023-10-12 16:43:24 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:44:11 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:44:11 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:44:11 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:44:11 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:44:11 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:44:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:44:11 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:44:11 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:44:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:44:11 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@35ad78e5]]
2023-10-12 16:44:11 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:44:14 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:44:14 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:44:14 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:44:14 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:44:14 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:44:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:44:14 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:44:14 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:44:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:44:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@ba90955]]
2023-10-12 16:44:14 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:44:32 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 16:44:32 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 16:44:32 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 16:44:32 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 16:44:32 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 16:44:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 16:44:32 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@73d0063e]
2023-10-12 16:44:32 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Captcha không hợp lệ
2023-10-12 16:44:32 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: java.lang.RuntimeException: Captcha không hợp lệ] with root cause
java.lang.RuntimeException: Captcha không hợp lệ
	at vn.tholv.web.core.base.service.UserServiceImpl.validate(UserServiceImpl.java:97)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:38)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:22)
	at vn.tholv.web.core.base.service.core.AbstractService.save(AbstractService.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at vn.tholv.web.core.base.service.UserServiceImpl$$SpringCGLIB$$0.save(<generated>)
	at vn.tholv.web.core.base.controller.AbstractController.save(AbstractController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:253)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 16:44:32 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 16:44:32 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 16:44:32 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 16:44:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:44:32 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:44:32 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:44:32 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 16:44:32 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 16:45:25 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:45:25 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 16:45:25 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 16:45:31 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 1680 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 16:45:31 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 16:45:32 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 16:45:32 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 5 JPA repository interfaces.
2023-10-12 16:45:32 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 16:45:32 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 16:45:32 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 16:45:32 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 16:45:32 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1310 ms
2023-10-12 16:45:32 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 16:45:33 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 16:45:33 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 16:45:33 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 16:45:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 16:45:33 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1f408ab6
2023-10-12 16:45:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 16:45:33 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 16:45:34 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 16:45:34 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:45:35 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 16:45:35 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 16:45:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 16:45:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 16:45:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 16:45:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 16:45:35 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 16:45:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 16:45:35 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 16:45:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 16:45:35 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 16:45:35 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@16160a37, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@380e470a, org.springframework.security.web.context.SecurityContextHolderFilter@64710a6, org.springframework.security.web.header.HeaderWriterFilter@4f0f56f5, org.springframework.security.web.authentication.logout.LogoutFilter@69c335c4, vn.tholv.web.config.filter.JwtAuthFilter@df04d12, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47f677a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2472ba04, org.springframework.security.web.session.SessionManagementFilter@6abca7a6, org.springframework.security.web.access.ExceptionTranslationFilter@773cc551, org.springframework.security.web.access.intercept.AuthorizationFilter@7c7a4986]
2023-10-12 16:45:35 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 16:45:35 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 16:45:36 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 16:45:36 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.194 seconds (process running for 5.936)
2023-10-12 16:46:38 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 16:46:38 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 16:46:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 16:46:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 16:46:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 16:46:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7da59f6e
2023-10-12 16:46:38 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@393d4e34
2023-10-12 16:46:38 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 16:46:38 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 41 ms
2023-10-12 16:46:38 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:46:38 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:46:38 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:46:38 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:46:38 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:46:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:46:38 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:46:38 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:46:38 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:46:38 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@33b1e59f]]
2023-10-12 16:46:39 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:46:46 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 16:46:46 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 16:46:46 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 16:46:46 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 16:46:46 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 16:46:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 16:46:46 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@3c990ad]
2023-10-12 16:46:46 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Captcha không hợp lệ
2023-10-12 16:46:46 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: java.lang.RuntimeException: Captcha không hợp lệ] with root cause
java.lang.RuntimeException: Captcha không hợp lệ
	at vn.tholv.web.core.base.service.UserServiceImpl.validate(UserServiceImpl.java:98)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:39)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:22)
	at vn.tholv.web.core.base.service.core.AbstractService.save(AbstractService.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at vn.tholv.web.core.base.service.UserServiceImpl$$SpringCGLIB$$0.save(<generated>)
	at vn.tholv.web.core.base.controller.AbstractController.save(AbstractController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:253)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 16:46:46 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 16:46:46 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 16:46:46 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 16:46:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:46:46 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:46:46 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:46:46 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 16:46:46 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 16:46:58 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:46:58 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 16:46:58 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 16:47:02 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 17100 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 16:47:02 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 16:47:02 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 16:47:02 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86 ms. Found 5 JPA repository interfaces.
2023-10-12 16:47:03 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 16:47:03 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 16:47:03 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 16:47:03 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 16:47:03 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1470 ms
2023-10-12 16:47:03 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 16:47:03 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 16:47:03 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 16:47:03 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 16:47:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 16:47:04 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1f0e2bdc
2023-10-12 16:47:04 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 16:47:04 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 16:47:05 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 16:47:05 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:47:05 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 16:47:05 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 16:47:05 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 16:47:05 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 16:47:05 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 16:47:05 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 16:47:05 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 16:47:05 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 16:47:05 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 16:47:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 16:47:06 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 16:47:06 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@17d837ab, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e77f29e, org.springframework.security.web.context.SecurityContextHolderFilter@5bb45afc, org.springframework.security.web.header.HeaderWriterFilter@75bbe39d, org.springframework.security.web.authentication.logout.LogoutFilter@6ad4ef13, vn.tholv.web.config.filter.JwtAuthFilter@70b0dc92, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e186006, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@761ea1f5, org.springframework.security.web.session.SessionManagementFilter@47f677a4, org.springframework.security.web.access.ExceptionTranslationFilter@7692c0e9, org.springframework.security.web.access.intercept.AuthorizationFilter@17b9c9ff]
2023-10-12 16:47:06 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 16:47:06 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 16:47:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 16:47:06 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.891 seconds (process running for 5.921)
2023-10-12 16:47:36 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 16:47:36 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 16:47:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 16:47:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 16:47:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 16:47:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@ab595e8
2023-10-12 16:47:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@542c6165
2023-10-12 16:47:36 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 16:47:36 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 16:47:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:47:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:47:36 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:47:36 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:47:36 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:47:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:47:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:47:37 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:47:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:47:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5ec25366]]
2023-10-12 16:47:37 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:47:43 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 16:47:43 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 16:47:43 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 16:47:43 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 16:47:43 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 16:47:43 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 16:47:43 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@340a6964]
2023-10-12 16:47:43 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Captcha không hợp lệ
2023-10-12 16:47:43 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: java.lang.RuntimeException: Captcha không hợp lệ] with root cause
java.lang.RuntimeException: Captcha không hợp lệ
	at vn.tholv.web.core.base.service.UserServiceImpl.validate(UserServiceImpl.java:98)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:39)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:22)
	at vn.tholv.web.core.base.service.core.AbstractService.save(AbstractService.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at vn.tholv.web.core.base.service.UserServiceImpl$$SpringCGLIB$$0.save(<generated>)
	at vn.tholv.web.core.base.controller.AbstractController.save(AbstractController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:253)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 16:47:43 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 16:47:43 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 16:47:43 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 16:47:43 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:47:43 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:47:43 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:47:43 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 16:47:43 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 16:48:23 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 16:48:23 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 16:48:23 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 16:48:23 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 16:48:23 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 16:48:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 16:48:23 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@65898e2e]
2023-10-12 16:48:48 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Captcha không hợp lệ
2023-10-12 16:48:48 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 16:48:48 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 16:48:48 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 16:48:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:48:48 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:48:48 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:48:48 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 16:48:48 DEBUG o.s.web.servlet.DispatcherServlet - Unresolved failure from "ERROR" dispatch: org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
2023-10-12 16:48:48 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:48:48 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 16:48:48 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 16:48:51 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 26372 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 16:48:51 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 16:48:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 16:48:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 5 JPA repository interfaces.
2023-10-12 16:48:52 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 16:48:52 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 16:48:52 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 16:48:52 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 16:48:52 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1320 ms
2023-10-12 16:48:53 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 16:48:53 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 16:48:53 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 16:48:53 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 16:48:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 16:48:53 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5dd6a4c8
2023-10-12 16:48:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 16:48:53 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 16:48:54 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 16:48:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:48:55 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 16:48:55 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 16:48:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 16:48:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 16:48:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 16:48:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 16:48:55 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 16:48:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 16:48:55 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 16:48:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 16:48:55 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 16:48:55 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@27260f9c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25031fd4, org.springframework.security.web.context.SecurityContextHolderFilter@69cc3370, org.springframework.security.web.header.HeaderWriterFilter@949165f, org.springframework.security.web.authentication.logout.LogoutFilter@4e77f29e, vn.tholv.web.config.filter.JwtAuthFilter@725490dd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18419ab7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f93ec02, org.springframework.security.web.session.SessionManagementFilter@8dd0c70, org.springframework.security.web.access.ExceptionTranslationFilter@45f4c27c, org.springframework.security.web.access.intercept.AuthorizationFilter@58fb5b8f]
2023-10-12 16:48:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 16:48:55 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 16:48:55 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 16:48:55 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.865 seconds (process running for 5.618)
2023-10-12 16:48:59 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 16:48:59 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 16:48:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 16:48:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 16:48:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 16:48:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6a087c72
2023-10-12 16:48:59 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@195d4780
2023-10-12 16:48:59 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 16:48:59 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 16:48:59 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:48:59 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:48:59 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:48:59 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:48:59 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:48:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:48:59 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:48:59 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:48:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:48:59 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@44ea1e4f]]
2023-10-12 16:48:59 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:49:05 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /v2/auth
2023-10-12 16:49:05 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /v2/auth
2023-10-12 16:49:05 DEBUG o.s.security.web.FilterChainProxy - Securing POST /v2/auth
2023-10-12 16:49:05 DEBUG o.s.security.web.FilterChainProxy - Secured POST /v2/auth
2023-10-12 16:49:05 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/v2/auth", parameters={}
2023-10-12 16:49:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.v2.AuthController#authenticateAndGetToken(AuthRequest)
2023-10-12 16:49:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.dto.AuthRequest@10c42206]
2023-10-12 16:49:05 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:49:05 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:49:05 DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2023-10-12 16:49:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:49:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{username=tholv0508, refreshToken=Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0aG9sdjA1MDgiLCJpYXQiOjE2OT (truncated)...]
2023-10-12 16:49:05 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:49:09 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:49:09 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:49:09 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:49:09 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:49:09 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:49:09 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:49:09 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:49:09 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:49:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:49:09 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@3ecdc5fd]]
2023-10-12 16:49:09 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:49:14 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 16:49:14 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 16:49:14 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 16:49:14 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 16:49:14 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 16:49:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 16:49:14 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@2306e0d7]
2023-10-12 16:49:14 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Captcha không hợp lệ
2023-10-12 16:49:14 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: java.lang.RuntimeException: Captcha không hợp lệ] with root cause
java.lang.RuntimeException: Captcha không hợp lệ
	at vn.tholv.web.core.base.service.UserServiceImpl.validate(UserServiceImpl.java:98)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:39)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:22)
	at vn.tholv.web.core.base.service.core.AbstractService.save(AbstractService.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at vn.tholv.web.core.base.service.UserServiceImpl$$SpringCGLIB$$0.save(<generated>)
	at vn.tholv.web.core.base.controller.AbstractController.save(AbstractController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:253)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 16:49:14 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 16:49:14 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 16:49:14 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 16:49:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:49:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:49:14 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:49:14 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 16:49:14 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 16:50:28 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:50:28 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:50:28 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:50:28 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:50:28 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:50:28 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:50:28 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:50:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:50:28 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:50:28 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:50:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:50:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@4fcdf5a0]]
2023-10-12 16:50:29 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:50:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 16:50:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 16:50:36 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 16:50:36 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 16:50:36 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 16:50:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 16:50:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@1b430571]
2023-10-12 16:50:36 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Captcha không hợp lệ
2023-10-12 16:50:36 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: java.lang.RuntimeException: Captcha không hợp lệ] with root cause
java.lang.RuntimeException: Captcha không hợp lệ
	at vn.tholv.web.core.base.service.UserServiceImpl.validate(UserServiceImpl.java:98)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:39)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:22)
	at vn.tholv.web.core.base.service.core.AbstractService.save(AbstractService.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at vn.tholv.web.core.base.service.UserServiceImpl$$SpringCGLIB$$0.save(<generated>)
	at vn.tholv.web.core.base.controller.AbstractController.save(AbstractController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:253)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 16:50:36 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 16:50:36 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 16:50:36 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 16:50:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:50:36 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:50:36 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:50:36 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 16:50:36 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 16:51:17 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:51:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 16:51:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 16:51:21 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 1616 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 16:51:21 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 16:51:22 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 16:51:22 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 5 JPA repository interfaces.
2023-10-12 16:51:22 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 16:51:22 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 16:51:22 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 16:51:22 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 16:51:22 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1413 ms
2023-10-12 16:51:22 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 16:51:22 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 16:51:22 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 16:51:23 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 16:51:23 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 16:51:23 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@682266d8
2023-10-12 16:51:23 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 16:51:23 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 16:51:24 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 16:51:24 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:51:24 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 16:51:25 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 16:51:25 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 16:51:25 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 16:51:25 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 16:51:25 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 16:51:25 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 16:51:25 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 16:51:25 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 16:51:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 16:51:25 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 16:51:25 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4e77f29e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a598e30, org.springframework.security.web.context.SecurityContextHolderFilter@2f0b5d79, org.springframework.security.web.header.HeaderWriterFilter@6805415d, org.springframework.security.web.authentication.logout.LogoutFilter@29280ca6, vn.tholv.web.config.filter.JwtAuthFilter@309d54ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@761ea1f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f047670, org.springframework.security.web.session.SessionManagementFilter@2472ba04, org.springframework.security.web.access.ExceptionTranslationFilter@431f8830, org.springframework.security.web.access.intercept.AuthorizationFilter@7b45f7ef]
2023-10-12 16:51:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 16:51:25 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 16:51:25 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 16:51:25 INFO  vn.tholv.web.WebApplication - Started WebApplication in 4.754 seconds (process running for 5.525)
2023-10-12 16:51:31 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 16:51:31 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 16:51:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 16:51:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 16:51:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 16:51:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@170937fe
2023-10-12 16:51:31 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@539f2fec
2023-10-12 16:51:31 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 16:51:31 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 16:51:31 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:51:31 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:51:31 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:51:31 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:51:31 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:51:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:51:31 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:51:31 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:51:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:51:31 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5bccaf6a]]
2023-10-12 16:51:31 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:51:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 16:51:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 16:51:36 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 16:51:36 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 16:51:36 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 16:51:36 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 16:51:36 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@55b9fd70]
2023-10-12 16:52:04 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt
2023-10-12 16:52:04 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt] with root cause
java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt
	at vn.tholv.web.core.base.service.UserServiceImpl.validate(UserServiceImpl.java:75)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:39)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:22)
	at vn.tholv.web.core.base.service.core.AbstractService.save(AbstractService.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at vn.tholv.web.core.base.service.UserServiceImpl$$SpringCGLIB$$0.save(<generated>)
	at vn.tholv.web.core.base.controller.AbstractController.save(AbstractController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:253)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 16:52:04 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 16:52:04 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 16:52:04 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 16:52:04 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:52:04 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:52:04 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:52:04 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 16:52:04 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 16:52:07 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 16:52:07 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 16:52:07 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 16:52:07 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 16:52:07 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 16:52:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 16:52:07 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@3448b10a]
2023-10-12 16:52:54 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt
2023-10-12 16:52:54 ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed: java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt] with root cause
java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt
	at vn.tholv.web.core.base.service.UserServiceImpl.validate(UserServiceImpl.java:75)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:39)
	at vn.tholv.web.core.base.service.UserServiceImpl.validateInsert(UserServiceImpl.java:22)
	at vn.tholv.web.core.base.service.core.AbstractService.save(AbstractService.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at vn.tholv.web.core.base.service.UserServiceImpl$$SpringCGLIB$$0.save(<generated>)
	at vn.tholv.web.core.base.controller.AbstractController.save(AbstractController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:253)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:918)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at vn.tholv.web.config.filter.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-10-12 16:52:54 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 16:52:54 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 16:52:54 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 16:52:54 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:52:54 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:52:54 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:52:54 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 16:52:54 DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2023-10-12 16:52:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:52:54 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 16:52:54 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 16:52:57 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 15544 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 16:52:57 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 16:52:58 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 16:52:58 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 5 JPA repository interfaces.
2023-10-12 16:52:59 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 16:52:59 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 16:52:59 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 16:52:59 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 16:52:59 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1350 ms
2023-10-12 16:52:59 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 16:52:59 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 16:52:59 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 16:52:59 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 16:52:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 16:52:59 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6248cfab
2023-10-12 16:52:59 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 16:52:59 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 16:53:01 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 16:53:01 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:53:01 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 16:53:01 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 16:53:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 16:53:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 16:53:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 16:53:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 16:53:01 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 16:53:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 16:53:01 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 16:53:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
2023-10-12 16:53:01 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 16:53:02 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@183435c0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@69862a1, org.springframework.security.web.context.SecurityContextHolderFilter@6f53f5a4, org.springframework.security.web.header.HeaderWriterFilter@1f591b2e, org.springframework.security.web.authentication.logout.LogoutFilter@78d52d4c, vn.tholv.web.config.filter.JwtAuthFilter@5325674a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d50b4c4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7860a014, org.springframework.security.web.session.SessionManagementFilter@1c0a4f87, org.springframework.security.web.access.ExceptionTranslationFilter@35d4fecf, org.springframework.security.web.access.intercept.AuthorizationFilter@d426e01]
2023-10-12 16:53:02 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 16:53:02 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 16:53:02 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 16:53:02 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.105 seconds (process running for 5.772)
2023-10-12 16:53:12 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 16:53:12 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 16:53:12 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 16:53:12 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 16:53:12 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 16:53:12 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5ae6119b
2023-10-12 16:53:12 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@373fb666
2023-10-12 16:53:12 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 16:53:12 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-10-12 16:53:12 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/save
2023-10-12 16:53:18 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/save
2023-10-12 16:55:03 WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m3s364ms611µs200ns).
2023-10-12 16:55:03 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/save
2023-10-12 16:55:03 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/save
2023-10-12 16:55:03 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/save", parameters={}
2023-10-12 16:55:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#save(BaseEntity)
2023-10-12 16:55:03 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@6b9a315f]
2023-10-12 16:55:03 DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Tên đăng nhập phải có độ dài từ 6 đến 20 ký tự và không chứa ký tự đặc biệt
2023-10-12 16:55:03 DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2023-10-12 16:55:03 DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2023-10-12 16:55:03 DEBUG o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/api/error", parameters={}
2023-10-12 16:55:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-10-12 16:55:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:55:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Thu Oct 12 16:55:03 ICT 2023, status=500, error=Internal Server Error, path=/api/user/sav (truncated)...]
2023-10-12 16:55:03 DEBUG o.s.web.servlet.DispatcherServlet - Unresolved failure from "ERROR" dispatch: org.apache.catalina.connector.ClientAbortException: java.nio.channels.ClosedChannelException
2023-10-12 16:55:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:55:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 16:55:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 16:55:08 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 30228 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 16:55:08 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 16:55:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 16:55:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 102 ms. Found 5 JPA repository interfaces.
2023-10-12 16:55:09 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 16:55:09 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 16:55:09 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 16:55:09 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 16:55:09 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1274 ms
2023-10-12 16:55:09 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 16:55:09 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 16:55:09 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 16:55:09 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 16:55:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 16:55:10 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5efe5b25
2023-10-12 16:55:10 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 16:55:10 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 16:55:11 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 16:55:11 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:55:11 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 16:55:11 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 16:55:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 16:55:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 16:55:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 16:55:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 16:55:12 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 16:55:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 16:55:12 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 16:55:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 31 mappings in 'requestMappingHandlerMapping'
2023-10-12 16:55:12 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 16:55:12 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b45f7ef, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5da41d02, org.springframework.security.web.context.SecurityContextHolderFilter@2472ba04, org.springframework.security.web.header.HeaderWriterFilter@7692c0e9, org.springframework.security.web.authentication.logout.LogoutFilter@3b3dc752, vn.tholv.web.config.filter.JwtAuthFilter@70680f88, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bb45afc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f0b5d79, org.springframework.security.web.session.SessionManagementFilter@64710a6, org.springframework.security.web.access.ExceptionTranslationFilter@6edb093f, org.springframework.security.web.access.intercept.AuthorizationFilter@16160a37]
2023-10-12 16:55:12 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 16:55:12 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 16:55:12 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 16:55:12 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.061 seconds (process running for 5.675)
2023-10-12 16:55:14 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:55:14 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-10-12 16:55:14 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-10-12 16:55:17 INFO  vn.tholv.web.WebApplication - Starting WebApplication using Java 17.0.8.1 with PID 28292 (C:\Users\Admin\Desktop\angular\angular\web\build\classes\java\main started by Admin in C:\Users\Admin\Desktop\angular\angular\web)
2023-10-12 16:55:17 INFO  vn.tholv.web.WebApplication - No active profile set, falling back to 1 default profile: "default"
2023-10-12 16:55:18 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-12 16:55:18 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 98 ms. Found 5 JPA repository interfaces.
2023-10-12 16:55:19 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9999 (http)
2023-10-12 16:55:19 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-10-12 16:55:19 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2023-10-12 16:55:19 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2023-10-12 16:55:19 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1687 ms
2023-10-12 16:55:19 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-12 16:55:19 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2023-10-12 16:55:19 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2023-10-12 16:55:19 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-12 16:55:19 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-10-12 16:55:20 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2bdcfcf
2023-10-12 16:55:20 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-10-12 16:55:20 WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2023-10-12 16:55:21 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-10-12 16:55:21 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-12 16:55:21 DEBUG o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2023-10-12 16:55:22 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-10-12 16:55:22 INFO  v.t.w.c.override.util.SecurityPath - path security: /v2/auth
2023-10-12 16:55:22 INFO  v.t.w.c.override.util.SecurityPath - path security: /story/**
2023-10-12 16:55:22 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/save
2023-10-12 16:55:22 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/findAll
2023-10-12 16:55:22 INFO  v.t.w.c.override.util.SecurityPath - path security: **
2023-10-12 16:55:22 INFO  v.t.w.c.override.util.SecurityPath - path security: /task/**
2023-10-12 16:55:22 INFO  v.t.w.c.override.util.SecurityPath - path security: /user/create
2023-10-12 16:55:22 INFO  v.t.w.c.override.util.SecurityPath - path security: /project/**
2023-10-12 16:55:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 31 mappings in 'requestMappingHandlerMapping'
2023-10-12 16:55:22 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-10-12 16:55:22 INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7e8f97dd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@183435c0, org.springframework.security.web.context.SecurityContextHolderFilter@19439ec4, org.springframework.security.web.header.HeaderWriterFilter@22195d06, org.springframework.security.web.authentication.logout.LogoutFilter@7da0587a, vn.tholv.web.config.filter.JwtAuthFilter@58b30e3e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21ebf9be, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d50b4c4, org.springframework.security.web.session.SessionManagementFilter@77902ed6, org.springframework.security.web.access.ExceptionTranslationFilter@54faa040, org.springframework.security.web.access.intercept.AuthorizationFilter@225890bc]
2023-10-12 16:55:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-10-12 16:55:22 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-10-12 16:55:22 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9999 (http) with context path '/api'
2023-10-12 16:55:22 INFO  vn.tholv.web.WebApplication - Started WebApplication in 5.62 seconds (process running for 6.33)
2023-10-12 16:55:36 INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-10-12 16:55:36 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-10-12 16:55:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2023-10-12 16:55:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2023-10-12 16:55:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2023-10-12 16:55:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@58ca1cad
2023-10-12 16:55:36 DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2040732f
2023-10-12 16:55:36 DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-10-12 16:55:36 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-10-12 16:55:36 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:55:36 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:55:37 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:55:37 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:55:37 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:55:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:55:37 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:55:37 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:55:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:55:37 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@9603db5]]
2023-10-12 16:55:37 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:55:38 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:55:38 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:55:38 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:55:38 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:55:38 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:55:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:55:38 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:55:38 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:55:38 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:55:38 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@cfc5e94]]
2023-10-12 16:55:38 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:55:45 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/create
2023-10-12 16:55:45 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/create
2023-10-12 16:55:45 DEBUG o.s.security.web.FilterChainProxy - Securing POST /user/create
2023-10-12 16:55:45 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2023-10-12 16:55:45 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:55:45 DEBUG o.s.security.web.FilterChainProxy - Secured POST /user/create
2023-10-12 16:55:45 DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/user/create", parameters={}
2023-10-12 16:55:45 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#create(User)
2023-10-12 16:55:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [vn.tholv.web.core.base.entity.User@5805ca7a]
2023-10-12 16:55:45 DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_date, email, modified_date, password, project_id, username) 
    values
        (?, ?, ?, ?, ?, ?)
2023-10-12 16:55:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:55:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [vn.tholv.web.core.base.entity.User@5805ca7a]
2023-10-12 16:55:45 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:55:45 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:55:45 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:55:45 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:55:45 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:55:45 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:55:45 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:55:45 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:55:45 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:55:45 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:55:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:55:45 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@5f3fa422, vn.tholv.web.core.base.entity.User@51ad80fb]]
2023-10-12 16:55:45 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2023-10-12 16:55:48 DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /user/findAll
2023-10-12 16:55:48 DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /user/findAll
2023-10-12 16:55:48 DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/findAll
2023-10-12 16:55:48 DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/findAll
2023-10-12 16:55:48 DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/user/findAll", parameters={}
2023-10-12 16:55:48 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to vn.tholv.web.controller.UserController#findAll()
2023-10-12 16:55:48 DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_date,
        u1_0.email,
        u1_0.modified_date,
        u1_0.password,
        u1_0.project_id,
        u1_0.username 
    from
        users u1_0
2023-10-12 16:55:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:55:48 DEBUG org.hibernate.SQL - 
    select
        rl1_0.user_id,
        rl1_1.id,
        rl1_1.created_date,
        rl1_1.modified_date,
        rl1_1.name 
    from
        user_role rl1_0 
    join
        roles rl1_1 
            on rl1_1.id=rl1_0.role_id 
    where
        rl1_0.user_id=?
2023-10-12 16:55:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-10-12 16:55:48 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[vn.tholv.web.core.base.entity.User@72d7dbfd, vn.tholv.web.core.base.entity.User@483c742a]]
2023-10-12 16:55:48 DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
